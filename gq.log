2021-12-09 00:47:07,032 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 10916 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 00:47:07,036 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 00:47:07,036 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 00:47:07,876 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 00:47:07,954 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 70 ms. Found 5 JPA repository interfaces.
2021-12-09 00:47:08,418 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 00:47:08,427 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 00:47:08,431 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 00:47:08,432 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 00:47:08,535 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 00:47:08,535 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1461 ms
2021-12-09 00:47:08,723 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 00:47:08,773 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 00:47:08,874 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 00:47:08,893 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5d05f453
2021-12-09 00:47:08,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5d05f453
2021-12-09 00:47:08,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5d05f453
2021-12-09 00:47:08,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@664e848c
2021-12-09 00:47:08,895 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5d508d22
2021-12-09 00:47:08,895 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@7da635c0
2021-12-09 00:47:08,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@faea4da
2021-12-09 00:47:08,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@faea4da
2021-12-09 00:47:08,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@faea4da
2021-12-09 00:47:08,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@3a7c678b
2021-12-09 00:47:08,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@3a7c678b
2021-12-09 00:47:08,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a7c678b
2021-12-09 00:47:08,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@25b38203
2021-12-09 00:47:08,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@25b38203
2021-12-09 00:47:08,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@25b38203
2021-12-09 00:47:08,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@64e7d698
2021-12-09 00:47:08,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@64e7d698
2021-12-09 00:47:08,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64e7d698
2021-12-09 00:47:08,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@570ba13
2021-12-09 00:47:08,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@570ba13
2021-12-09 00:47:08,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@570ba13
2021-12-09 00:47:08,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@733fb462
2021-12-09 00:47:08,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@733fb462
2021-12-09 00:47:08,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@733fb462
2021-12-09 00:47:08,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@459003a0
2021-12-09 00:47:08,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@459003a0
2021-12-09 00:47:08,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@459003a0
2021-12-09 00:47:08,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3fcbc766
2021-12-09 00:47:08,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3fcbc766
2021-12-09 00:47:08,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b57c345
2021-12-09 00:47:08,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b57c345
2021-12-09 00:47:08,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@2f79f192
2021-12-09 00:47:08,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@2f79f192
2021-12-09 00:47:08,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e1eb85f
2021-12-09 00:47:08,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31723307
2021-12-09 00:47:08,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@48268eec
2021-12-09 00:47:08,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@48268eec
2021-12-09 00:47:08,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@2e71240b
2021-12-09 00:47:08,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e71240b
2021-12-09 00:47:08,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@63a9c661
2021-12-09 00:47:08,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@63a9c661
2021-12-09 00:47:08,906 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@43471a7e
2021-12-09 00:47:08,906 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@43471a7e
2021-12-09 00:47:08,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@198536f6
2021-12-09 00:47:08,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@198536f6
2021-12-09 00:47:08,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@594131f2
2021-12-09 00:47:08,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@594131f2
2021-12-09 00:47:08,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f9ab79d
2021-12-09 00:47:08,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f9ab79d
2021-12-09 00:47:08,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ea00de
2021-12-09 00:47:08,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ea00de
2021-12-09 00:47:08,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36c7cbe1
2021-12-09 00:47:08,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36c7cbe1
2021-12-09 00:47:08,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@2c1f8dbd
2021-12-09 00:47:08,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2c1f8dbd
2021-12-09 00:47:08,912 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@4b56b031
2021-12-09 00:47:08,912 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b56b031
2021-12-09 00:47:08,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@32227215
2021-12-09 00:47:08,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@32227215
2021-12-09 00:47:08,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@32227215
2021-12-09 00:47:08,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3d2f3dcb
2021-12-09 00:47:08,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@bd3eff4
2021-12-09 00:47:08,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@bd3eff4
2021-12-09 00:47:08,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@bd3eff4
2021-12-09 00:47:08,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4b87074a
2021-12-09 00:47:08,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5b35c7d
2021-12-09 00:47:08,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@51c65a43
2021-12-09 00:47:08,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c65a43
2021-12-09 00:47:08,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@4e80a001
2021-12-09 00:47:08,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e80a001
2021-12-09 00:47:08,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d15c0a1
2021-12-09 00:47:08,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d15c0a1
2021-12-09 00:47:08,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@4d98e41b
2021-12-09 00:47:08,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d98e41b
2021-12-09 00:47:08,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@541bf968
2021-12-09 00:47:08,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@541bf968
2021-12-09 00:47:08,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@61149fa5
2021-12-09 00:47:08,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@3d9f0a5
2021-12-09 00:47:08,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@3d9f0a5
2021-12-09 00:47:08,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@3d9f0a5
2021-12-09 00:47:08,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@58f31629
2021-12-09 00:47:08,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@58f31629
2021-12-09 00:47:08,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@58f31629
2021-12-09 00:47:08,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@4971f459
2021-12-09 00:47:08,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@1416ff46
2021-12-09 00:47:08,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@54af3cb9
2021-12-09 00:47:08,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@54af3cb9
2021-12-09 00:47:08,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@54af3cb9
2021-12-09 00:47:08,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11d4d979
2021-12-09 00:47:08,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11d4d979
2021-12-09 00:47:08,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11d4d979
2021-12-09 00:47:08,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@2a140ce5
2021-12-09 00:47:08,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@7a083b96
2021-12-09 00:47:08,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@4dfdfe7d
2021-12-09 00:47:08,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4dfdfe7d
2021-12-09 00:47:08,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@226de93c
2021-12-09 00:47:08,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@415a3f6a
2021-12-09 00:47:08,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@415a3f6a
2021-12-09 00:47:08,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@60e1d87c
2021-12-09 00:47:08,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@60e1d87c
2021-12-09 00:47:08,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10177794
2021-12-09 00:47:08,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@647b9364
2021-12-09 00:47:08,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@4315c28c
2021-12-09 00:47:08,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@3e1f1046
2021-12-09 00:47:08,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e1f1046
2021-12-09 00:47:08,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b251fb9
2021-12-09 00:47:08,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@67d4c48d
2021-12-09 00:47:08,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@230a73f2
2021-12-09 00:47:08,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b97b3d2
2021-12-09 00:47:08,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@383cb5ce
2021-12-09 00:47:08,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@798deee8
2021-12-09 00:47:08,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@96897c8
2021-12-09 00:47:08,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f97bc14
2021-12-09 00:47:08,957 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 00:47:09,415 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 00:47:09,426 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 00:47:09,473 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d4a05f7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51d8f2f2]
2021-12-09 00:47:09,591 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d4a05f7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@13234ac9]
2021-12-09 00:47:09,919 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 00:47:09,933 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@13234ac9] for TypeConfiguration
2021-12-09 00:47:09,936 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 00:47:10,286 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 00:47:10,487 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 00:47:10,783 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 00:47:10,796 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 00:47:10,809 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 4.419 seconds (JVM running for 5.754)
2021-12-09 00:58:14,174 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 00:58:14,174 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 00:58:14,175 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 00:58:14,199 [http-nio-5050-exec-2] INFO  t.g.website.controller.UserController              - Id entered: 60
2021-12-09 00:58:14,224 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 00:58:14,250 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [60]
2021-12-09 00:58:18,563 [http-nio-5050-exec-3] INFO  t.g.website.controller.UserController              - Id entered: 5
2021-12-09 00:58:18,565 [http-nio-5050-exec-3] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 00:58:18,565 [http-nio-5050-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [5]
2021-12-09 00:58:22,489 [http-nio-5050-exec-4] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 00:58:22,491 [http-nio-5050-exec-4] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 00:58:22,491 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 00:58:22,499 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 00:58:22,501 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 00:58:22,501 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 00:58:22,501 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_0_] : [VARCHAR]) - [eelmdert]
2021-12-09 00:58:22,501 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_0_] : [VARCHAR]) - [testd6fferteffd]
2021-12-09 00:58:22,501 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_0_] : [VARCHAR]) - [test5dfferteffd]
2021-12-09 00:58:28,052 [http-nio-5050-exec-5] INFO  t.g.website.controller.UserController              - Id entered: 22
2021-12-09 00:58:28,053 [http-nio-5050-exec-5] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 00:58:28,054 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [22]
2021-12-09 01:18:44,739 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 01:18:44,739 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@13234ac9] for TypeConfiguration
2021-12-09 01:18:44,739 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7737dae7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@13234ac9]
2021-12-09 01:18:44,743 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 01:18:44,745 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 01:49:33,504 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 15751 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 01:49:33,508 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 01:49:33,509 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 01:49:34,120 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 01:49:34,175 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 48 ms. Found 5 JPA repository interfaces.
2021-12-09 01:49:34,625 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 01:49:34,638 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 01:49:34,639 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 01:49:34,639 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 01:49:34,758 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 01:49:34,758 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1179 ms
2021-12-09 01:49:34,933 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 01:49:34,977 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 01:49:35,070 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 01:49:35,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@3f9b7fe1
2021-12-09 01:49:35,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@3f9b7fe1
2021-12-09 01:49:35,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f9b7fe1
2021-12-09 01:49:35,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4e8b357d
2021-12-09 01:49:35,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6af5b246
2021-12-09 01:49:35,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@2a4f8009
2021-12-09 01:49:35,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@32a4ecbe
2021-12-09 01:49:35,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@32a4ecbe
2021-12-09 01:49:35,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32a4ecbe
2021-12-09 01:49:35,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@5df7e31b
2021-12-09 01:49:35,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@5df7e31b
2021-12-09 01:49:35,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5df7e31b
2021-12-09 01:49:35,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@365afe87
2021-12-09 01:49:35,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@365afe87
2021-12-09 01:49:35,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@365afe87
2021-12-09 01:49:35,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@7fbd3e75
2021-12-09 01:49:35,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@7fbd3e75
2021-12-09 01:49:35,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7fbd3e75
2021-12-09 01:49:35,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@747835f5
2021-12-09 01:49:35,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@747835f5
2021-12-09 01:49:35,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@747835f5
2021-12-09 01:49:35,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@47a7c93e
2021-12-09 01:49:35,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@47a7c93e
2021-12-09 01:49:35,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47a7c93e
2021-12-09 01:49:35,096 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@5bde57ab
2021-12-09 01:49:35,096 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@5bde57ab
2021-12-09 01:49:35,096 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5bde57ab
2021-12-09 01:49:35,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a50b32d
2021-12-09 01:49:35,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a50b32d
2021-12-09 01:49:35,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43245559
2021-12-09 01:49:35,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43245559
2021-12-09 01:49:35,098 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@2c1f8dbd
2021-12-09 01:49:35,098 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@2c1f8dbd
2021-12-09 01:49:35,098 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@63fd4dda
2021-12-09 01:49:35,099 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6dca31eb
2021-12-09 01:49:35,099 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@733e6df7
2021-12-09 01:49:35,099 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@733e6df7
2021-12-09 01:49:35,100 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@79a201cf
2021-12-09 01:49:35,100 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@79a201cf
2021-12-09 01:49:35,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@71664560
2021-12-09 01:49:35,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@71664560
2021-12-09 01:49:35,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5934ca1e
2021-12-09 01:49:35,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5934ca1e
2021-12-09 01:49:35,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2ba42204
2021-12-09 01:49:35,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2ba42204
2021-12-09 01:49:35,103 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4c731956
2021-12-09 01:49:35,103 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4c731956
2021-12-09 01:49:35,104 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e140497
2021-12-09 01:49:35,104 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e140497
2021-12-09 01:49:35,104 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@50b46e24
2021-12-09 01:49:35,104 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@50b46e24
2021-12-09 01:49:35,105 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4fba8eec
2021-12-09 01:49:35,105 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4fba8eec
2021-12-09 01:49:35,107 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@739265f1
2021-12-09 01:49:35,107 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@739265f1
2021-12-09 01:49:35,107 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@19b07407
2021-12-09 01:49:35,107 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19b07407
2021-12-09 01:49:35,108 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@58f31629
2021-12-09 01:49:35,109 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@58f31629
2021-12-09 01:49:35,109 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@58f31629
2021-12-09 01:49:35,109 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4a89ef44
2021-12-09 01:49:35,110 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@6f1c3f18
2021-12-09 01:49:35,110 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f1c3f18
2021-12-09 01:49:35,110 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f1c3f18
2021-12-09 01:49:35,111 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@653fb8d1
2021-12-09 01:49:35,111 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1d3c112a
2021-12-09 01:49:35,112 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@2c604965
2021-12-09 01:49:35,112 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c604965
2021-12-09 01:49:35,113 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@1e1237ab
2021-12-09 01:49:35,113 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1237ab
2021-12-09 01:49:35,114 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@74667e6a
2021-12-09 01:49:35,114 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74667e6a
2021-12-09 01:49:35,115 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@2c30c81d
2021-12-09 01:49:35,115 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c30c81d
2021-12-09 01:49:35,115 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@41f3aaf1
2021-12-09 01:49:35,116 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@41f3aaf1
2021-12-09 01:49:35,116 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60e1d87c
2021-12-09 01:49:35,118 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@49edcb30
2021-12-09 01:49:35,119 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@49edcb30
2021-12-09 01:49:35,119 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@49edcb30
2021-12-09 01:49:35,120 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45a1d057
2021-12-09 01:49:35,120 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45a1d057
2021-12-09 01:49:35,120 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45a1d057
2021-12-09 01:49:35,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@12d40609
2021-12-09 01:49:35,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@2be818da
2021-12-09 01:49:35,122 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@71560f51
2021-12-09 01:49:35,122 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@71560f51
2021-12-09 01:49:35,122 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@71560f51
2021-12-09 01:49:35,123 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@230a73f2
2021-12-09 01:49:35,123 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@230a73f2
2021-12-09 01:49:35,124 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@230a73f2
2021-12-09 01:49:35,124 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@96897c8
2021-12-09 01:49:35,124 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@79afa369
2021-12-09 01:49:35,125 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@ce12fbb
2021-12-09 01:49:35,125 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ce12fbb
2021-12-09 01:49:35,125 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@69aabcb0
2021-12-09 01:49:35,126 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2dfeb141
2021-12-09 01:49:35,126 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2dfeb141
2021-12-09 01:49:35,127 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@bc09d57
2021-12-09 01:49:35,127 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@bc09d57
2021-12-09 01:49:35,127 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a566922
2021-12-09 01:49:35,128 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65c17e38
2021-12-09 01:49:35,129 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@1df5c7e3
2021-12-09 01:49:35,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@184823ed
2021-12-09 01:49:35,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@184823ed
2021-12-09 01:49:35,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@46c10083
2021-12-09 01:49:35,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28e8888d
2021-12-09 01:49:35,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e98b788
2021-12-09 01:49:35,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@794eeaf8
2021-12-09 01:49:35,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@37c5284a
2021-12-09 01:49:35,132 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b8572df
2021-12-09 01:49:35,132 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7aaad0
2021-12-09 01:49:35,132 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@eed890d
2021-12-09 01:49:35,164 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 01:49:35,511 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 01:49:35,520 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 01:49:35,567 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a3cf824] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c2b6acb]
2021-12-09 01:49:35,708 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a3cf824] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@134c38]
2021-12-09 01:49:35,967 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 01:49:35,971 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@134c38] for TypeConfiguration
2021-12-09 01:49:35,972 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 01:49:36,263 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 01:49:36,479 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 01:49:36,753 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 01:49:36,765 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 01:49:36,777 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.579 seconds (JVM running for 4.248)
2021-12-09 01:49:43,044 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 01:49:43,044 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@134c38] for TypeConfiguration
2021-12-09 01:49:43,044 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3652dc19] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@134c38]
2021-12-09 01:49:43,046 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 01:49:43,050 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 02:40:59,659 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 20237 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 02:40:59,661 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 02:40:59,662 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 02:40:59,883 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [tech.goodquestion.GoodquestionApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'topicServiceImpl' for bean class [tech.goodquestion.website.service.TopicServiceImpl] conflicts with existing, non-compatible bean definition of same name and class [tech.goodquestion.website.elasticsearch.service.TopicServiceImpl]
2021-12-09 02:40:59,918 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [tech.goodquestion.GoodquestionApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'topicServiceImpl' for bean class [tech.goodquestion.website.service.TopicServiceImpl] conflicts with existing, non-compatible bean definition of same name and class [tech.goodquestion.website.elasticsearch.service.TopicServiceImpl]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:189)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'topicServiceImpl' for bean class [tech.goodquestion.website.service.TopicServiceImpl] conflicts with existing, non-compatible bean definition of same name and class [tech.goodquestion.website.elasticsearch.service.TopicServiceImpl]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	... 13 common frames omitted
2021-12-09 02:41:43,469 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 20302 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 02:41:43,470 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 02:41:43,471 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 02:41:43,859 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:41:43,860 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:41:43,894 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 30 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 02:41:44,029 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:41:44,029 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:41:44,037 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:41:44,038 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:41:44,039 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:41:44,039 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.elasticsearch.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:41:44,040 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:41:44,041 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:41:44,041 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 02:41:44,049 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:41:44,049 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 02:41:44,072 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot register bean definition [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration] for bean 'topicRepository': There is already [Root bean: class [org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableElasticsearchRepositories declared on Config] bound.
2021-12-09 02:41:44,083 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 02:41:44,098 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter             - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'topicRepository', defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration, could not be registered. A bean with that name has already been defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableElasticsearchRepositories declared on Config and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2021-12-09 02:42:15,640 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 20317 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 02:42:15,641 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 02:42:15,642 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 02:42:16,161 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:42:16,161 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:42:16,204 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 02:42:16,350 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:42:16,351 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:42:16,359 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:16,360 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:16,361 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:16,362 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.elasticsearch.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:16,363 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:16,364 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:16,364 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 02:42:16,372 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:42:16,373 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 02:42:16,408 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'topicRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot register bean definition [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration] for bean 'topicRepository': There is already [Root bean: class [org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableElasticsearchRepositories declared on Config] bound.
2021-12-09 02:42:16,422 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 02:42:16,439 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter             - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'topicRepository', defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration, could not be registered. A bean with that name has already been defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableElasticsearchRepositories declared on Config and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2021-12-09 02:42:58,786 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 20341 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 02:42:58,787 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 02:42:58,787 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 02:42:59,293 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:42:59,293 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:42:59,340 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 43 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 02:42:59,501 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:42:59,501 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:42:59,511 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:59,512 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:59,513 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:59,514 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.elasticsearch.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:59,515 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:59,517 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:42:59,517 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 15 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 02:42:59,524 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:42:59,524 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 02:42:59,546 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'topicRep' defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot register bean definition [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration] for bean 'topicRep': There is already [Root bean: class [org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableElasticsearchRepositories declared on Config] bound.
2021-12-09 02:42:59,554 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 02:42:59,565 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter             - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'topicRep', defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration, could not be registered. A bean with that name has already been defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableElasticsearchRepositories declared on Config and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2021-12-09 02:43:30,740 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 20354 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 02:43:30,742 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 02:43:30,742 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 02:43:31,090 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:43:31,091 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:43:31,129 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 34 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 02:43:31,281 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:43:31,281 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:43:31,289 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:43:31,290 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:43:31,291 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:43:31,292 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.elasticsearch.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:43:31,293 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:43:31,294 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:43:31,294 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 02:43:31,303 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:43:31,304 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 02:43:31,332 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 24 ms. Found 6 JPA repository interfaces.
2021-12-09 02:43:31,794 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 02:43:31,800 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 02:43:31,800 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 02:43:31,801 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 02:43:31,875 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 02:43:31,875 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1108 ms
2021-12-09 02:43:32,029 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 02:43:32,099 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 02:43:32,183 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 02:43:32,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@6274f21c
2021-12-09 02:43:32,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@6274f21c
2021-12-09 02:43:32,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6274f21c
2021-12-09 02:43:32,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@cbd40c1
2021-12-09 02:43:32,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1e545821
2021-12-09 02:43:32,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@7f977fba
2021-12-09 02:43:32,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67f9cb52
2021-12-09 02:43:32,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67f9cb52
2021-12-09 02:43:32,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67f9cb52
2021-12-09 02:43:32,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@1625789b
2021-12-09 02:43:32,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@1625789b
2021-12-09 02:43:32,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1625789b
2021-12-09 02:43:32,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@5f6b53ed
2021-12-09 02:43:32,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@5f6b53ed
2021-12-09 02:43:32,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5f6b53ed
2021-12-09 02:43:32,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@62d40e31
2021-12-09 02:43:32,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@62d40e31
2021-12-09 02:43:32,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62d40e31
2021-12-09 02:43:32,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@48cb2d73
2021-12-09 02:43:32,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@48cb2d73
2021-12-09 02:43:32,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@48cb2d73
2021-12-09 02:43:32,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@11c78080
2021-12-09 02:43:32,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@11c78080
2021-12-09 02:43:32,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@11c78080
2021-12-09 02:43:32,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2f9dda71
2021-12-09 02:43:32,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2f9dda71
2021-12-09 02:43:32,206 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f9dda71
2021-12-09 02:43:32,206 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67688110
2021-12-09 02:43:32,206 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67688110
2021-12-09 02:43:32,206 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a55594b
2021-12-09 02:43:32,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a55594b
2021-12-09 02:43:32,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@1f15e689
2021-12-09 02:43:32,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@1f15e689
2021-12-09 02:43:32,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11b5f4e2
2021-12-09 02:43:32,208 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@66d25ba9
2021-12-09 02:43:32,208 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@266e9dda
2021-12-09 02:43:32,208 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@266e9dda
2021-12-09 02:43:32,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7db40fd5
2021-12-09 02:43:32,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7db40fd5
2021-12-09 02:43:32,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@74c9e11
2021-12-09 02:43:32,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@74c9e11
2021-12-09 02:43:32,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4844930a
2021-12-09 02:43:32,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4844930a
2021-12-09 02:43:32,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2f95653f
2021-12-09 02:43:32,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2f95653f
2021-12-09 02:43:32,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@38029686
2021-12-09 02:43:32,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@38029686
2021-12-09 02:43:32,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@74960e9d
2021-12-09 02:43:32,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@74960e9d
2021-12-09 02:43:32,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@61037caf
2021-12-09 02:43:32,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@61037caf
2021-12-09 02:43:32,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ed49a7f
2021-12-09 02:43:32,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ed49a7f
2021-12-09 02:43:32,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@7a388990
2021-12-09 02:43:32,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a388990
2021-12-09 02:43:32,215 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@b2c4a8b
2021-12-09 02:43:32,215 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b2c4a8b
2021-12-09 02:43:32,216 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@70b6db83
2021-12-09 02:43:32,216 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@70b6db83
2021-12-09 02:43:32,216 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@70b6db83
2021-12-09 02:43:32,217 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18709cb2
2021-12-09 02:43:32,217 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@2d313c8c
2021-12-09 02:43:32,217 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d313c8c
2021-12-09 02:43:32,217 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d313c8c
2021-12-09 02:43:32,218 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e52a26b
2021-12-09 02:43:32,218 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@55846997
2021-12-09 02:43:32,218 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@2afdf6b7
2021-12-09 02:43:32,219 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2afdf6b7
2021-12-09 02:43:32,219 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@45d56062
2021-12-09 02:43:32,219 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45d56062
2021-12-09 02:43:32,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@57bd6a8f
2021-12-09 02:43:32,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@57bd6a8f
2021-12-09 02:43:32,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@31a136a6
2021-12-09 02:43:32,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@31a136a6
2021-12-09 02:43:32,221 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4f081b5d
2021-12-09 02:43:32,221 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4f081b5d
2021-12-09 02:43:32,221 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@265c1a7c
2021-12-09 02:43:32,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@6f930e0
2021-12-09 02:43:32,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@6f930e0
2021-12-09 02:43:32,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@6f930e0
2021-12-09 02:43:32,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7d2c345d
2021-12-09 02:43:32,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7d2c345d
2021-12-09 02:43:32,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7d2c345d
2021-12-09 02:43:32,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@32507479
2021-12-09 02:43:32,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@2dd63e3
2021-12-09 02:43:32,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6a2d867d
2021-12-09 02:43:32,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6a2d867d
2021-12-09 02:43:32,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6a2d867d
2021-12-09 02:43:32,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3a0aaaf0
2021-12-09 02:43:32,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3a0aaaf0
2021-12-09 02:43:32,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3a0aaaf0
2021-12-09 02:43:32,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@13cc0b90
2021-12-09 02:43:32,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@49580ca8
2021-12-09 02:43:32,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@35145874
2021-12-09 02:43:32,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35145874
2021-12-09 02:43:32,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@f245bdd
2021-12-09 02:43:32,226 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@4b957db0
2021-12-09 02:43:32,226 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4b957db0
2021-12-09 02:43:32,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3757e8e2
2021-12-09 02:43:32,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3757e8e2
2021-12-09 02:43:32,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@679d0be8
2021-12-09 02:43:32,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@8fcc534
2021-12-09 02:43:32,228 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@5eed6dfb
2021-12-09 02:43:32,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@26457986
2021-12-09 02:43:32,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@26457986
2021-12-09 02:43:32,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5d1d9d73
2021-12-09 02:43:32,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b30a50d
2021-12-09 02:43:32,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@764a3e5d
2021-12-09 02:43:32,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c742b84
2021-12-09 02:43:32,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5db3d57c
2021-12-09 02:43:32,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53a50b0a
2021-12-09 02:43:32,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@74ba6ff5
2021-12-09 02:43:32,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@395f52ed
2021-12-09 02:43:32,254 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 02:43:32,604 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 02:43:32,614 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 02:43:32,653 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18715bb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a19a0fe]
2021-12-09 02:43:32,710 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean     - Failed to initialize JPA EntityManagerFactory: The [tech.goodquestion.website.elasticsearch.document.Topic] and [tech.goodquestion.website.entity.Topic] entities share the same JPA entity name: [Topic] which is not allowed!
2021-12-09 02:43:32,711 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.DuplicateMappingException: The [tech.goodquestion.website.elasticsearch.document.Topic] and [tech.goodquestion.website.entity.Topic] entities share the same JPA entity name: [Topic] which is not allowed!
2021-12-09 02:43:32,711 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 02:43:32,728 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 02:43:32,729 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 02:43:32,737 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 02:43:32,757 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.DuplicateMappingException: The [tech.goodquestion.website.elasticsearch.document.Topic] and [tech.goodquestion.website.entity.Topic] entities share the same JPA entity name: [Topic] which is not allowed!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.hibernate.DuplicateMappingException: The [tech.goodquestion.website.elasticsearch.document.Topic] and [tech.goodquestion.website.entity.Topic] entities share the same JPA entity name: [Topic] which is not allowed!
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addEntityBinding(InFlightMetadataCollectorImpl.java:314)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:826)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:248)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:239)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:282)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 16 common frames omitted
2021-12-09 02:44:12,923 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 20371 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 02:44:12,925 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 02:44:12,925 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 02:44:13,348 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:44:13,349 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:44:13,378 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 26 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 02:44:13,533 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:44:13,533 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:44:13,542 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:44:13,543 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:44:13,545 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:44:13,545 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.elasticsearch.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:44:13,546 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:44:13,547 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:44:13,547 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 02:44:13,552 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:44:13,553 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 02:44:13,582 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 27 ms. Found 6 JPA repository interfaces.
2021-12-09 02:44:13,924 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 02:44:13,929 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 02:44:13,929 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 02:44:13,929 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 02:44:13,997 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 02:44:13,997 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1049 ms
2021-12-09 02:44:14,081 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 02:44:14,102 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 02:44:14,168 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 02:44:14,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1d6a8386
2021-12-09 02:44:14,187 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1d6a8386
2021-12-09 02:44:14,187 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1d6a8386
2021-12-09 02:44:14,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@491cafec
2021-12-09 02:44:14,189 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7889b4b9
2021-12-09 02:44:14,189 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@433ea2ac
2021-12-09 02:44:14,190 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@73608eb0
2021-12-09 02:44:14,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@73608eb0
2021-12-09 02:44:14,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73608eb0
2021-12-09 02:44:14,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@24876a7e
2021-12-09 02:44:14,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@24876a7e
2021-12-09 02:44:14,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@24876a7e
2021-12-09 02:44:14,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@7fd4e815
2021-12-09 02:44:14,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@7fd4e815
2021-12-09 02:44:14,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd4e815
2021-12-09 02:44:14,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@6e1ae763
2021-12-09 02:44:14,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@6e1ae763
2021-12-09 02:44:14,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6e1ae763
2021-12-09 02:44:14,195 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@5fffb692
2021-12-09 02:44:14,196 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@5fffb692
2021-12-09 02:44:14,196 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fffb692
2021-12-09 02:44:14,197 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7fbf26fc
2021-12-09 02:44:14,197 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7fbf26fc
2021-12-09 02:44:14,197 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fbf26fc
2021-12-09 02:44:14,198 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@7c11d32
2021-12-09 02:44:14,198 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@7c11d32
2021-12-09 02:44:14,198 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7c11d32
2021-12-09 02:44:14,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@548e43b1
2021-12-09 02:44:14,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@548e43b1
2021-12-09 02:44:14,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5bb911c1
2021-12-09 02:44:14,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5bb911c1
2021-12-09 02:44:14,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@25974207
2021-12-09 02:44:14,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@25974207
2021-12-09 02:44:14,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@21a46ff1
2021-12-09 02:44:14,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58feb6b0
2021-12-09 02:44:14,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@14c99bf6
2021-12-09 02:44:14,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14c99bf6
2021-12-09 02:44:14,206 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@445bce9a
2021-12-09 02:44:14,206 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@445bce9a
2021-12-09 02:44:14,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@6ffd4c0d
2021-12-09 02:44:14,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6ffd4c0d
2021-12-09 02:44:14,208 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@f723cdb
2021-12-09 02:44:14,208 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@f723cdb
2021-12-09 02:44:14,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2cfe272f
2021-12-09 02:44:14,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2cfe272f
2021-12-09 02:44:14,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@380ce5a3
2021-12-09 02:44:14,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@380ce5a3
2021-12-09 02:44:14,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c88191b
2021-12-09 02:44:14,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3c88191b
2021-12-09 02:44:14,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5bc63e20
2021-12-09 02:44:14,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5bc63e20
2021-12-09 02:44:14,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14fc9bd
2021-12-09 02:44:14,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14fc9bd
2021-12-09 02:44:14,216 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@1a531422
2021-12-09 02:44:14,216 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1a531422
2021-12-09 02:44:14,218 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@61b65d54
2021-12-09 02:44:14,218 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61b65d54
2021-12-09 02:44:14,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@26d5a317
2021-12-09 02:44:14,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@26d5a317
2021-12-09 02:44:14,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@26d5a317
2021-12-09 02:44:14,221 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5edc3e29
2021-12-09 02:44:14,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@5df6163a
2021-12-09 02:44:14,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5df6163a
2021-12-09 02:44:14,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5df6163a
2021-12-09 02:44:14,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2a0ea492
2021-12-09 02:44:14,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@36ad229b
2021-12-09 02:44:14,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@36f6e521
2021-12-09 02:44:14,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@36f6e521
2021-12-09 02:44:14,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@6de004f1
2021-12-09 02:44:14,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6de004f1
2021-12-09 02:44:14,226 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12fcb2c3
2021-12-09 02:44:14,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12fcb2c3
2021-12-09 02:44:14,228 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@23444a36
2021-12-09 02:44:14,228 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23444a36
2021-12-09 02:44:14,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f884bd6
2021-12-09 02:44:14,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f884bd6
2021-12-09 02:44:14,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29013ef2
2021-12-09 02:44:14,231 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@c412556
2021-12-09 02:44:14,231 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@c412556
2021-12-09 02:44:14,231 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@c412556
2021-12-09 02:44:14,232 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64021427
2021-12-09 02:44:14,232 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64021427
2021-12-09 02:44:14,233 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64021427
2021-12-09 02:44:14,234 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@6d0290d8
2021-12-09 02:44:14,235 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@339f3a55
2021-12-09 02:44:14,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@4702e7a5
2021-12-09 02:44:14,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@4702e7a5
2021-12-09 02:44:14,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@4702e7a5
2021-12-09 02:44:14,238 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@784d9bc
2021-12-09 02:44:14,238 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@784d9bc
2021-12-09 02:44:14,238 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@784d9bc
2021-12-09 02:44:14,238 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@7c7e73c5
2021-12-09 02:44:14,239 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3a3b10f4
2021-12-09 02:44:14,240 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@764fffa0
2021-12-09 02:44:14,240 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@764fffa0
2021-12-09 02:44:14,240 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@18e4674d
2021-12-09 02:44:14,242 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@1e1e837d
2021-12-09 02:44:14,243 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e1e837d
2021-12-09 02:44:14,244 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@580902cd
2021-12-09 02:44:14,244 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@580902cd
2021-12-09 02:44:14,245 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6f85ee02
2021-12-09 02:44:14,245 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7b14c61
2021-12-09 02:44:14,247 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@56a4abd0
2021-12-09 02:44:14,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@57151b3a
2021-12-09 02:44:14,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57151b3a
2021-12-09 02:44:14,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@501957bf
2021-12-09 02:44:14,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d1d9d73
2021-12-09 02:44:14,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@b30a50d
2021-12-09 02:44:14,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@764a3e5d
2021-12-09 02:44:14,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6c742b84
2021-12-09 02:44:14,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5db3d57c
2021-12-09 02:44:14,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@53a50b0a
2021-12-09 02:44:14,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74ba6ff5
2021-12-09 02:44:14,276 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 02:44:14,524 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 02:44:14,537 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 02:44:14,580 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d717f19] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18715bb]
2021-12-09 02:44:14,714 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d717f19] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@336e3be2]
2021-12-09 02:44:15,007 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 02:44:15,013 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@336e3be2] for TypeConfiguration
2021-12-09 02:44:15,014 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 02:44:15,662 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRep' defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 02:44:15,664 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 02:44:15,664 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@336e3be2] for TypeConfiguration
2021-12-09 02:44:15,664 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@18fa5af6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@336e3be2]
2021-12-09 02:44:15,667 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 02:44:15,672 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 02:44:15,673 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 02:44:15,683 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 02:44:15,703 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRep' defined in tech.goodquestion.website.elasticsearch.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 16 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 38 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 42 common frames omitted
2021-12-09 02:45:46,708 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 20537 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 02:45:46,709 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 02:45:46,709 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 02:45:47,185 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:45:47,186 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:45:47,224 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 35 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 02:45:47,384 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:45:47,385 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:45:47,393 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:45:47,394 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:45:47,396 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:45:47,397 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.elasticsearch.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:45:47,399 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:45:47,401 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:45:47,402 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 16 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 02:45:47,409 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:45:47,410 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 02:45:47,439 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 25 ms. Found 6 JPA repository interfaces.
2021-12-09 02:45:47,837 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 02:45:47,843 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 02:45:47,843 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 02:45:47,844 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 02:45:47,925 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 02:45:47,926 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1189 ms
2021-12-09 02:45:48,087 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 02:45:48,131 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 02:45:48,232 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 02:45:48,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1a7cb3a4
2021-12-09 02:45:48,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1a7cb3a4
2021-12-09 02:45:48,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a7cb3a4
2021-12-09 02:45:48,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6274f21c
2021-12-09 02:45:48,253 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@cbd40c1
2021-12-09 02:45:48,253 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@1e545821
2021-12-09 02:45:48,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@6c3f1658
2021-12-09 02:45:48,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@6c3f1658
2021-12-09 02:45:48,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6c3f1658
2021-12-09 02:45:48,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@2ee39e73
2021-12-09 02:45:48,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@2ee39e73
2021-12-09 02:45:48,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2ee39e73
2021-12-09 02:45:48,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@13866329
2021-12-09 02:45:48,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@13866329
2021-12-09 02:45:48,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13866329
2021-12-09 02:45:48,256 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@14b31e37
2021-12-09 02:45:48,256 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@14b31e37
2021-12-09 02:45:48,256 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14b31e37
2021-12-09 02:45:48,257 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@457a5b2d
2021-12-09 02:45:48,257 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@457a5b2d
2021-12-09 02:45:48,257 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@457a5b2d
2021-12-09 02:45:48,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@126f8f24
2021-12-09 02:45:48,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@126f8f24
2021-12-09 02:45:48,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@126f8f24
2021-12-09 02:45:48,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@4fecf308
2021-12-09 02:45:48,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@4fecf308
2021-12-09 02:45:48,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fecf308
2021-12-09 02:45:48,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@707865bd
2021-12-09 02:45:48,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@707865bd
2021-12-09 02:45:48,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@616a06e3
2021-12-09 02:45:48,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@616a06e3
2021-12-09 02:45:48,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@57fdb8a4
2021-12-09 02:45:48,261 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@57fdb8a4
2021-12-09 02:45:48,261 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1f15e689
2021-12-09 02:45:48,261 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11b5f4e2
2021-12-09 02:45:48,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@739831a4
2021-12-09 02:45:48,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@739831a4
2021-12-09 02:45:48,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7fe8c7db
2021-12-09 02:45:48,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7fe8c7db
2021-12-09 02:45:48,263 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@19ae2ee5
2021-12-09 02:45:48,263 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19ae2ee5
2021-12-09 02:45:48,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@118acf70
2021-12-09 02:45:48,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@118acf70
2021-12-09 02:45:48,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@e91af20
2021-12-09 02:45:48,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@e91af20
2021-12-09 02:45:48,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@60dc1a4e
2021-12-09 02:45:48,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@60dc1a4e
2021-12-09 02:45:48,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e24ce51
2021-12-09 02:45:48,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e24ce51
2021-12-09 02:45:48,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@73893ec1
2021-12-09 02:45:48,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@73893ec1
2021-12-09 02:45:48,267 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d5e575c
2021-12-09 02:45:48,267 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@d5e575c
2021-12-09 02:45:48,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@67e0fd6d
2021-12-09 02:45:48,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67e0fd6d
2021-12-09 02:45:48,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@2d28fb02
2021-12-09 02:45:48,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2d28fb02
2021-12-09 02:45:48,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@3dbd7107
2021-12-09 02:45:48,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3dbd7107
2021-12-09 02:45:48,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3dbd7107
2021-12-09 02:45:48,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@70b6db83
2021-12-09 02:45:48,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@4b87760e
2021-12-09 02:45:48,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4b87760e
2021-12-09 02:45:48,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4b87760e
2021-12-09 02:45:48,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c1503a3
2021-12-09 02:45:48,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6070775e
2021-12-09 02:45:48,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@168142da
2021-12-09 02:45:48,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@168142da
2021-12-09 02:45:48,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@51ff3c4b
2021-12-09 02:45:48,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51ff3c4b
2021-12-09 02:45:48,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7436364d
2021-12-09 02:45:48,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7436364d
2021-12-09 02:45:48,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@77cca767
2021-12-09 02:45:48,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@77cca767
2021-12-09 02:45:48,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e0fdbe9
2021-12-09 02:45:48,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e0fdbe9
2021-12-09 02:45:48,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f081b5d
2021-12-09 02:45:48,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@19827608
2021-12-09 02:45:48,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@19827608
2021-12-09 02:45:48,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@19827608
2021-12-09 02:45:48,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7d2c9361
2021-12-09 02:45:48,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7d2c9361
2021-12-09 02:45:48,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7d2c9361
2021-12-09 02:45:48,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@296edc75
2021-12-09 02:45:48,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@32507479
2021-12-09 02:45:48,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6a98f353
2021-12-09 02:45:48,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6a98f353
2021-12-09 02:45:48,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6a98f353
2021-12-09 02:45:48,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3830b06c
2021-12-09 02:45:48,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3830b06c
2021-12-09 02:45:48,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3830b06c
2021-12-09 02:45:48,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@3a0aaaf0
2021-12-09 02:45:48,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@13cc0b90
2021-12-09 02:45:48,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@691541bc
2021-12-09 02:45:48,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@691541bc
2021-12-09 02:45:48,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35145874
2021-12-09 02:45:48,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@4b03cbad
2021-12-09 02:45:48,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4b03cbad
2021-12-09 02:45:48,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@7ab2a07e
2021-12-09 02:45:48,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7ab2a07e
2021-12-09 02:45:48,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3757e8e2
2021-12-09 02:45:48,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@679d0be8
2021-12-09 02:45:48,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@58aa1d72
2021-12-09 02:45:48,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@3a296107
2021-12-09 02:45:48,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a296107
2021-12-09 02:45:48,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26457986
2021-12-09 02:45:48,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2dff7085
2021-12-09 02:45:48,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2faa55bb
2021-12-09 02:45:48,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@501957bf
2021-12-09 02:45:48,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d1d9d73
2021-12-09 02:45:48,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b30a50d
2021-12-09 02:45:48,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@764a3e5d
2021-12-09 02:45:48,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6c742b84
2021-12-09 02:45:48,305 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 02:45:48,554 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 02:45:48,569 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 02:45:48,612 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fb07347] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3ef2b8e5]
2021-12-09 02:45:48,747 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fb07347] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@213012a0]
2021-12-09 02:45:49,022 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 02:45:49,028 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@213012a0] for TypeConfiguration
2021-12-09 02:45:49,029 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 02:45:49,295 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tech.goodquestion.website.repository.TopicRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2021-12-09 02:45:49,296 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 02:45:49,296 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@213012a0] for TypeConfiguration
2021-12-09 02:45:49,296 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@22f057b4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@213012a0]
2021-12-09 02:45:49,298 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 02:45:49,302 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 02:45:49,303 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 02:45:49,313 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 02:45:49,335 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter             - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in tech.goodquestion.website.service.TopicServiceImpl required a bean of type 'tech.goodquestion.website.repository.TopicRepository' that could not be found.


Action:

Consider defining a bean of type 'tech.goodquestion.website.repository.TopicRepository' in your configuration.

2021-12-09 02:46:52,369 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 20575 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 02:46:52,370 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 02:46:52,370 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 02:46:52,688 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:46:52,688 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:46:52,694 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 3 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 02:46:52,811 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:46:52,811 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:46:52,826 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:46:52,827 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:46:52,828 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:46:52,829 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.TopicRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:46:52,830 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:46:52,831 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 19 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 02:46:52,833 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:46:52,833 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:46:52,838 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:46:52,838 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:46:52,838 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:46:52,839 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.TopicRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:46:52,839 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:46:52,840 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 02:46:52,844 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:46:52,844 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 02:46:52,870 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 23 ms. Found 5 JPA repository interfaces.
2021-12-09 02:46:53,179 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 02:46:53,186 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 02:46:53,186 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 02:46:53,187 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 02:46:53,269 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 02:46:53,270 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 874 ms
2021-12-09 02:46:53,357 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 02:46:53,382 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 02:46:53,446 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 02:46:53,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@16d0e521
2021-12-09 02:46:53,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@16d0e521
2021-12-09 02:46:53,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@16d0e521
2021-12-09 02:46:53,463 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a7cb3a4
2021-12-09 02:46:53,464 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6274f21c
2021-12-09 02:46:53,464 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@cbd40c1
2021-12-09 02:46:53,465 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@d653e41
2021-12-09 02:46:53,465 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@d653e41
2021-12-09 02:46:53,465 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d653e41
2021-12-09 02:46:53,466 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@73608eb0
2021-12-09 02:46:53,466 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@73608eb0
2021-12-09 02:46:53,466 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@73608eb0
2021-12-09 02:46:53,466 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@24876a7e
2021-12-09 02:46:53,467 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@24876a7e
2021-12-09 02:46:53,467 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@24876a7e
2021-12-09 02:46:53,467 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@7fd4e815
2021-12-09 02:46:53,467 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@7fd4e815
2021-12-09 02:46:53,468 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7fd4e815
2021-12-09 02:46:53,468 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6e1ae763
2021-12-09 02:46:53,468 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6e1ae763
2021-12-09 02:46:53,469 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e1ae763
2021-12-09 02:46:53,469 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@5fffb692
2021-12-09 02:46:53,469 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@5fffb692
2021-12-09 02:46:53,469 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5fffb692
2021-12-09 02:46:53,470 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@7fbf26fc
2021-12-09 02:46:53,470 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@7fbf26fc
2021-12-09 02:46:53,470 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7fbf26fc
2021-12-09 02:46:53,471 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7c11d32
2021-12-09 02:46:53,471 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7c11d32
2021-12-09 02:46:53,472 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@548e43b1
2021-12-09 02:46:53,472 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@548e43b1
2021-12-09 02:46:53,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@5bb911c1
2021-12-09 02:46:53,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@5bb911c1
2021-12-09 02:46:53,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@57fdb8a4
2021-12-09 02:46:53,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1f15e689
2021-12-09 02:46:53,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@58feb6b0
2021-12-09 02:46:53,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@58feb6b0
2021-12-09 02:46:53,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@14c99bf6
2021-12-09 02:46:53,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@14c99bf6
2021-12-09 02:46:53,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@445bce9a
2021-12-09 02:46:53,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@445bce9a
2021-12-09 02:46:53,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6ffd4c0d
2021-12-09 02:46:53,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6ffd4c0d
2021-12-09 02:46:53,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@f723cdb
2021-12-09 02:46:53,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@f723cdb
2021-12-09 02:46:53,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2cfe272f
2021-12-09 02:46:53,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2cfe272f
2021-12-09 02:46:53,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@380ce5a3
2021-12-09 02:46:53,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@380ce5a3
2021-12-09 02:46:53,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3c88191b
2021-12-09 02:46:53,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3c88191b
2021-12-09 02:46:53,482 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5bc63e20
2021-12-09 02:46:53,482 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5bc63e20
2021-12-09 02:46:53,484 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@486e9d1d
2021-12-09 02:46:53,484 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@486e9d1d
2021-12-09 02:46:53,485 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@4e4162bc
2021-12-09 02:46:53,485 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4e4162bc
2021-12-09 02:46:53,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@43935e9c
2021-12-09 02:46:53,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@43935e9c
2021-12-09 02:46:53,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@43935e9c
2021-12-09 02:46:53,487 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3dbd7107
2021-12-09 02:46:53,487 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@89caf47
2021-12-09 02:46:53,487 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@89caf47
2021-12-09 02:46:53,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@89caf47
2021-12-09 02:46:53,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5df6163a
2021-12-09 02:46:53,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@2a0ea492
2021-12-09 02:46:53,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@36ad229b
2021-12-09 02:46:53,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@36ad229b
2021-12-09 02:46:53,490 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@36f6e521
2021-12-09 02:46:53,490 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36f6e521
2021-12-09 02:46:53,490 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6de004f1
2021-12-09 02:46:53,490 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6de004f1
2021-12-09 02:46:53,491 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@12fcb2c3
2021-12-09 02:46:53,491 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12fcb2c3
2021-12-09 02:46:53,492 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@23444a36
2021-12-09 02:46:53,492 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@23444a36
2021-12-09 02:46:53,492 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2e0fdbe9
2021-12-09 02:46:53,493 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@7fef0b40
2021-12-09 02:46:53,493 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@7fef0b40
2021-12-09 02:46:53,493 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@7fef0b40
2021-12-09 02:46:53,493 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@c412556
2021-12-09 02:46:53,493 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@c412556
2021-12-09 02:46:53,493 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@c412556
2021-12-09 02:46:53,494 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@64021427
2021-12-09 02:46:53,494 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@296edc75
2021-12-09 02:46:53,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@339f3a55
2021-12-09 02:46:53,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@339f3a55
2021-12-09 02:46:53,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@339f3a55
2021-12-09 02:46:53,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4702e7a5
2021-12-09 02:46:53,496 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4702e7a5
2021-12-09 02:46:53,496 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4702e7a5
2021-12-09 02:46:53,496 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@3830b06c
2021-12-09 02:46:53,496 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3a0aaaf0
2021-12-09 02:46:53,497 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@42fc4ac4
2021-12-09 02:46:53,497 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@42fc4ac4
2021-12-09 02:46:53,497 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@691541bc
2021-12-09 02:46:53,498 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@280fafd
2021-12-09 02:46:53,498 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@280fafd
2021-12-09 02:46:53,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@8840c98
2021-12-09 02:46:53,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@8840c98
2021-12-09 02:46:53,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7ab2a07e
2021-12-09 02:46:53,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3757e8e2
2021-12-09 02:46:53,500 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@58a765ce
2021-12-09 02:46:53,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@46a123e4
2021-12-09 02:46:53,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@46a123e4
2021-12-09 02:46:53,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3a296107
2021-12-09 02:46:53,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1f129467
2021-12-09 02:46:53,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@646cd766
2021-12-09 02:46:53,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@57151b3a
2021-12-09 02:46:53,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@26457986
2021-12-09 02:46:53,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2dff7085
2021-12-09 02:46:53,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2faa55bb
2021-12-09 02:46:53,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@501957bf
2021-12-09 02:46:53,519 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 02:46:53,759 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 02:46:53,766 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 02:46:53,799 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@467ef400] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@13fe5bb7]
2021-12-09 02:46:53,889 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@467ef400] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3c544c9]
2021-12-09 02:46:54,095 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 02:46:54,099 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3c544c9] for TypeConfiguration
2021-12-09 02:46:54,100 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 02:46:54,649 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 02:46:54,895 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 02:46:55,137 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 02:46:55,147 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 02:46:55,163 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 2.993 seconds (JVM running for 3.483)
2021-12-09 02:50:36,997 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 02:50:36,999 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3c544c9] for TypeConfiguration
2021-12-09 02:50:36,999 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@9bb125] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3c544c9]
2021-12-09 02:50:37,004 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 02:50:37,008 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 02:50:40,623 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 20939 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 02:50:40,625 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 02:50:40,625 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 02:50:40,990 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:50:40,991 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:50:40,997 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 3 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 02:50:41,125 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:50:41,126 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:50:41,143 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:50:41,144 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:50:41,145 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:50:41,152 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:50:41,164 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 02:50:41,167 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:50:41,168 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:50:41,172 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:50:41,172 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:50:41,173 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:50:41,174 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:50:41,174 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 02:50:41,179 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:50:41,180 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 02:50:41,196 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2021-12-09 02:50:41,602 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 02:50:41,608 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 02:50:41,608 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 02:50:41,608 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 02:50:41,689 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 02:50:41,690 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1036 ms
2021-12-09 02:50:41,801 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 02:50:41,843 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 02:50:41,976 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 02:50:41,996 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 02:50:41,996 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 02:50:41,997 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 02:50:41,997 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@650aa077
2021-12-09 02:50:41,997 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@372461a9
2021-12-09 02:50:41,998 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@3086f480
2021-12-09 02:50:41,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 02:50:41,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 02:50:41,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 02:50:41,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 02:50:41,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 02:50:42,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 02:50:42,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 02:50:42,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 02:50:42,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 02:50:42,001 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 02:50:42,001 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 02:50:42,001 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 02:50:42,002 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6bcae9
2021-12-09 02:50:42,002 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6bcae9
2021-12-09 02:50:42,002 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6bcae9
2021-12-09 02:50:42,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 02:50:42,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 02:50:42,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 02:50:42,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 02:50:42,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 02:50:42,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 02:50:42,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44b940a2
2021-12-09 02:50:42,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44b940a2
2021-12-09 02:50:42,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@72557746
2021-12-09 02:50:42,006 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@72557746
2021-12-09 02:50:42,006 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@6221b13b
2021-12-09 02:50:42,006 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@6221b13b
2021-12-09 02:50:42,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4052b19f
2021-12-09 02:50:42,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31efacad
2021-12-09 02:50:42,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5d124d29
2021-12-09 02:50:42,008 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d124d29
2021-12-09 02:50:42,008 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7926352f
2021-12-09 02:50:42,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7926352f
2021-12-09 02:50:42,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@7ca492d9
2021-12-09 02:50:42,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7ca492d9
2021-12-09 02:50:42,011 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@486e9d1d
2021-12-09 02:50:42,011 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@486e9d1d
2021-12-09 02:50:42,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a531422
2021-12-09 02:50:42,013 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a531422
2021-12-09 02:50:42,014 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d28fb02
2021-12-09 02:50:42,015 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d28fb02
2021-12-09 02:50:42,015 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@101cf747
2021-12-09 02:50:42,015 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@101cf747
2021-12-09 02:50:42,016 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@70b6db83
2021-12-09 02:50:42,016 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@70b6db83
2021-12-09 02:50:42,017 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@370ef50b
2021-12-09 02:50:42,017 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@370ef50b
2021-12-09 02:50:42,018 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@2a0ea492
2021-12-09 02:50:42,018 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a0ea492
2021-12-09 02:50:42,019 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@49671897
2021-12-09 02:50:42,019 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@49671897
2021-12-09 02:50:42,020 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 02:50:42,020 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 02:50:42,021 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 02:50:42,022 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@191c6e13
2021-12-09 02:50:42,023 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 02:50:42,023 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 02:50:42,023 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 02:50:42,024 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@696b52bc
2021-12-09 02:50:42,025 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5b2b8d86
2021-12-09 02:50:42,026 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@14b528b6
2021-12-09 02:50:42,026 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@14b528b6
2021-12-09 02:50:42,026 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@fbe70d8
2021-12-09 02:50:42,026 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fbe70d8
2021-12-09 02:50:42,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aea704c
2021-12-09 02:50:42,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aea704c
2021-12-09 02:50:42,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@7d1c164a
2021-12-09 02:50:42,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d1c164a
2021-12-09 02:50:42,028 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bb1337
2021-12-09 02:50:42,028 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bb1337
2021-12-09 02:50:42,028 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15214920
2021-12-09 02:50:42,029 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 02:50:42,029 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 02:50:42,029 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 02:50:42,030 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 02:50:42,030 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 02:50:42,031 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 02:50:42,031 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@f245bdd
2021-12-09 02:50:42,032 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@14b275bd
2021-12-09 02:50:42,032 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 02:50:42,032 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 02:50:42,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 02:50:42,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 02:50:42,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 02:50:42,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 02:50:42,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@7f8a9454
2021-12-09 02:50:42,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@47044f7d
2021-12-09 02:50:42,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@58aa1d72
2021-12-09 02:50:42,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58aa1d72
2021-12-09 02:50:42,037 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5eed6dfb
2021-12-09 02:50:42,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@3c28e5b6
2021-12-09 02:50:42,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c28e5b6
2021-12-09 02:50:42,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@5d1d9d73
2021-12-09 02:50:42,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d1d9d73
2021-12-09 02:50:42,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5db3d57c
2021-12-09 02:50:42,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7a84788f
2021-12-09 02:50:42,040 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@72ecbcb3
2021-12-09 02:50:42,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@25791d40
2021-12-09 02:50:42,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@25791d40
2021-12-09 02:50:42,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7abeabe9
2021-12-09 02:50:42,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a05dd30
2021-12-09 02:50:42,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b52699c
2021-12-09 02:50:42,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@dbed7fd
2021-12-09 02:50:42,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@250d440
2021-12-09 02:50:42,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76c86567
2021-12-09 02:50:42,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e5efcab
2021-12-09 02:50:42,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 02:50:42,077 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 02:50:42,356 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 02:50:42,365 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 02:50:42,406 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44864536] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@455f4483]
2021-12-09 02:50:42,519 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44864536] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@652b3733]
2021-12-09 02:50:42,783 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 02:50:42,787 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@652b3733] for TypeConfiguration
2021-12-09 02:50:42,789 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 02:50:43,343 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 02:50:43,547 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 02:50:43,760 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 02:50:43,769 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 02:50:43,780 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.367 seconds (JVM running for 3.871)
2021-12-09 02:54:14,601 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 02:54:14,603 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@652b3733] for TypeConfiguration
2021-12-09 02:54:14,603 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7a9d9533] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@652b3733]
2021-12-09 02:54:14,608 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 02:54:14,613 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 02:54:19,102 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 21290 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 02:54:19,104 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 02:54:19,104 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 02:54:19,604 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:54:19,605 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:54:19,616 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 7 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 02:54:19,833 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:54:19,834 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:54:19,869 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:54:19,872 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:54:19,874 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:54:19,885 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 02:54:19,903 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 68 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 02:54:19,908 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:54:19,910 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 02:54:19,915 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:54:19,916 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:54:19,916 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:54:19,918 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 02:54:19,918 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 02:54:19,928 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 02:54:19,928 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 02:54:19,951 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
2021-12-09 02:54:20,470 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 02:54:20,478 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 02:54:20,478 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 02:54:20,478 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 02:54:20,575 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 02:54:20,575 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1434 ms
2021-12-09 02:54:20,727 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 02:54:20,780 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 02:54:20,918 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 02:54:20,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@20cdb152
2021-12-09 02:54:20,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@20cdb152
2021-12-09 02:54:20,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@20cdb152
2021-12-09 02:54:20,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5c48b72c
2021-12-09 02:54:20,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7ce29a2d
2021-12-09 02:54:20,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@5fffb692
2021-12-09 02:54:20,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@4962b41e
2021-12-09 02:54:20,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@4962b41e
2021-12-09 02:54:20,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4962b41e
2021-12-09 02:54:20,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@7f5fcfe9
2021-12-09 02:54:20,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@7f5fcfe9
2021-12-09 02:54:20,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7f5fcfe9
2021-12-09 02:54:20,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@475f5672
2021-12-09 02:54:20,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@475f5672
2021-12-09 02:54:20,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@475f5672
2021-12-09 02:54:20,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@44598ef7
2021-12-09 02:54:20,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@44598ef7
2021-12-09 02:54:20,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44598ef7
2021-12-09 02:54:20,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@3ebc955b
2021-12-09 02:54:20,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@3ebc955b
2021-12-09 02:54:20,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ebc955b
2021-12-09 02:54:20,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@3830f918
2021-12-09 02:54:20,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@3830f918
2021-12-09 02:54:20,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3830f918
2021-12-09 02:54:20,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@38883a31
2021-12-09 02:54:20,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@38883a31
2021-12-09 02:54:20,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38883a31
2021-12-09 02:54:20,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e1a5f
2021-12-09 02:54:20,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e1a5f
2021-12-09 02:54:20,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9fe720a
2021-12-09 02:54:20,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9fe720a
2021-12-09 02:54:20,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@11f23203
2021-12-09 02:54:20,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@11f23203
2021-12-09 02:54:20,955 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@62c3f556
2021-12-09 02:54:20,956 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3dc68586
2021-12-09 02:54:20,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@31da0434
2021-12-09 02:54:20,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@31da0434
2021-12-09 02:54:20,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@fb5aeed
2021-12-09 02:54:20,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@fb5aeed
2021-12-09 02:54:20,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@670342a2
2021-12-09 02:54:20,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@670342a2
2021-12-09 02:54:20,959 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@443cdaa4
2021-12-09 02:54:20,959 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@443cdaa4
2021-12-09 02:54:20,960 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@67e0fd6d
2021-12-09 02:54:20,960 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@67e0fd6d
2021-12-09 02:54:20,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4c319d52
2021-12-09 02:54:20,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4c319d52
2021-12-09 02:54:20,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b2c4a8b
2021-12-09 02:54:20,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@b2c4a8b
2021-12-09 02:54:20,962 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4a6c0f38
2021-12-09 02:54:20,962 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4a6c0f38
2021-12-09 02:54:20,963 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@18709cb2
2021-12-09 02:54:20,963 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@18709cb2
2021-12-09 02:54:20,964 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@7c1503a3
2021-12-09 02:54:20,964 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c1503a3
2021-12-09 02:54:20,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@36ad229b
2021-12-09 02:54:20,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@36ad229b
2021-12-09 02:54:20,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@50211483
2021-12-09 02:54:20,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50211483
2021-12-09 02:54:20,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50211483
2021-12-09 02:54:20,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6de004f1
2021-12-09 02:54:20,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@517704
2021-12-09 02:54:20,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@517704
2021-12-09 02:54:20,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@517704
2021-12-09 02:54:20,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2f9b21d6
2021-12-09 02:54:20,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@740a0d5e
2021-12-09 02:54:20,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@1e30db85
2021-12-09 02:54:20,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1e30db85
2021-12-09 02:54:20,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@78c262ba
2021-12-09 02:54:20,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78c262ba
2021-12-09 02:54:20,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5db948c9
2021-12-09 02:54:20,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5db948c9
2021-12-09 02:54:20,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@4ae2e781
2021-12-09 02:54:20,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ae2e781
2021-12-09 02:54:20,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e00bfe2
2021-12-09 02:54:20,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e00bfe2
2021-12-09 02:54:20,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@685f5d0d
2021-12-09 02:54:20,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@58687fb7
2021-12-09 02:54:20,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@58687fb7
2021-12-09 02:54:20,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@58687fb7
2021-12-09 02:54:20,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29962b2f
2021-12-09 02:54:20,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29962b2f
2021-12-09 02:54:20,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29962b2f
2021-12-09 02:54:20,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@77524ca7
2021-12-09 02:54:20,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@6af609ea
2021-12-09 02:54:20,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5c313224
2021-12-09 02:54:20,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c313224
2021-12-09 02:54:20,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5c313224
2021-12-09 02:54:20,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@527a8665
2021-12-09 02:54:20,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@527a8665
2021-12-09 02:54:20,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@527a8665
2021-12-09 02:54:20,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@580902cd
2021-12-09 02:54:20,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@6f85ee02
2021-12-09 02:54:20,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@4a642e4b
2021-12-09 02:54:20,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a642e4b
2021-12-09 02:54:20,979 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33d7765a
2021-12-09 02:54:20,980 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@7d3691e1
2021-12-09 02:54:20,980 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d3691e1
2021-12-09 02:54:20,981 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@2dff7085
2021-12-09 02:54:20,981 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2dff7085
2021-12-09 02:54:20,981 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b30a50d
2021-12-09 02:54:20,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53a50b0a
2021-12-09 02:54:20,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@6dcab9d9
2021-12-09 02:54:20,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@26e8ff8c
2021-12-09 02:54:20,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@26e8ff8c
2021-12-09 02:54:20,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@448c92fc
2021-12-09 02:54:20,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@251c8145
2021-12-09 02:54:20,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@17c0274c
2021-12-09 02:54:20,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7abeabe9
2021-12-09 02:54:20,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a05dd30
2021-12-09 02:54:20,985 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b52699c
2021-12-09 02:54:20,985 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@dbed7fd
2021-12-09 02:54:20,985 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@250d440
2021-12-09 02:54:21,006 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 02:54:21,279 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 02:54:21,289 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 02:54:21,349 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a536164] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1657b017]
2021-12-09 02:54:21,521 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a536164] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@70c205bf]
2021-12-09 02:54:21,784 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 02:54:21,789 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@70c205bf] for TypeConfiguration
2021-12-09 02:54:21,791 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 02:54:22,398 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 02:54:22,615 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 02:54:22,855 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 02:54:22,865 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 02:54:22,876 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 4.04 seconds (JVM running for 4.699)
2021-12-09 03:03:40,623 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:03:40,625 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@70c205bf] for TypeConfiguration
2021-12-09 03:03:40,625 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6e0fd863] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@70c205bf]
2021-12-09 03:03:40,628 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:03:40,643 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:03:44,824 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 21976 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:03:44,826 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:03:44,826 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:03:45,225 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:03:45,226 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:03:45,250 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:03:45,251 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:03:45,252 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:03:45,261 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:03:45,275 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 46 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:03:45,398 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:03:45,399 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:03:45,404 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:03:45,404 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:03:45,405 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:03:45,406 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:03:45,406 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:03:45,412 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:03:45,412 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:03:45,429 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2021-12-09 03:03:45,803 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:03:45,810 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:03:45,810 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:03:45,810 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:03:45,899 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:03:45,900 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1044 ms
2021-12-09 03:03:46,016 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:03:46,059 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:03:46,161 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:03:46,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:03:46,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:03:46,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:03:46,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@126f8f24
2021-12-09 03:03:46,181 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@11c78080
2021-12-09 03:03:46,181 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6282b9f5
2021-12-09 03:03:46,182 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:03:46,182 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:03:46,182 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:03:46,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:03:46,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:03:46,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:03:46,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:03:46,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:03:46,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:03:46,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:03:46,185 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:03:46,185 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:03:46,185 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:03:46,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:03:46,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:03:46,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:03:46,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:03:46,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:03:46,187 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:03:46,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:03:46,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:03:46,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 03:03:46,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 03:03:46,189 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 03:03:46,189 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 03:03:46,189 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@380ce5a3
2021-12-09 03:03:46,189 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@380ce5a3
2021-12-09 03:03:46,190 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e24ce51
2021-12-09 03:03:46,190 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@74960e9d
2021-12-09 03:03:46,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@61037caf
2021-12-09 03:03:46,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@61037caf
2021-12-09 03:03:46,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 03:03:46,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 03:03:46,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 03:03:46,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 03:03:46,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 03:03:46,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 03:03:46,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 03:03:46,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 03:03:46,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 03:03:46,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 03:03:46,195 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 03:03:46,195 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 03:03:46,195 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 03:03:46,195 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 03:03:46,196 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 03:03:46,196 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 03:03:46,197 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@805e72e
2021-12-09 03:03:46,197 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@805e72e
2021-12-09 03:03:46,198 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@1472208d
2021-12-09 03:03:46,198 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1472208d
2021-12-09 03:03:46,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:03:46,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:03:46,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:03:46,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b195203
2021-12-09 03:03:46,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:03:46,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:03:46,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:03:46,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f395ce1
2021-12-09 03:03:46,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f930e0
2021-12-09 03:03:46,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 03:03:46,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 03:03:46,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 03:03:46,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 03:03:46,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 03:03:46,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 03:03:46,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 03:03:46,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 03:03:46,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 03:03:46,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 03:03:46,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a3b10f4
2021-12-09 03:03:46,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:03:46,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:03:46,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:03:46,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:03:46,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:03:46,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:03:46,206 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e1e837d
2021-12-09 03:03:46,206 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@626b639e
2021-12-09 03:03:46,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:03:46,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:03:46,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:03:46,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:03:46,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:03:46,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:03:46,208 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@361cd35c
2021-12-09 03:03:46,208 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3b4086c1
2021-12-09 03:03:46,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 03:03:46,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 03:03:46,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@44bc2449
2021-12-09 03:03:46,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 03:03:46,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 03:03:46,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@102c18e
2021-12-09 03:03:46,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@102c18e
2021-12-09 03:03:46,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2bebd114
2021-12-09 03:03:46,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6dcab9d9
2021-12-09 03:03:46,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@39832280
2021-12-09 03:03:46,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 03:03:46,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 03:03:46,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:03:46,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:03:46,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:03:46,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:03:46,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:03:46,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:03:46,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 03:03:46,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 03:03:46,236 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:03:46,501 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:03:46,514 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:03:46,571 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48cf8414]
2021-12-09 03:03:46,782 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 03:03:47,182 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:03:47,188 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 03:03:47,190 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:03:47,908 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 03:03:48,189 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 03:03:48,577 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 03:03:48,590 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 03:03:48,604 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 4.025 seconds (JVM running for 4.517)
2021-12-09 03:04:11,561 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 03:04:11,561 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 03:04:11,562 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 03:04:42,072 [http-nio-5050-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present]
2021-12-09 03:05:47,075 [http-nio-5050-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present]
2021-12-09 03:06:30,064 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:06:30,065 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 03:06:30,065 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3571e2a1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 03:06:30,069 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:06:30,073 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:06:33,720 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 22264 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:06:33,722 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:06:33,722 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:06:34,090 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:06:34,090 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:06:34,112 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:06:34,114 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:06:34,115 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:06:34,123 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:06:34,135 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 42 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:06:34,262 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:06:34,263 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:06:34,267 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:06:34,268 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:06:34,268 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:06:34,269 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:06:34,269 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:06:34,275 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:06:34,275 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:06:34,292 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2021-12-09 03:06:34,680 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:06:34,685 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:06:34,686 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:06:34,686 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:06:34,768 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:06:34,768 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1016 ms
2021-12-09 03:06:34,888 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:06:34,926 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:06:35,042 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:06:35,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:06:35,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:06:35,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:06:35,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@126f8f24
2021-12-09 03:06:35,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@11c78080
2021-12-09 03:06:35,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6282b9f5
2021-12-09 03:06:35,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:06:35,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:06:35,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:06:35,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:06:35,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:06:35,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:06:35,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:06:35,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:06:35,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:06:35,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:06:35,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:06:35,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:06:35,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:06:35,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:06:35,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:06:35,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:06:35,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:06:35,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:06:35,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:06:35,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:06:35,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:06:35,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 03:06:35,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 03:06:35,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 03:06:35,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 03:06:35,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@380ce5a3
2021-12-09 03:06:35,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@380ce5a3
2021-12-09 03:06:35,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e24ce51
2021-12-09 03:06:35,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@74960e9d
2021-12-09 03:06:35,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@61037caf
2021-12-09 03:06:35,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@61037caf
2021-12-09 03:06:35,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 03:06:35,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 03:06:35,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 03:06:35,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 03:06:35,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 03:06:35,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 03:06:35,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 03:06:35,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 03:06:35,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 03:06:35,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 03:06:35,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 03:06:35,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 03:06:35,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 03:06:35,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 03:06:35,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 03:06:35,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 03:06:35,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@805e72e
2021-12-09 03:06:35,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@805e72e
2021-12-09 03:06:35,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@1472208d
2021-12-09 03:06:35,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1472208d
2021-12-09 03:06:35,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:06:35,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:06:35,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:06:35,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b195203
2021-12-09 03:06:35,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:06:35,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:06:35,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:06:35,086 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f395ce1
2021-12-09 03:06:35,086 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f930e0
2021-12-09 03:06:35,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 03:06:35,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 03:06:35,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 03:06:35,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 03:06:35,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 03:06:35,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 03:06:35,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 03:06:35,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 03:06:35,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 03:06:35,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 03:06:35,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a3b10f4
2021-12-09 03:06:35,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:06:35,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:06:35,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:06:35,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:06:35,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:06:35,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:06:35,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e1e837d
2021-12-09 03:06:35,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@626b639e
2021-12-09 03:06:35,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:06:35,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:06:35,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:06:35,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:06:35,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:06:35,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:06:35,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@361cd35c
2021-12-09 03:06:35,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3b4086c1
2021-12-09 03:06:35,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 03:06:35,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 03:06:35,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@44bc2449
2021-12-09 03:06:35,096 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 03:06:35,096 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 03:06:35,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@102c18e
2021-12-09 03:06:35,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@102c18e
2021-12-09 03:06:35,098 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2bebd114
2021-12-09 03:06:35,098 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6dcab9d9
2021-12-09 03:06:35,099 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@39832280
2021-12-09 03:06:35,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 03:06:35,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 03:06:35,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:06:35,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:06:35,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:06:35,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:06:35,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:06:35,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:06:35,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 03:06:35,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 03:06:35,132 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:06:35,403 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:06:35,413 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:06:35,453 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48cf8414]
2021-12-09 03:06:35,567 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 03:06:35,853 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:06:35,858 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 03:06:35,859 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:06:36,425 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 03:06:36,636 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 03:06:36,848 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 03:06:36,856 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 03:06:36,868 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.367 seconds (JVM running for 3.833)
2021-12-09 03:06:43,234 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 03:06:43,235 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 03:06:43,236 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 03:06:43,259 [http-nio-5050-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'topicId' for method parameter type long is not present]
2021-12-09 03:06:44,074 [http-nio-5050-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'topicId' for method parameter type long is not present]
2021-12-09 03:06:44,227 [http-nio-5050-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'topicId' for method parameter type long is not present]
2021-12-09 03:06:44,362 [http-nio-5050-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'topicId' for method parameter type long is not present]
2021-12-09 03:07:38,329 [http-nio-5050-exec-5] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present]
2021-12-09 03:08:07,458 [http-nio-5050-exec-7] INFO  t.g.website.controller.UserController              - User created: User(userId=0, email=Lustav@gmail.chom, username=test5dfferthjeffds, password=testd6fferjteffds, mobile=eelmdert, collectedPoints=0, createdAt=Thu Nov 25 06:37:39 CET 2021)
2021-12-09 03:08:07,503 [http-nio-5050-exec-7] DEBUG org.hibernate.SQL                                  - insert into user (collected_points, created_at, email, mobile, password, username) values (?, ?, ?, ?, ?, ?)
2021-12-09 03:08:07,519 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [INTEGER] - [0]
2021-12-09 03:08:07,520 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [2] as [TIMESTAMP] - [Thu Dec 09 03:08:07 CET 2021]
2021-12-09 03:08:07,524 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [3] as [VARCHAR] - [Lustav@gmail.chom]
2021-12-09 03:08:07,524 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [4] as [VARCHAR] - [eelmdert]
2021-12-09 03:08:07,524 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [5] as [VARCHAR] - [testd6fferjteffds]
2021-12-09 03:08:07,524 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [6] as [VARCHAR] - [test5dfferthjeffds]
2021-12-09 03:08:13,723 [http-nio-5050-exec-8] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present]
2021-12-09 03:08:15,086 [http-nio-5050-exec-10] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present]
2021-12-09 03:08:20,672 [http-nio-5050-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present]
2021-12-09 03:11:03,119 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:11:03,120 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 03:11:03,120 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@77777a3f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 03:11:03,125 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:11:03,128 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:11:22,563 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 22698 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:11:22,565 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:11:22,565 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:11:23,079 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:11:23,080 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:11:23,122 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:11:23,125 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:11:23,129 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:11:23,140 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:11:23,157 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 70 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:11:23,349 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:11:23,351 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:11:23,362 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:11:23,364 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:11:23,365 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:11:23,367 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:11:23,368 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 16 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:11:23,387 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:11:23,387 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:11:23,427 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 33 ms. Found 5 JPA repository interfaces.
2021-12-09 03:11:23,955 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:11:23,961 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:11:23,962 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:11:23,962 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:11:24,044 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:11:24,044 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1448 ms
2021-12-09 03:11:24,161 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:11:24,199 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:11:24,305 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:11:24,325 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:11:24,326 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:11:24,326 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:11:24,326 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@243bf087
2021-12-09 03:11:24,327 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@781aff8b
2021-12-09 03:11:24,327 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@4962b41e
2021-12-09 03:11:24,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:11:24,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:11:24,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:11:24,330 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:11:24,330 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:11:24,330 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:11:24,331 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:11:24,331 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:11:24,331 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:11:24,331 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:11:24,332 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:11:24,332 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:11:24,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:11:24,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:11:24,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:11:24,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:11:24,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:11:24,334 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:11:24,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:11:24,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:11:24,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:11:24,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 03:11:24,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 03:11:24,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 03:11:24,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 03:11:24,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@646427f7
2021-12-09 03:11:24,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@646427f7
2021-12-09 03:11:24,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d9c45ee
2021-12-09 03:11:24,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d124d29
2021-12-09 03:11:24,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@7926352f
2021-12-09 03:11:24,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7926352f
2021-12-09 03:11:24,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 03:11:24,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 03:11:24,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 03:11:24,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 03:11:24,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 03:11:24,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 03:11:24,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 03:11:24,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 03:11:24,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 03:11:24,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 03:11:24,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 03:11:24,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 03:11:24,346 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 03:11:24,346 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 03:11:24,347 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 03:11:24,347 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 03:11:24,348 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@36ad229b
2021-12-09 03:11:24,348 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36ad229b
2021-12-09 03:11:24,349 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@50211483
2021-12-09 03:11:24,349 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50211483
2021-12-09 03:11:24,350 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:11:24,350 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:11:24,351 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:11:24,351 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@517704
2021-12-09 03:11:24,352 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:11:24,352 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:11:24,352 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:11:24,353 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b2b8d86
2021-12-09 03:11:24,353 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@14b528b6
2021-12-09 03:11:24,354 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 03:11:24,354 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 03:11:24,355 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 03:11:24,355 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 03:11:24,356 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 03:11:24,356 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 03:11:24,356 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 03:11:24,356 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 03:11:24,357 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 03:11:24,357 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 03:11:24,357 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58687fb7
2021-12-09 03:11:24,358 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:11:24,358 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:11:24,358 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:11:24,359 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:11:24,359 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:11:24,359 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:11:24,360 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b29ab61
2021-12-09 03:11:24,360 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@5d71b500
2021-12-09 03:11:24,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:11:24,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:11:24,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:11:24,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:11:24,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:11:24,362 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:11:24,362 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@5e599100
2021-12-09 03:11:24,362 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@4a642e4b
2021-12-09 03:11:24,363 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 03:11:24,363 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 03:11:24,364 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7d3691e1
2021-12-09 03:11:24,365 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 03:11:24,365 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 03:11:24,366 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 03:11:24,366 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 03:11:24,366 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@65eb3597
2021-12-09 03:11:24,367 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@374c40ba
2021-12-09 03:11:24,368 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@41def031
2021-12-09 03:11:24,370 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 03:11:24,370 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 03:11:24,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 03:11:24,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 03:11:24,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:11:24,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:11:24,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:11:24,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:11:24,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:11:24,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:11:24,402 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:11:24,740 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:11:24,748 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:11:24,800 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e0986c9]
2021-12-09 03:11:24,927 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46a388cc]
2021-12-09 03:11:25,196 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:11:25,201 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46a388cc] for TypeConfiguration
2021-12-09 03:11:25,202 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:11:25,796 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 03:11:26,006 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 03:11:26,222 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 03:11:26,229 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 03:11:26,240 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.888 seconds (JVM running for 4.412)
2021-12-09 03:11:27,290 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 03:11:27,291 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 03:11:27,291 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 0 ms
2021-12-09 03:11:27,314 [http-nio-5050-exec-1] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 03:11:27,337 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 03:11:27,349 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 03:11:27,358 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 03:11:27,359 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 03:11:27,359 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 03:11:27,359 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_0_] : [VARCHAR]) - [eelmdert]
2021-12-09 03:11:27,359 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_0_] : [VARCHAR]) - [testd6fferteffd]
2021-12-09 03:11:27,359 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_0_] : [VARCHAR]) - [test5dfferteffd]
2021-12-09 03:11:33,308 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.id_user as id_user5_2_0_, topic0_.vote as vote4_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 03:11:33,308 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 03:11:33,310 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [3]
2021-12-09 03:11:33,310 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 03:11:33,310 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dsgdd]
2021-12-09 03:11:33,310 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user5_2_0_] : [BIGINT]) - [3]
2021-12-09 03:11:33,310 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote4_2_0_] : [INTEGER]) - [0]
2021-12-09 03:11:33,311 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 03:11:33,311 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 03:11:33,311 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 03:11:33,311 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [VARCHAR]) - [eelmdert]
2021-12-09 03:11:33,311 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6fferteffds]
2021-12-09 03:11:33,311 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dfferteffds]
2021-12-09 03:11:41,677 [http-nio-5050-exec-3] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.id_user as id_user5_2_0_, topic0_.vote as vote4_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 03:11:41,677 [http-nio-5050-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [2]
2021-12-09 03:11:43,885 [http-nio-5050-exec-4] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.id_user as id_user5_2_0_, topic0_.vote as vote4_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 03:11:43,886 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 03:11:43,887 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [3]
2021-12-09 03:11:43,887 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 03:11:43,887 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dsgdd]
2021-12-09 03:11:43,887 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user5_2_0_] : [BIGINT]) - [3]
2021-12-09 03:11:43,887 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote4_2_0_] : [INTEGER]) - [0]
2021-12-09 03:11:43,887 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 03:11:43,888 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 03:11:43,888 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 03:11:43,888 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [VARCHAR]) - [eelmdert]
2021-12-09 03:11:43,888 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6fferteffds]
2021-12-09 03:11:43,888 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dfferteffds]
2021-12-09 03:17:42,322 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:17:42,323 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@46a388cc] for TypeConfiguration
2021-12-09 03:17:42,323 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6525b2ae] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@46a388cc]
2021-12-09 03:17:42,325 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:17:42,329 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:17:44,784 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 23268 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:17:44,786 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:17:44,786 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:17:45,151 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:17:45,151 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:17:45,172 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:17:45,174 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:17:45,175 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:17:45,183 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:17:45,195 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 41 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:17:45,318 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:17:45,318 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:17:45,323 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:17:45,323 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:17:45,324 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:17:45,325 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:17:45,325 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:17:45,330 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:17:45,331 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:17:45,348 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 03:17:45,738 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:17:45,744 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:17:45,744 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:17:45,744 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:17:45,823 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:17:45,823 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1008 ms
2021-12-09 03:17:45,941 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:17:45,981 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:17:46,095 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:17:46,115 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:17:46,115 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:17:46,115 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:17:46,116 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@243bf087
2021-12-09 03:17:46,116 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@781aff8b
2021-12-09 03:17:46,116 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@4962b41e
2021-12-09 03:17:46,117 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:17:46,117 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:17:46,118 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:17:46,118 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:17:46,118 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:17:46,118 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:17:46,119 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:17:46,119 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:17:46,119 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:17:46,120 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:17:46,120 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:17:46,120 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:17:46,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:17:46,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:17:46,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:17:46,122 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:17:46,122 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:17:46,122 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:17:46,123 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:17:46,123 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:17:46,123 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:17:46,124 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 03:17:46,124 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 03:17:46,125 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 03:17:46,125 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 03:17:46,125 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@646427f7
2021-12-09 03:17:46,125 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@646427f7
2021-12-09 03:17:46,126 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d9c45ee
2021-12-09 03:17:46,126 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d124d29
2021-12-09 03:17:46,127 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@7926352f
2021-12-09 03:17:46,127 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7926352f
2021-12-09 03:17:46,127 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 03:17:46,127 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 03:17:46,128 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 03:17:46,128 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 03:17:46,129 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 03:17:46,129 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 03:17:46,129 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 03:17:46,130 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 03:17:46,130 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 03:17:46,130 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 03:17:46,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 03:17:46,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 03:17:46,132 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 03:17:46,132 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 03:17:46,132 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 03:17:46,133 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 03:17:46,134 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@36ad229b
2021-12-09 03:17:46,134 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36ad229b
2021-12-09 03:17:46,135 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@50211483
2021-12-09 03:17:46,135 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50211483
2021-12-09 03:17:46,136 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:17:46,136 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:17:46,136 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:17:46,136 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@517704
2021-12-09 03:17:46,137 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:17:46,137 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:17:46,137 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:17:46,138 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b2b8d86
2021-12-09 03:17:46,138 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@14b528b6
2021-12-09 03:17:46,139 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 03:17:46,139 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 03:17:46,139 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 03:17:46,139 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 03:17:46,140 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 03:17:46,140 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 03:17:46,140 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 03:17:46,140 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 03:17:46,141 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 03:17:46,141 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 03:17:46,141 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58687fb7
2021-12-09 03:17:46,142 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:17:46,142 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:17:46,142 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:17:46,142 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:17:46,142 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:17:46,143 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:17:46,143 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b29ab61
2021-12-09 03:17:46,143 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@5d71b500
2021-12-09 03:17:46,144 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:17:46,144 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:17:46,144 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:17:46,145 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:17:46,145 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:17:46,145 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:17:46,145 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@5e599100
2021-12-09 03:17:46,145 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@4a642e4b
2021-12-09 03:17:46,146 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 03:17:46,146 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 03:17:46,147 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7d3691e1
2021-12-09 03:17:46,148 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 03:17:46,148 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 03:17:46,149 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 03:17:46,149 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 03:17:46,149 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@65eb3597
2021-12-09 03:17:46,149 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@374c40ba
2021-12-09 03:17:46,150 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@41def031
2021-12-09 03:17:46,152 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 03:17:46,152 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 03:17:46,153 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 03:17:46,153 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 03:17:46,153 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:17:46,153 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:17:46,153 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:17:46,153 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:17:46,153 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:17:46,153 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:17:46,184 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:17:46,452 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:17:46,462 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:17:46,504 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e0986c9]
2021-12-09 03:17:46,618 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46a388cc]
2021-12-09 03:17:46,900 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:17:46,906 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46a388cc] for TypeConfiguration
2021-12-09 03:17:46,907 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:17:47,483 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 03:17:47,694 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 03:17:47,920 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 03:17:47,929 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 03:17:47,941 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.368 seconds (JVM running for 4.051)
2021-12-09 03:25:50,790 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:25:50,792 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@46a388cc] for TypeConfiguration
2021-12-09 03:25:50,792 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5360d4d3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@46a388cc]
2021-12-09 03:25:50,798 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:25:50,805 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:25:54,670 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 24033 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:25:54,672 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:25:54,672 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:25:55,036 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:25:55,037 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:25:55,043 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 3 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 03:25:55,163 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:25:55,163 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:25:55,181 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:25:55,182 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:25:55,183 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:25:55,191 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:25:55,202 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 39 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:25:55,206 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:25:55,206 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:25:55,210 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:25:55,211 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:25:55,211 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:25:55,212 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:25:55,212 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:25:55,218 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:25:55,218 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:25:55,234 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2021-12-09 03:25:55,602 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:25:55,607 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:25:55,607 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:25:55,608 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:25:55,683 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:25:55,683 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 983 ms
2021-12-09 03:25:55,797 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:25:55,832 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:25:55,947 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:25:55,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:25:55,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:25:55,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:25:55,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@243bf087
2021-12-09 03:25:55,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@781aff8b
2021-12-09 03:25:55,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@4962b41e
2021-12-09 03:25:55,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:25:55,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:25:55,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:25:55,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:25:55,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:25:55,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:25:55,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:25:55,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:25:55,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:25:55,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:25:55,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:25:55,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:25:55,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:25:55,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:25:55,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:25:55,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:25:55,979 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:25:55,979 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:25:55,980 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:25:55,981 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:25:55,981 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:25:55,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 03:25:55,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 03:25:55,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 03:25:55,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 03:25:55,983 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@646427f7
2021-12-09 03:25:55,983 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@646427f7
2021-12-09 03:25:55,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d9c45ee
2021-12-09 03:25:55,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d124d29
2021-12-09 03:25:55,984 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@7926352f
2021-12-09 03:25:55,985 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7926352f
2021-12-09 03:25:55,985 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 03:25:55,985 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 03:25:55,986 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 03:25:55,986 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 03:25:55,987 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 03:25:55,987 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 03:25:55,987 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 03:25:55,987 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 03:25:55,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 03:25:55,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 03:25:55,989 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 03:25:55,989 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 03:25:55,989 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 03:25:55,990 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 03:25:55,990 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 03:25:55,990 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 03:25:55,992 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@36ad229b
2021-12-09 03:25:55,993 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36ad229b
2021-12-09 03:25:55,994 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@50211483
2021-12-09 03:25:55,994 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50211483
2021-12-09 03:25:55,995 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:25:55,995 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:25:55,995 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:25:55,996 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@517704
2021-12-09 03:25:55,997 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:25:55,997 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:25:55,997 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:25:55,998 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b2b8d86
2021-12-09 03:25:55,998 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@14b528b6
2021-12-09 03:25:55,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 03:25:55,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 03:25:55,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 03:25:55,999 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 03:25:56,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 03:25:56,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 03:25:56,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 03:25:56,000 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 03:25:56,001 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 03:25:56,001 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 03:25:56,001 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58687fb7
2021-12-09 03:25:56,002 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:25:56,002 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:25:56,002 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:25:56,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:25:56,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:25:56,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:25:56,003 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b29ab61
2021-12-09 03:25:56,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@5d71b500
2021-12-09 03:25:56,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:25:56,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:25:56,004 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:25:56,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:25:56,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:25:56,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:25:56,005 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@5e599100
2021-12-09 03:25:56,006 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@4a642e4b
2021-12-09 03:25:56,006 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 03:25:56,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 03:25:56,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7d3691e1
2021-12-09 03:25:56,008 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 03:25:56,008 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 03:25:56,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 03:25:56,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 03:25:56,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@65eb3597
2021-12-09 03:25:56,010 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@374c40ba
2021-12-09 03:25:56,010 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@41def031
2021-12-09 03:25:56,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 03:25:56,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 03:25:56,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 03:25:56,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 03:25:56,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:25:56,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:25:56,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:25:56,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:25:56,013 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:25:56,013 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:25:56,034 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:25:56,274 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:25:56,284 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:25:56,323 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e0986c9]
2021-12-09 03:25:56,436 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46a388cc]
2021-12-09 03:25:56,700 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:25:56,704 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46a388cc] for TypeConfiguration
2021-12-09 03:25:56,705 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:25:57,273 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 03:25:57,480 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 03:25:57,703 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 03:25:57,711 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 03:25:57,722 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.258 seconds (JVM running for 3.912)
2021-12-09 03:26:09,995 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 03:26:09,995 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 03:26:09,996 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 03:26:10,040 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.id_user as id_user5_2_0_, topic0_.vote as vote4_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 03:26:10,050 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 03:26:10,054 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [3]
2021-12-09 03:26:10,059 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 03:26:10,060 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dsgdd]
2021-12-09 03:26:10,060 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user5_2_0_] : [BIGINT]) - [3]
2021-12-09 03:26:10,060 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote4_2_0_] : [INTEGER]) - [0]
2021-12-09 03:26:10,061 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 03:26:10,061 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 03:26:10,061 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 03:26:10,061 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [VARCHAR]) - [eelmdert]
2021-12-09 03:26:10,061 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6fferteffds]
2021-12-09 03:26:10,062 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dfferteffds]
2021-12-09 03:27:09,246 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:27:09,247 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@46a388cc] for TypeConfiguration
2021-12-09 03:27:09,247 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1c7beed0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@46a388cc]
2021-12-09 03:27:09,248 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:27:09,251 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:27:11,492 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 24160 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:27:11,493 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:27:11,493 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:27:11,811 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:27:11,812 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:27:11,822 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 03:27:11,929 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:27:11,929 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:27:11,943 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:27:11,944 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:27:11,945 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:27:11,952 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:27:11,963 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 34 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:27:11,967 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:27:11,967 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:27:11,971 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:27:11,971 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:27:11,972 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:27:11,973 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:27:11,973 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:27:11,978 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:27:11,978 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:27:11,992 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2021-12-09 03:27:12,334 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:27:12,339 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:27:12,340 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:27:12,340 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:27:12,421 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:27:12,421 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 902 ms
2021-12-09 03:27:12,506 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:27:12,531 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:27:12,598 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:27:12,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7ce29a2d
2021-12-09 03:27:12,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7ce29a2d
2021-12-09 03:27:12,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ce29a2d
2021-12-09 03:27:12,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fffb692
2021-12-09 03:27:12,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@126f8f24
2021-12-09 03:27:12,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@11c78080
2021-12-09 03:27:12,616 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@707865bd
2021-12-09 03:27:12,616 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@707865bd
2021-12-09 03:27:12,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@707865bd
2021-12-09 03:27:12,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@616a06e3
2021-12-09 03:27:12,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@616a06e3
2021-12-09 03:27:12,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@616a06e3
2021-12-09 03:27:12,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@57fdb8a4
2021-12-09 03:27:12,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@57fdb8a4
2021-12-09 03:27:12,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@57fdb8a4
2021-12-09 03:27:12,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@21a46ff1
2021-12-09 03:27:12,621 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@21a46ff1
2021-12-09 03:27:12,621 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@21a46ff1
2021-12-09 03:27:12,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@5efe47fd
2021-12-09 03:27:12,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@5efe47fd
2021-12-09 03:27:12,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5efe47fd
2021-12-09 03:27:12,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@27a6fef2
2021-12-09 03:27:12,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@27a6fef2
2021-12-09 03:27:12,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27a6fef2
2021-12-09 03:27:12,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@31b0f02
2021-12-09 03:27:12,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@31b0f02
2021-12-09 03:27:12,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31b0f02
2021-12-09 03:27:12,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@149274cb
2021-12-09 03:27:12,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@149274cb
2021-12-09 03:27:12,626 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@101bdd1c
2021-12-09 03:27:12,626 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@101bdd1c
2021-12-09 03:27:12,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@3dc68586
2021-12-09 03:27:12,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@3dc68586
2021-12-09 03:27:12,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@380ce5a3
2021-12-09 03:27:12,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6e24ce51
2021-12-09 03:27:12,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@73893ec1
2021-12-09 03:27:12,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@73893ec1
2021-12-09 03:27:12,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@d5e575c
2021-12-09 03:27:12,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@d5e575c
2021-12-09 03:27:12,630 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@3b41e1bf
2021-12-09 03:27:12,630 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3b41e1bf
2021-12-09 03:27:12,630 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@21390938
2021-12-09 03:27:12,631 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@21390938
2021-12-09 03:27:12,631 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@72fbf94d
2021-12-09 03:27:12,631 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@72fbf94d
2021-12-09 03:27:12,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7f2c57fe
2021-12-09 03:27:12,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7f2c57fe
2021-12-09 03:27:12,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f8a02cf
2021-12-09 03:27:12,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f8a02cf
2021-12-09 03:27:12,634 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@a90e2c1
2021-12-09 03:27:12,634 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@a90e2c1
2021-12-09 03:27:12,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1b24ea2a
2021-12-09 03:27:12,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1b24ea2a
2021-12-09 03:27:12,637 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@b5ac0c1
2021-12-09 03:27:12,637 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b5ac0c1
2021-12-09 03:27:12,638 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@2afdf6b7
2021-12-09 03:27:12,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2afdf6b7
2021-12-09 03:27:12,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@7436364d
2021-12-09 03:27:12,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7436364d
2021-12-09 03:27:12,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7436364d
2021-12-09 03:27:12,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57bd6a8f
2021-12-09 03:27:12,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@2e0fdbe9
2021-12-09 03:27:12,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2e0fdbe9
2021-12-09 03:27:12,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2e0fdbe9
2021-12-09 03:27:12,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@29013ef2
2021-12-09 03:27:12,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@19827608
2021-12-09 03:27:12,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7d2c9361
2021-12-09 03:27:12,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d2c9361
2021-12-09 03:27:12,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@296edc75
2021-12-09 03:27:12,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@296edc75
2021-12-09 03:27:12,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@339f3a55
2021-12-09 03:27:12,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@339f3a55
2021-12-09 03:27:12,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@4702e7a5
2021-12-09 03:27:12,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4702e7a5
2021-12-09 03:27:12,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@784d9bc
2021-12-09 03:27:12,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@784d9bc
2021-12-09 03:27:12,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c7e73c5
2021-12-09 03:27:12,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@491f8831
2021-12-09 03:27:12,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@491f8831
2021-12-09 03:27:12,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@491f8831
2021-12-09 03:27:12,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11df2829
2021-12-09 03:27:12,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11df2829
2021-12-09 03:27:12,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11df2829
2021-12-09 03:27:12,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@4ed18798
2021-12-09 03:27:12,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@1e1e837d
2021-12-09 03:27:12,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@7ab2a07e
2021-12-09 03:27:12,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@7ab2a07e
2021-12-09 03:27:12,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@7ab2a07e
2021-12-09 03:27:12,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6f85ee02
2021-12-09 03:27:12,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6f85ee02
2021-12-09 03:27:12,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6f85ee02
2021-12-09 03:27:12,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@7b14c61
2021-12-09 03:27:12,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@361cd35c
2021-12-09 03:27:12,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@5600a5da
2021-12-09 03:27:12,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5600a5da
2021-12-09 03:27:12,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@40d848f9
2021-12-09 03:27:12,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@57151b3a
2021-12-09 03:27:12,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57151b3a
2021-12-09 03:27:12,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@53a50b0a
2021-12-09 03:27:12,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@53a50b0a
2021-12-09 03:27:12,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102c18e
2021-12-09 03:27:12,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2bebd114
2021-12-09 03:27:12,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@22d477c2
2021-12-09 03:27:12,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@5a05dd30
2021-12-09 03:27:12,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a05dd30
2021-12-09 03:27:12,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@76c86567
2021-12-09 03:27:12,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e5efcab
2021-12-09 03:27:12,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 03:27:12,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 03:27:12,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:27:12,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:27:12,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:27:12,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:27:12,679 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:27:12,945 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:27:12,952 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:27:12,986 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@300bb303] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4243341e]
2021-12-09 03:27:13,073 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@300bb303] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@61993d18]
2021-12-09 03:27:13,277 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:27:13,281 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@61993d18] for TypeConfiguration
2021-12-09 03:27:13,282 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:27:13,706 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 03:27:13,859 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 03:27:14,036 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 03:27:14,042 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 03:27:14,051 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 2.76 seconds (JVM running for 3.239)
2021-12-09 03:27:54,474 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 03:27:54,474 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 03:27:54,475 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 03:27:54,507 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.id_user as id_user5_2_0_, topic0_.vote as vote4_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 03:27:54,514 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 03:27:54,517 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [3]
2021-12-09 03:27:54,520 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 03:27:54,520 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dsgdd]
2021-12-09 03:27:54,520 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user5_2_0_] : [BIGINT]) - [3]
2021-12-09 03:27:54,521 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote4_2_0_] : [INTEGER]) - [0]
2021-12-09 03:27:54,522 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 03:27:54,522 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 03:27:54,522 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 03:27:54,522 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [VARCHAR]) - [eelmdert]
2021-12-09 03:27:54,522 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6fferteffds]
2021-12-09 03:27:54,522 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dfferteffds]
2021-12-09 03:33:50,428 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:33:50,428 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@61993d18] for TypeConfiguration
2021-12-09 03:33:50,429 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@46cf25a1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@61993d18]
2021-12-09 03:33:50,430 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:33:50,436 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:33:54,086 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 24620 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:33:54,088 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:33:54,088 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:33:54,410 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:33:54,411 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:33:54,417 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 3 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 03:33:54,533 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:33:54,533 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:33:54,549 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:33:54,550 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:33:54,551 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:33:54,558 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:33:54,570 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 37 ms. Found 2 Elasticsearch repository interfaces.
2021-12-09 03:33:54,573 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:33:54,574 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:33:54,578 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:33:54,578 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:33:54,579 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:33:54,580 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:33:54,580 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:33:54,585 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:33:54,585 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:33:54,601 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 6 JPA repository interfaces.
2021-12-09 03:33:54,903 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:33:54,908 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:33:54,909 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:33:54,909 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:33:54,989 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:33:54,989 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 875 ms
2021-12-09 03:33:55,077 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:33:55,102 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:33:55,168 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:33:55,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@4962b41e
2021-12-09 03:33:55,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@4962b41e
2021-12-09 03:33:55,185 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4962b41e
2021-12-09 03:33:55,185 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c11d32
2021-12-09 03:33:55,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@707865bd
2021-12-09 03:33:55,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@67688110
2021-12-09 03:33:55,187 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@57fdb8a4
2021-12-09 03:33:55,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@57fdb8a4
2021-12-09 03:33:55,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57fdb8a4
2021-12-09 03:33:55,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@21a46ff1
2021-12-09 03:33:55,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@21a46ff1
2021-12-09 03:33:55,189 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21a46ff1
2021-12-09 03:33:55,189 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@5efe47fd
2021-12-09 03:33:55,190 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@5efe47fd
2021-12-09 03:33:55,190 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5efe47fd
2021-12-09 03:33:55,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@27a6fef2
2021-12-09 03:33:55,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@27a6fef2
2021-12-09 03:33:55,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27a6fef2
2021-12-09 03:33:55,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@31b0f02
2021-12-09 03:33:55,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@31b0f02
2021-12-09 03:33:55,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31b0f02
2021-12-09 03:33:55,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@149274cb
2021-12-09 03:33:55,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@149274cb
2021-12-09 03:33:55,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@149274cb
2021-12-09 03:33:55,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@101bdd1c
2021-12-09 03:33:55,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@101bdd1c
2021-12-09 03:33:55,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@101bdd1c
2021-12-09 03:33:55,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3dc68586
2021-12-09 03:33:55,195 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3dc68586
2021-12-09 03:33:55,195 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31da0434
2021-12-09 03:33:55,196 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31da0434
2021-12-09 03:33:55,197 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@fb5aeed
2021-12-09 03:33:55,197 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@fb5aeed
2021-12-09 03:33:55,197 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bc63e20
2021-12-09 03:33:55,198 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d5e575c
2021-12-09 03:33:55,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@3b41e1bf
2021-12-09 03:33:55,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b41e1bf
2021-12-09 03:33:55,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@21390938
2021-12-09 03:33:55,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@21390938
2021-12-09 03:33:55,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@72fbf94d
2021-12-09 03:33:55,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fbf94d
2021-12-09 03:33:55,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f2c57fe
2021-12-09 03:33:55,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f2c57fe
2021-12-09 03:33:55,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f8a02cf
2021-12-09 03:33:55,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f8a02cf
2021-12-09 03:33:55,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a90e2c1
2021-12-09 03:33:55,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a90e2c1
2021-12-09 03:33:55,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b24ea2a
2021-12-09 03:33:55,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b24ea2a
2021-12-09 03:33:55,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@47df5041
2021-12-09 03:33:55,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@47df5041
2021-12-09 03:33:55,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@224c7de4
2021-12-09 03:33:55,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@224c7de4
2021-12-09 03:33:55,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@1472208d
2021-12-09 03:33:55,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1472208d
2021-12-09 03:33:55,208 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@57bd6a8f
2021-12-09 03:33:55,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@57bd6a8f
2021-12-09 03:33:55,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@2e0fdbe9
2021-12-09 03:33:55,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e0fdbe9
2021-12-09 03:33:55,211 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e0fdbe9
2021-12-09 03:33:55,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f081b5d
2021-12-09 03:33:55,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@19827608
2021-12-09 03:33:55,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19827608
2021-12-09 03:33:55,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19827608
2021-12-09 03:33:55,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d2c9361
2021-12-09 03:33:55,214 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@296edc75
2021-12-09 03:33:55,215 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@339f3a55
2021-12-09 03:33:55,215 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@339f3a55
2021-12-09 03:33:55,216 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@4702e7a5
2021-12-09 03:33:55,216 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4702e7a5
2021-12-09 03:33:55,216 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@784d9bc
2021-12-09 03:33:55,217 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@784d9bc
2021-12-09 03:33:55,217 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3554bdc0
2021-12-09 03:33:55,217 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3554bdc0
2021-12-09 03:33:55,218 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@491f8831
2021-12-09 03:33:55,218 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@491f8831
2021-12-09 03:33:55,218 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@764fffa0
2021-12-09 03:33:55,219 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@4ed18798
2021-12-09 03:33:55,219 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@4ed18798
2021-12-09 03:33:55,219 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@4ed18798
2021-12-09 03:33:55,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@8840c98
2021-12-09 03:33:55,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@8840c98
2021-12-09 03:33:55,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@8840c98
2021-12-09 03:33:55,221 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@580902cd
2021-12-09 03:33:55,221 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@6f85ee02
2021-12-09 03:33:55,221 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3b435211
2021-12-09 03:33:55,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b435211
2021-12-09 03:33:55,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3b435211
2021-12-09 03:33:55,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33d7765a
2021-12-09 03:33:55,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33d7765a
2021-12-09 03:33:55,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33d7765a
2021-12-09 03:33:55,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@5600a5da
2021-12-09 03:33:55,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@40d848f9
2021-12-09 03:33:55,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@57151b3a
2021-12-09 03:33:55,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@57151b3a
2021-12-09 03:33:55,224 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@501957bf
2021-12-09 03:33:55,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@102c18e
2021-12-09 03:33:55,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@102c18e
2021-12-09 03:33:55,226 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@f882465
2021-12-09 03:33:55,226 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@f882465
2021-12-09 03:33:55,226 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@79ecc507
2021-12-09 03:33:55,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41def031
2021-12-09 03:33:55,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@17c0274c
2021-12-09 03:33:55,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@69796bd0
2021-12-09 03:33:55,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@69796bd0
2021-12-09 03:33:55,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 03:33:55,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d289d3f
2021-12-09 03:33:55,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10f405ff
2021-12-09 03:33:55,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 03:33:55,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 03:33:55,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 03:33:55,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 03:33:55,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 03:33:55,248 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:33:55,507 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:33:55,516 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:33:55,574 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67c21bf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@67afe909]
2021-12-09 03:33:55,677 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67c21bf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26f5e45d]
2021-12-09 03:33:55,888 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:33:55,892 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@26f5e45d] for TypeConfiguration
2021-12-09 03:33:55,893 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:33:56,354 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 03:33:56,511 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 03:33:56,638 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'repository' defined in tech.goodquestion.website.elasticsearch.Repository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:33:56,641 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:33:56,641 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@26f5e45d] for TypeConfiguration
2021-12-09 03:33:56,642 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@47d7e4b6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@26f5e45d]
2021-12-09 03:33:56,642 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:33:56,646 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:33:56,647 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:33:56,656 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:33:56,671 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'repository' defined in tech.goodquestion.website.elasticsearch.Repository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 16 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 38 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 42 common frames omitted
2021-12-09 03:35:27,278 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 24687 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:35:27,279 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:35:27,279 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:35:27,593 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:35:27,593 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:35:27,620 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 24 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:35:27,726 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:35:27,726 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:35:27,732 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:35:27,733 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:35:27,734 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:35:27,737 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:35:27,737 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:35:27,741 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:35:27,741 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:35:27,758 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 15 ms. Found 6 JPA repository interfaces.
2021-12-09 03:35:28,124 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:35:28,130 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:35:28,131 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:35:28,131 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:35:28,210 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:35:28,211 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 905 ms
2021-12-09 03:35:28,302 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:35:28,329 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:35:28,402 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:35:28,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 03:35:28,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 03:35:28,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 03:35:28,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7fbf26fc
2021-12-09 03:35:28,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4fecf308
2021-12-09 03:35:28,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f9dda71
2021-12-09 03:35:28,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 03:35:28,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 03:35:28,421 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 03:35:28,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 03:35:28,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 03:35:28,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 03:35:28,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 03:35:28,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 03:35:28,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 03:35:28,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 03:35:28,424 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 03:35:28,424 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 03:35:28,424 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 03:35:28,424 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 03:35:28,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 03:35:28,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 03:35:28,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 03:35:28,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 03:35:28,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 03:35:28,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 03:35:28,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 03:35:28,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@101bdd1c
2021-12-09 03:35:28,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@101bdd1c
2021-12-09 03:35:28,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3dc68586
2021-12-09 03:35:28,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3dc68586
2021-12-09 03:35:28,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@31da0434
2021-12-09 03:35:28,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@31da0434
2021-12-09 03:35:28,429 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c88191b
2021-12-09 03:35:28,429 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73893ec1
2021-12-09 03:35:28,430 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@d5e575c
2021-12-09 03:35:28,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@d5e575c
2021-12-09 03:35:28,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@3b41e1bf
2021-12-09 03:35:28,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3b41e1bf
2021-12-09 03:35:28,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@21390938
2021-12-09 03:35:28,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@21390938
2021-12-09 03:35:28,433 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@72fbf94d
2021-12-09 03:35:28,433 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@72fbf94d
2021-12-09 03:35:28,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f2c57fe
2021-12-09 03:35:28,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f2c57fe
2021-12-09 03:35:28,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f8a02cf
2021-12-09 03:35:28,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f8a02cf
2021-12-09 03:35:28,435 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a90e2c1
2021-12-09 03:35:28,435 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a90e2c1
2021-12-09 03:35:28,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b24ea2a
2021-12-09 03:35:28,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b24ea2a
2021-12-09 03:35:28,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47df5041
2021-12-09 03:35:28,437 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47df5041
2021-12-09 03:35:28,438 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@60bf494c
2021-12-09 03:35:28,438 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60bf494c
2021-12-09 03:35:28,439 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@45d56062
2021-12-09 03:35:28,439 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45d56062
2021-12-09 03:35:28,440 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@77cca767
2021-12-09 03:35:28,440 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77cca767
2021-12-09 03:35:28,440 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77cca767
2021-12-09 03:35:28,440 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31a136a6
2021-12-09 03:35:28,441 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 03:35:28,441 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 03:35:28,441 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 03:35:28,442 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19827608
2021-12-09 03:35:28,442 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7d2c9361
2021-12-09 03:35:28,442 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@296edc75
2021-12-09 03:35:28,443 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@296edc75
2021-12-09 03:35:28,443 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@339f3a55
2021-12-09 03:35:28,443 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@339f3a55
2021-12-09 03:35:28,443 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4702e7a5
2021-12-09 03:35:28,444 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4702e7a5
2021-12-09 03:35:28,444 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@784d9bc
2021-12-09 03:35:28,444 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@784d9bc
2021-12-09 03:35:28,445 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3554bdc0
2021-12-09 03:35:28,445 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3554bdc0
2021-12-09 03:35:28,445 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42fc4ac4
2021-12-09 03:35:28,446 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@11df2829
2021-12-09 03:35:28,446 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@11df2829
2021-12-09 03:35:28,446 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@11df2829
2021-12-09 03:35:28,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 03:35:28,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 03:35:28,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 03:35:28,448 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@8840c98
2021-12-09 03:35:28,448 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@7ab2a07e
2021-12-09 03:35:28,449 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 03:35:28,449 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 03:35:28,449 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 03:35:28,449 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 03:35:28,450 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 03:35:28,450 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 03:35:28,450 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@6b162ecc
2021-12-09 03:35:28,450 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@69ed5ea2
2021-12-09 03:35:28,451 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@46a123e4
2021-12-09 03:35:28,451 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46a123e4
2021-12-09 03:35:28,451 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a296107
2021-12-09 03:35:28,452 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@764a3e5d
2021-12-09 03:35:28,452 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@764a3e5d
2021-12-09 03:35:28,453 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3c7279a5
2021-12-09 03:35:28,453 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c7279a5
2021-12-09 03:35:28,453 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18dcb8a7
2021-12-09 03:35:28,453 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@72ecbcb3
2021-12-09 03:35:28,454 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@6df4af5
2021-12-09 03:35:28,455 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1d2fb82
2021-12-09 03:35:28,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d2fb82
2021-12-09 03:35:28,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:35:28,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:35:28,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:35:28,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 03:35:28,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 03:35:28,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 03:35:28,457 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 03:35:28,457 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 03:35:28,478 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:35:28,738 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:35:28,744 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:35:28,778 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d65fcf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3b021664]
2021-12-09 03:35:28,872 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d65fcf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@727453a3]
2021-12-09 03:35:29,084 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:35:29,087 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@727453a3] for TypeConfiguration
2021-12-09 03:35:29,088 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:35:29,295 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'controller' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/elasticsearch/Controller.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'repository' defined in tech.goodquestion.website.elasticsearch.Repository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:35:29,296 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:35:29,296 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@727453a3] for TypeConfiguration
2021-12-09 03:35:29,296 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3921e96f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@727453a3]
2021-12-09 03:35:29,298 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:35:29,301 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:35:29,303 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:35:29,312 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:35:29,322 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'controller' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/elasticsearch/Controller.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'repository' defined in tech.goodquestion.website.elasticsearch.Repository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'repository' defined in tech.goodquestion.website.elasticsearch.Repository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 52 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 56 common frames omitted
2021-12-09 03:39:29,915 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 24866 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:39:29,917 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:39:29,917 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:39:30,344 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:39:30,344 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:39:30,351 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 03:39:30,482 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:39:30,482 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:39:30,501 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:39:30,502 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:39:30,503 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:39:30,509 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:39:30,521 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:39:30,524 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:39:30,525 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:39:30,529 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:39:30,530 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:39:30,530 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:39:30,532 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:39:30,533 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:39:30,541 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:39:30,541 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:39:30,563 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2021-12-09 03:39:30,987 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:39:30,994 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:39:30,995 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:39:30,995 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:39:31,069 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:39:31,069 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1122 ms
2021-12-09 03:39:31,223 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:39:31,286 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:39:31,374 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:39:31,392 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 03:39:31,392 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 03:39:31,392 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 03:39:31,392 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35e98af
2021-12-09 03:39:31,392 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@662be9f7
2021-12-09 03:39:31,393 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@5b5f9003
2021-12-09 03:39:31,393 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 03:39:31,394 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 03:39:31,394 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 03:39:31,394 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@632b305d
2021-12-09 03:39:31,394 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@632b305d
2021-12-09 03:39:31,395 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@632b305d
2021-12-09 03:39:31,395 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@195113de
2021-12-09 03:39:31,395 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@195113de
2021-12-09 03:39:31,395 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@195113de
2021-12-09 03:39:31,396 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 03:39:31,396 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 03:39:31,396 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 03:39:31,397 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@266e9dda
2021-12-09 03:39:31,397 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@266e9dda
2021-12-09 03:39:31,397 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@266e9dda
2021-12-09 03:39:31,397 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 03:39:31,397 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 03:39:31,397 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 03:39:31,398 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 03:39:31,398 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 03:39:31,398 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 03:39:31,399 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4844930a
2021-12-09 03:39:31,399 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4844930a
2021-12-09 03:39:31,399 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f95653f
2021-12-09 03:39:31,399 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f95653f
2021-12-09 03:39:31,400 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@38029686
2021-12-09 03:39:31,400 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@38029686
2021-12-09 03:39:31,400 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@423ed3b5
2021-12-09 03:39:31,400 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4001d8c1
2021-12-09 03:39:31,400 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@2fc49538
2021-12-09 03:39:31,401 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2fc49538
2021-12-09 03:39:31,401 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@1cd6b1bd
2021-12-09 03:39:31,401 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cd6b1bd
2021-12-09 03:39:31,402 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@5bda157e
2021-12-09 03:39:31,402 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5bda157e
2021-12-09 03:39:31,402 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e4162bc
2021-12-09 03:39:31,402 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e4162bc
2021-12-09 03:39:31,403 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@61b65d54
2021-12-09 03:39:31,403 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@61b65d54
2021-12-09 03:39:31,403 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3dbd7107
2021-12-09 03:39:31,403 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3dbd7107
2021-12-09 03:39:31,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5edc3e29
2021-12-09 03:39:31,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5edc3e29
2021-12-09 03:39:31,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b87760e
2021-12-09 03:39:31,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b87760e
2021-12-09 03:39:31,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c1503a3
2021-12-09 03:39:31,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c1503a3
2021-12-09 03:39:31,406 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@49671897
2021-12-09 03:39:31,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@49671897
2021-12-09 03:39:31,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@35bd8bc9
2021-12-09 03:39:31,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@35bd8bc9
2021-12-09 03:39:31,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 03:39:31,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 03:39:31,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 03:39:31,409 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28a6e171
2021-12-09 03:39:31,409 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 03:39:31,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 03:39:31,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 03:39:31,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19f02280
2021-12-09 03:39:31,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@450f0235
2021-12-09 03:39:31,411 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@217dc48e
2021-12-09 03:39:31,411 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@217dc48e
2021-12-09 03:39:31,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@632383b9
2021-12-09 03:39:31,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@632383b9
2021-12-09 03:39:31,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b35798
2021-12-09 03:39:31,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b35798
2021-12-09 03:39:31,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3e28d779
2021-12-09 03:39:31,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e28d779
2021-12-09 03:39:31,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13cc0b90
2021-12-09 03:39:31,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13cc0b90
2021-12-09 03:39:31,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49580ca8
2021-12-09 03:39:31,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@35145874
2021-12-09 03:39:31,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@35145874
2021-12-09 03:39:31,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@35145874
2021-12-09 03:39:31,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 03:39:31,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 03:39:31,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 03:39:31,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@4b957db0
2021-12-09 03:39:31,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@273fa9e
2021-12-09 03:39:31,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 03:39:31,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 03:39:31,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 03:39:31,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 03:39:31,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 03:39:31,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 03:39:31,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@58a765ce
2021-12-09 03:39:31,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@58aa1d72
2021-12-09 03:39:31,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@4a864d4d
2021-12-09 03:39:31,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a864d4d
2021-12-09 03:39:31,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c28e5b6
2021-12-09 03:39:31,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@5d1d9d73
2021-12-09 03:39:31,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5d1d9d73
2021-12-09 03:39:31,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@26e0d39c
2021-12-09 03:39:31,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26e0d39c
2021-12-09 03:39:31,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b379bc6
2021-12-09 03:39:31,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5a14e60d
2021-12-09 03:39:31,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@4966bab1
2021-12-09 03:39:31,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@7e5efcab
2021-12-09 03:39:31,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e5efcab
2021-12-09 03:39:31,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:39:31,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:39:31,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:39:31,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:39:31,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:39:31,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 03:39:31,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 03:39:31,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 03:39:31,445 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:39:31,697 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:39:31,709 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:39:31,759 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48cf8414] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27dbaa33]
2021-12-09 03:39:31,898 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48cf8414] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@598778cc]
2021-12-09 03:39:32,149 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:39:32,153 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@598778cc] for TypeConfiguration
2021-12-09 03:39:32,154 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:39:32,418 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:39:32,419 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:39:32,419 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@598778cc] for TypeConfiguration
2021-12-09 03:39:32,419 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7f8f5d37] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@598778cc]
2021-12-09 03:39:32,421 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:39:32,425 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:39:32,426 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:39:32,435 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:39:32,453 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 70 common frames omitted
2021-12-09 03:40:39,955 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 24959 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:40:39,957 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:40:39,957 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:40:40,268 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:40:40,269 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:40:40,291 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:40:40,300 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 29 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:40:40,408 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:40:40,409 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:40:40,414 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:40:40,415 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:40:40,415 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:40:40,417 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:40:40,417 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 8 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:40:40,421 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:40:40,422 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:40:40,437 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2021-12-09 03:40:40,753 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:40:40,758 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:40:40,759 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:40:40,759 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:40:40,840 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:40:40,840 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 854 ms
2021-12-09 03:40:40,926 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:40:40,946 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:40:41,009 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:40:41,032 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@372461a9
2021-12-09 03:40:41,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@372461a9
2021-12-09 03:40:41,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@372461a9
2021-12-09 03:40:41,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3086f480
2021-12-09 03:40:41,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7fbf26fc
2021-12-09 03:40:41,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@4fecf308
2021-12-09 03:40:41,035 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@548e43b1
2021-12-09 03:40:41,035 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@548e43b1
2021-12-09 03:40:41,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@548e43b1
2021-12-09 03:40:41,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@5bb911c1
2021-12-09 03:40:41,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@5bb911c1
2021-12-09 03:40:41,037 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5bb911c1
2021-12-09 03:40:41,037 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@25974207
2021-12-09 03:40:41,037 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@25974207
2021-12-09 03:40:41,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@25974207
2021-12-09 03:40:41,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@5aa781f2
2021-12-09 03:40:41,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@5aa781f2
2021-12-09 03:40:41,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5aa781f2
2021-12-09 03:40:41,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@38a4e2b0
2021-12-09 03:40:41,040 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@38a4e2b0
2021-12-09 03:40:41,040 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38a4e2b0
2021-12-09 03:40:41,041 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@541afb85
2021-12-09 03:40:41,041 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@541afb85
2021-12-09 03:40:41,041 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@541afb85
2021-12-09 03:40:41,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@34c53688
2021-12-09 03:40:41,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@34c53688
2021-12-09 03:40:41,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@34c53688
2021-12-09 03:40:41,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8c12524
2021-12-09 03:40:41,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8c12524
2021-12-09 03:40:41,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@62c3f556
2021-12-09 03:40:41,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@62c3f556
2021-12-09 03:40:41,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@31efacad
2021-12-09 03:40:41,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@31efacad
2021-12-09 03:40:41,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31da0434
2021-12-09 03:40:41,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3c88191b
2021-12-09 03:40:41,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5bc63e20
2021-12-09 03:40:41,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5bc63e20
2021-12-09 03:40:41,046 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@14fc9bd
2021-12-09 03:40:41,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@14fc9bd
2021-12-09 03:40:41,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@6aa5974e
2021-12-09 03:40:41,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6aa5974e
2021-12-09 03:40:41,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7a388990
2021-12-09 03:40:41,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7a388990
2021-12-09 03:40:41,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6db328f8
2021-12-09 03:40:41,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6db328f8
2021-12-09 03:40:41,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@790d8fdd
2021-12-09 03:40:41,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@790d8fdd
2021-12-09 03:40:41,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5a090f62
2021-12-09 03:40:41,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5a090f62
2021-12-09 03:40:41,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b877a54
2021-12-09 03:40:41,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b877a54
2021-12-09 03:40:41,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2df65a56
2021-12-09 03:40:41,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2df65a56
2021-12-09 03:40:41,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@55846997
2021-12-09 03:40:41,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@55846997
2021-12-09 03:40:41,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@51ff3c4b
2021-12-09 03:40:41,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51ff3c4b
2021-12-09 03:40:41,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@12fcb2c3
2021-12-09 03:40:41,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@12fcb2c3
2021-12-09 03:40:41,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@12fcb2c3
2021-12-09 03:40:41,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77cca767
2021-12-09 03:40:41,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@1f884bd6
2021-12-09 03:40:41,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1f884bd6
2021-12-09 03:40:41,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1f884bd6
2021-12-09 03:40:41,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fef0b40
2021-12-09 03:40:41,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@c412556
2021-12-09 03:40:41,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@64021427
2021-12-09 03:40:41,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@64021427
2021-12-09 03:40:41,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@6d0290d8
2021-12-09 03:40:41,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6d0290d8
2021-12-09 03:40:41,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@209f3887
2021-12-09 03:40:41,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@209f3887
2021-12-09 03:40:41,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@685f5d0d
2021-12-09 03:40:41,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@685f5d0d
2021-12-09 03:40:41,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d9618f2
2021-12-09 03:40:41,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d9618f2
2021-12-09 03:40:41,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3554bdc0
2021-12-09 03:40:41,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@43a4a9e5
2021-12-09 03:40:41,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@43a4a9e5
2021-12-09 03:40:41,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@43a4a9e5
2021-12-09 03:40:41,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6af609ea
2021-12-09 03:40:41,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6af609ea
2021-12-09 03:40:41,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6af609ea
2021-12-09 03:40:41,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5c313224
2021-12-09 03:40:41,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@8840c98
2021-12-09 03:40:41,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@580902cd
2021-12-09 03:40:41,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@580902cd
2021-12-09 03:40:41,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@580902cd
2021-12-09 03:40:41,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@47044f7d
2021-12-09 03:40:41,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@47044f7d
2021-12-09 03:40:41,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@47044f7d
2021-12-09 03:40:41,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@3b435211
2021-12-09 03:40:41,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@6b162ecc
2021-12-09 03:40:41,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@13250132
2021-12-09 03:40:41,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13250132
2021-12-09 03:40:41,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@46a123e4
2021-12-09 03:40:41,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2faa55bb
2021-12-09 03:40:41,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2faa55bb
2021-12-09 03:40:41,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@7a84788f
2021-12-09 03:40:41,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7a84788f
2021-12-09 03:40:41,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3c7279a5
2021-12-09 03:40:41,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@18dcb8a7
2021-12-09 03:40:41,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@38e83838
2021-12-09 03:40:41,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@250d440
2021-12-09 03:40:41,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@250d440
2021-12-09 03:40:41,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 03:40:41,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:40:41,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:40:41,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:40:41,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:40:41,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:40:41,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:40:41,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 03:40:41,094 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:40:41,344 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:40:41,351 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:40:41,385 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e0986c9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1377b1a0]
2021-12-09 03:40:41,479 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7e0986c9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e39f08c]
2021-12-09 03:40:41,679 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:40:41,683 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e39f08c] for TypeConfiguration
2021-12-09 03:40:41,684 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:40:41,896 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:40:41,897 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:40:41,897 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e39f08c] for TypeConfiguration
2021-12-09 03:40:41,897 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1468fc85] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e39f08c]
2021-12-09 03:40:41,898 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:40:41,902 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:40:41,903 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:40:41,913 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:40:41,924 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 70 common frames omitted
2021-12-09 03:42:55,416 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 25179 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:42:55,418 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:42:55,418 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:42:55,845 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:42:55,846 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:42:55,873 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:42:55,882 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 33 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:42:56,016 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:42:56,017 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:42:56,023 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:42:56,024 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:42:56,025 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:42:56,027 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:42:56,027 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:42:56,035 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:42:56,035 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:42:56,056 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2021-12-09 03:42:56,478 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:42:56,485 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:42:56,486 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:42:56,486 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:42:56,578 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:42:56,578 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1128 ms
2021-12-09 03:42:56,740 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:42:56,794 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:42:56,880 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:42:56,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:42:56,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:42:56,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:42:56,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@126f8f24
2021-12-09 03:42:56,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@11c78080
2021-12-09 03:42:56,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6282b9f5
2021-12-09 03:42:56,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:42:56,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:42:56,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:42:56,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:42:56,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:42:56,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:42:56,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:42:56,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:42:56,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:42:56,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:42:56,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:42:56,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:42:56,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:42:56,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:42:56,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:42:56,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:42:56,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:42:56,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:42:56,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:42:56,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:42:56,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:42:56,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 03:42:56,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 03:42:56,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 03:42:56,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 03:42:56,906 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@380ce5a3
2021-12-09 03:42:56,906 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@380ce5a3
2021-12-09 03:42:56,906 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e24ce51
2021-12-09 03:42:56,906 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@74960e9d
2021-12-09 03:42:56,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@61037caf
2021-12-09 03:42:56,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@61037caf
2021-12-09 03:42:56,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 03:42:56,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 03:42:56,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 03:42:56,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 03:42:56,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 03:42:56,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 03:42:56,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 03:42:56,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 03:42:56,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 03:42:56,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 03:42:56,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 03:42:56,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 03:42:56,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 03:42:56,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 03:42:56,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 03:42:56,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 03:42:56,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@805e72e
2021-12-09 03:42:56,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@805e72e
2021-12-09 03:42:56,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@1472208d
2021-12-09 03:42:56,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1472208d
2021-12-09 03:42:56,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:42:56,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:42:56,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:42:56,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b195203
2021-12-09 03:42:56,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:42:56,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:42:56,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:42:56,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f395ce1
2021-12-09 03:42:56,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f930e0
2021-12-09 03:42:56,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 03:42:56,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 03:42:56,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 03:42:56,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 03:42:56,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 03:42:56,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 03:42:56,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 03:42:56,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 03:42:56,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 03:42:56,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 03:42:56,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a3b10f4
2021-12-09 03:42:56,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:42:56,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:42:56,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:42:56,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:42:56,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:42:56,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:42:56,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e1e837d
2021-12-09 03:42:56,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@626b639e
2021-12-09 03:42:56,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:42:56,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:42:56,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:42:56,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:42:56,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:42:56,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:42:56,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@361cd35c
2021-12-09 03:42:56,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3b4086c1
2021-12-09 03:42:56,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 03:42:56,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 03:42:56,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@44bc2449
2021-12-09 03:42:56,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 03:42:56,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 03:42:56,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@102c18e
2021-12-09 03:42:56,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@102c18e
2021-12-09 03:42:56,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2bebd114
2021-12-09 03:42:56,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6dcab9d9
2021-12-09 03:42:56,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@39832280
2021-12-09 03:42:56,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 03:42:56,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 03:42:56,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:42:56,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:42:56,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:42:56,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:42:56,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:42:56,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:42:56,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 03:42:56,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 03:42:56,948 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:42:57,200 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:42:57,211 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:42:57,255 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48cf8414]
2021-12-09 03:42:57,392 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 03:42:57,659 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:42:57,665 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 03:42:57,667 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:42:57,930 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:42:57,931 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:42:57,931 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 03:42:57,931 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3aa1c45] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 03:42:57,933 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:42:57,937 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:42:57,938 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:42:57,948 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:42:57,966 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 70 common frames omitted
2021-12-09 03:48:37,736 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 25471 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:48:37,737 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:48:37,737 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:48:38,135 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:48:38,136 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:48:38,158 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:48:38,166 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 28 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:48:38,309 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:48:38,309 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:48:38,316 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:48:38,317 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:48:38,318 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:48:38,321 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:48:38,321 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:48:38,328 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:48:38,328 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:48:38,355 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 23 ms. Found 5 JPA repository interfaces.
2021-12-09 03:48:38,769 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:48:38,776 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:48:38,777 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:48:38,777 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:48:38,873 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:48:38,873 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1109 ms
2021-12-09 03:48:39,003 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:48:39,055 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:48:39,141 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:48:39,156 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:48:39,156 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:48:39,156 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:48:39,157 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@243bf087
2021-12-09 03:48:39,157 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@781aff8b
2021-12-09 03:48:39,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@4962b41e
2021-12-09 03:48:39,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:48:39,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:48:39,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:48:39,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:48:39,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:48:39,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:48:39,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:48:39,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:48:39,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:48:39,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:48:39,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:48:39,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:48:39,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:48:39,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:48:39,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:48:39,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:48:39,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:48:39,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:48:39,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:48:39,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:48:39,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:48:39,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 03:48:39,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 03:48:39,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 03:48:39,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 03:48:39,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@646427f7
2021-12-09 03:48:39,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@646427f7
2021-12-09 03:48:39,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d9c45ee
2021-12-09 03:48:39,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d124d29
2021-12-09 03:48:39,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@7926352f
2021-12-09 03:48:39,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7926352f
2021-12-09 03:48:39,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 03:48:39,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 03:48:39,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 03:48:39,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 03:48:39,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 03:48:39,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 03:48:39,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 03:48:39,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 03:48:39,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 03:48:39,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 03:48:39,169 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 03:48:39,169 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 03:48:39,170 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 03:48:39,170 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 03:48:39,170 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 03:48:39,170 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 03:48:39,171 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@36ad229b
2021-12-09 03:48:39,172 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36ad229b
2021-12-09 03:48:39,172 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@50211483
2021-12-09 03:48:39,172 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50211483
2021-12-09 03:48:39,173 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:48:39,173 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:48:39,173 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:48:39,173 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@517704
2021-12-09 03:48:39,174 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:48:39,174 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:48:39,174 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:48:39,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b2b8d86
2021-12-09 03:48:39,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@14b528b6
2021-12-09 03:48:39,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 03:48:39,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 03:48:39,176 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 03:48:39,176 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 03:48:39,176 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 03:48:39,177 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 03:48:39,177 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 03:48:39,177 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 03:48:39,177 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 03:48:39,178 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 03:48:39,178 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58687fb7
2021-12-09 03:48:39,178 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:48:39,178 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:48:39,179 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:48:39,179 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:48:39,179 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:48:39,179 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:48:39,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b29ab61
2021-12-09 03:48:39,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@5d71b500
2021-12-09 03:48:39,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:48:39,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:48:39,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:48:39,181 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:48:39,181 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:48:39,181 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:48:39,181 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@5e599100
2021-12-09 03:48:39,181 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@4a642e4b
2021-12-09 03:48:39,182 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 03:48:39,182 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 03:48:39,182 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7d3691e1
2021-12-09 03:48:39,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 03:48:39,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 03:48:39,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 03:48:39,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 03:48:39,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@65eb3597
2021-12-09 03:48:39,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@374c40ba
2021-12-09 03:48:39,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@41def031
2021-12-09 03:48:39,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 03:48:39,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 03:48:39,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 03:48:39,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 03:48:39,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:48:39,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:48:39,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:48:39,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:48:39,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:48:39,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:48:39,207 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:48:39,448 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:48:39,460 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:48:39,505 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e0986c9]
2021-12-09 03:48:39,630 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46a388cc]
2021-12-09 03:48:39,869 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:48:39,874 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46a388cc] for TypeConfiguration
2021-12-09 03:48:39,875 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:48:40,153 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:48:40,153 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:48:40,154 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@46a388cc] for TypeConfiguration
2021-12-09 03:48:40,154 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3aa1c45] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@46a388cc]
2021-12-09 03:48:40,156 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:48:40,161 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:48:40,163 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:48:40,174 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:48:40,194 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 70 common frames omitted
2021-12-09 03:49:30,305 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 25566 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:49:30,307 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:49:30,307 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:49:30,781 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:49:30,782 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:49:30,812 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:49:30,827 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 41 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:49:30,992 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:49:30,994 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:49:31,003 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:49:31,004 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:49:31,005 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:49:31,008 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:49:31,008 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:49:31,014 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:49:31,014 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:49:31,034 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
2021-12-09 03:49:31,379 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:49:31,384 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:49:31,384 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:49:31,384 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:49:31,458 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:49:31,458 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1126 ms
2021-12-09 03:49:31,558 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:49:31,596 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:49:31,678 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:49:31,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:49:31,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:49:31,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:49:31,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@126f8f24
2021-12-09 03:49:31,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@11c78080
2021-12-09 03:49:31,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6282b9f5
2021-12-09 03:49:31,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:49:31,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:49:31,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:49:31,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:49:31,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:49:31,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:49:31,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:49:31,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:49:31,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:49:31,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:49:31,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:49:31,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:49:31,700 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:49:31,700 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:49:31,700 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:49:31,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:49:31,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:49:31,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:49:31,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:49:31,702 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:49:31,702 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:49:31,702 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 03:49:31,702 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 03:49:31,703 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 03:49:31,703 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 03:49:31,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@380ce5a3
2021-12-09 03:49:31,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@380ce5a3
2021-12-09 03:49:31,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e24ce51
2021-12-09 03:49:31,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@74960e9d
2021-12-09 03:49:31,705 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@61037caf
2021-12-09 03:49:31,705 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@61037caf
2021-12-09 03:49:31,706 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 03:49:31,706 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 03:49:31,706 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 03:49:31,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 03:49:31,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 03:49:31,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 03:49:31,708 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 03:49:31,708 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 03:49:31,708 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 03:49:31,709 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 03:49:31,709 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 03:49:31,709 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 03:49:31,710 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 03:49:31,710 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 03:49:31,710 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 03:49:31,711 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 03:49:31,712 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@805e72e
2021-12-09 03:49:31,712 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@805e72e
2021-12-09 03:49:31,713 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@1472208d
2021-12-09 03:49:31,713 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1472208d
2021-12-09 03:49:31,713 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:49:31,714 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:49:31,714 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:49:31,714 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b195203
2021-12-09 03:49:31,715 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:49:31,715 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:49:31,715 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:49:31,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f395ce1
2021-12-09 03:49:31,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f930e0
2021-12-09 03:49:31,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 03:49:31,717 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 03:49:31,717 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 03:49:31,717 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 03:49:31,717 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 03:49:31,718 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 03:49:31,718 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 03:49:31,718 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 03:49:31,719 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 03:49:31,719 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 03:49:31,719 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a3b10f4
2021-12-09 03:49:31,720 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:49:31,720 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:49:31,720 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:49:31,720 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:49:31,721 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:49:31,721 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:49:31,721 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e1e837d
2021-12-09 03:49:31,721 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@626b639e
2021-12-09 03:49:31,722 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:49:31,722 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:49:31,722 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:49:31,723 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:49:31,723 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:49:31,723 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:49:31,723 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@361cd35c
2021-12-09 03:49:31,723 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3b4086c1
2021-12-09 03:49:31,724 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 03:49:31,724 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 03:49:31,724 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@44bc2449
2021-12-09 03:49:31,725 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 03:49:31,725 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 03:49:31,726 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@102c18e
2021-12-09 03:49:31,726 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@102c18e
2021-12-09 03:49:31,726 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2bebd114
2021-12-09 03:49:31,726 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6dcab9d9
2021-12-09 03:49:31,727 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@39832280
2021-12-09 03:49:31,728 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 03:49:31,728 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 03:49:31,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:49:31,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:49:31,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:49:31,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:49:31,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:49:31,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:49:31,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 03:49:31,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 03:49:31,746 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:49:31,975 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:49:31,982 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:49:32,016 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48cf8414]
2021-12-09 03:49:32,112 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 03:49:32,356 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:49:32,360 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 03:49:32,361 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:49:32,560 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:49:32,560 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:49:32,560 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 03:49:32,561 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3f5ac587] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 03:49:32,562 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:49:32,567 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:49:32,569 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:49:32,580 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:49:32,591 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 70 common frames omitted
2021-12-09 03:50:53,195 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 25667 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:50:53,197 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:50:53,197 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:50:53,541 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:50:53,541 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:50:53,562 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:50:53,571 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 27 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:50:53,683 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:50:53,683 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:50:53,690 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:50:53,691 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:50:53,692 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:50:53,694 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:50:53,694 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:50:53,699 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:50:53,700 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:50:53,718 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
2021-12-09 03:50:54,059 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:50:54,064 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:50:54,064 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:50:54,064 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:50:54,138 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:50:54,139 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 915 ms
2021-12-09 03:50:54,231 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:50:54,253 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:50:54,319 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:50:54,334 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:50:54,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:50:54,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 03:50:54,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@126f8f24
2021-12-09 03:50:54,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@11c78080
2021-12-09 03:50:54,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6282b9f5
2021-12-09 03:50:54,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:50:54,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:50:54,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67688110
2021-12-09 03:50:54,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:50:54,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:50:54,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 03:50:54,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:50:54,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:50:54,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 03:50:54,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:50:54,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:50:54,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 03:50:54,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:50:54,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:50:54,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 03:50:54,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:50:54,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:50:54,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 03:50:54,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:50:54,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:50:54,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 03:50:54,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 03:50:54,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 03:50:54,346 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 03:50:54,346 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 03:50:54,346 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@380ce5a3
2021-12-09 03:50:54,347 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@380ce5a3
2021-12-09 03:50:54,347 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e24ce51
2021-12-09 03:50:54,347 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@74960e9d
2021-12-09 03:50:54,348 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@61037caf
2021-12-09 03:50:54,348 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@61037caf
2021-12-09 03:50:54,349 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 03:50:54,349 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 03:50:54,350 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 03:50:54,350 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 03:50:54,351 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 03:50:54,351 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 03:50:54,352 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 03:50:54,352 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 03:50:54,352 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 03:50:54,352 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 03:50:54,353 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 03:50:54,353 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 03:50:54,354 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 03:50:54,354 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 03:50:54,355 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 03:50:54,355 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 03:50:54,357 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@805e72e
2021-12-09 03:50:54,357 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@805e72e
2021-12-09 03:50:54,358 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@1472208d
2021-12-09 03:50:54,358 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1472208d
2021-12-09 03:50:54,359 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:50:54,360 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:50:54,360 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 03:50:54,360 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b195203
2021-12-09 03:50:54,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:50:54,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:50:54,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 03:50:54,362 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f395ce1
2021-12-09 03:50:54,362 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f930e0
2021-12-09 03:50:54,363 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 03:50:54,363 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 03:50:54,364 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 03:50:54,364 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 03:50:54,364 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 03:50:54,364 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 03:50:54,365 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 03:50:54,365 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 03:50:54,366 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 03:50:54,366 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 03:50:54,366 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a3b10f4
2021-12-09 03:50:54,368 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:50:54,368 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:50:54,368 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 03:50:54,368 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:50:54,369 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:50:54,369 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 03:50:54,369 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e1e837d
2021-12-09 03:50:54,369 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@626b639e
2021-12-09 03:50:54,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:50:54,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:50:54,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 03:50:54,372 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:50:54,372 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:50:54,372 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 03:50:54,372 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@361cd35c
2021-12-09 03:50:54,373 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3b4086c1
2021-12-09 03:50:54,374 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 03:50:54,374 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 03:50:54,375 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@44bc2449
2021-12-09 03:50:54,377 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 03:50:54,377 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 03:50:54,378 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@102c18e
2021-12-09 03:50:54,378 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@102c18e
2021-12-09 03:50:54,378 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2bebd114
2021-12-09 03:50:54,378 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6dcab9d9
2021-12-09 03:50:54,379 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@39832280
2021-12-09 03:50:54,381 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 03:50:54,381 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 03:50:54,382 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:50:54,382 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:50:54,382 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:50:54,382 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:50:54,382 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:50:54,382 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:50:54,382 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 03:50:54,382 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 03:50:54,407 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:50:54,725 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:50:54,733 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:50:54,771 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48cf8414]
2021-12-09 03:50:54,882 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 03:50:55,108 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:50:55,111 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 03:50:55,113 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:50:55,331 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:50:55,331 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:50:55,331 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 03:50:55,331 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@30a20fb3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 03:50:55,333 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:50:55,338 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:50:55,339 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:50:55,348 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:50:55,358 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 70 common frames omitted
2021-12-09 03:52:09,145 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 25794 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:52:09,147 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:52:09,147 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:52:09,596 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:52:09,597 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:52:09,623 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:52:09,631 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 31 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:52:09,773 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:52:09,773 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:52:09,780 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:52:09,781 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:52:09,782 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:52:09,784 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:52:09,784 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:52:09,791 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:52:09,792 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:52:09,816 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
2021-12-09 03:52:10,229 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:52:10,235 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:52:10,236 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:52:10,236 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:52:10,316 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:52:10,316 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1138 ms
2021-12-09 03:52:10,476 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:52:10,534 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:52:10,622 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:52:10,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:52:10,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:52:10,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 03:52:10,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@243bf087
2021-12-09 03:52:10,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@781aff8b
2021-12-09 03:52:10,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@4962b41e
2021-12-09 03:52:10,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:52:10,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:52:10,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 03:52:10,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:52:10,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:52:10,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 03:52:10,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:52:10,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:52:10,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 03:52:10,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:52:10,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:52:10,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 03:52:10,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:52:10,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:52:10,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e3236d
2021-12-09 03:52:10,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:52:10,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:52:10,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 03:52:10,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:52:10,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:52:10,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 03:52:10,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 03:52:10,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 03:52:10,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 03:52:10,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 03:52:10,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@646427f7
2021-12-09 03:52:10,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@646427f7
2021-12-09 03:52:10,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d9c45ee
2021-12-09 03:52:10,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d124d29
2021-12-09 03:52:10,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@7926352f
2021-12-09 03:52:10,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7926352f
2021-12-09 03:52:10,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 03:52:10,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 03:52:10,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 03:52:10,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 03:52:10,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 03:52:10,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 03:52:10,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 03:52:10,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 03:52:10,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 03:52:10,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 03:52:10,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 03:52:10,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 03:52:10,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 03:52:10,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 03:52:10,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 03:52:10,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 03:52:10,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@36ad229b
2021-12-09 03:52:10,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36ad229b
2021-12-09 03:52:10,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@50211483
2021-12-09 03:52:10,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50211483
2021-12-09 03:52:10,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:52:10,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:52:10,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 03:52:10,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@517704
2021-12-09 03:52:10,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:52:10,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:52:10,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 03:52:10,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b2b8d86
2021-12-09 03:52:10,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@14b528b6
2021-12-09 03:52:10,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 03:52:10,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 03:52:10,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 03:52:10,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 03:52:10,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 03:52:10,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 03:52:10,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 03:52:10,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 03:52:10,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 03:52:10,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 03:52:10,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58687fb7
2021-12-09 03:52:10,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:52:10,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:52:10,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 03:52:10,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:52:10,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:52:10,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 03:52:10,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b29ab61
2021-12-09 03:52:10,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@5d71b500
2021-12-09 03:52:10,664 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:52:10,664 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:52:10,664 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 03:52:10,664 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:52:10,664 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:52:10,664 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 03:52:10,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@5e599100
2021-12-09 03:52:10,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@4a642e4b
2021-12-09 03:52:10,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 03:52:10,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 03:52:10,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7d3691e1
2021-12-09 03:52:10,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 03:52:10,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 03:52:10,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 03:52:10,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 03:52:10,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@65eb3597
2021-12-09 03:52:10,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@374c40ba
2021-12-09 03:52:10,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@41def031
2021-12-09 03:52:10,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 03:52:10,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 03:52:10,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 03:52:10,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 03:52:10,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 03:52:10,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:52:10,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:52:10,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:52:10,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:52:10,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:52:10,693 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:52:10,944 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:52:10,956 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:52:11,000 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e0986c9]
2021-12-09 03:52:11,139 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46a388cc]
2021-12-09 03:52:11,399 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:52:11,404 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@46a388cc] for TypeConfiguration
2021-12-09 03:52:11,405 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:52:11,670 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:52:11,671 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:52:11,671 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@46a388cc] for TypeConfiguration
2021-12-09 03:52:11,671 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1fa58a48] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@46a388cc]
2021-12-09 03:52:11,673 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:52:11,677 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:52:11,678 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:52:11,688 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:52:11,704 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 70 common frames omitted
2021-12-09 03:54:16,552 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 25998 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:54:16,553 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:54:16,553 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:54:16,849 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:54:16,850 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:54:16,866 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 03:54:16,873 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 21 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:54:16,980 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:54:16,981 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:54:16,987 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:54:16,988 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:54:16,989 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:54:16,991 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:54:16,992 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 10 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:54:16,997 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:54:16,997 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:54:17,015 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2021-12-09 03:54:17,315 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:54:17,320 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:54:17,320 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:54:17,320 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:54:17,396 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:54:17,396 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 819 ms
2021-12-09 03:54:17,488 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:54:17,515 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:54:17,578 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:54:17,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 03:54:17,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 03:54:17,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 03:54:17,594 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@781aff8b
2021-12-09 03:54:17,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4962b41e
2021-12-09 03:54:17,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c11d32
2021-12-09 03:54:17,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 03:54:17,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 03:54:17,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 03:54:17,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 03:54:17,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 03:54:17,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 03:54:17,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 03:54:17,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 03:54:17,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 03:54:17,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@3830f918
2021-12-09 03:54:17,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@3830f918
2021-12-09 03:54:17,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3830f918
2021-12-09 03:54:17,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@38883a31
2021-12-09 03:54:17,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@38883a31
2021-12-09 03:54:17,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38883a31
2021-12-09 03:54:17,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 03:54:17,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 03:54:17,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 03:54:17,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 03:54:17,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 03:54:17,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 03:54:17,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11f23203
2021-12-09 03:54:17,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11f23203
2021-12-09 03:54:17,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4052b19f
2021-12-09 03:54:17,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4052b19f
2021-12-09 03:54:17,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@7d9c45ee
2021-12-09 03:54:17,604 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@7d9c45ee
2021-12-09 03:54:17,604 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5d124d29
2021-12-09 03:54:17,605 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@fb5aeed
2021-12-09 03:54:17,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@670342a2
2021-12-09 03:54:17,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@670342a2
2021-12-09 03:54:17,607 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@443cdaa4
2021-12-09 03:54:17,607 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@443cdaa4
2021-12-09 03:54:17,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@67e0fd6d
2021-12-09 03:54:17,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@67e0fd6d
2021-12-09 03:54:17,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c319d52
2021-12-09 03:54:17,609 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c319d52
2021-12-09 03:54:17,609 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@b2c4a8b
2021-12-09 03:54:17,609 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@b2c4a8b
2021-12-09 03:54:17,610 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a6c0f38
2021-12-09 03:54:17,611 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a6c0f38
2021-12-09 03:54:17,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18709cb2
2021-12-09 03:54:17,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18709cb2
2021-12-09 03:54:17,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@be164d8
2021-12-09 03:54:17,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@be164d8
2021-12-09 03:54:17,613 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@586495f1
2021-12-09 03:54:17,613 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@586495f1
2021-12-09 03:54:17,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@168142da
2021-12-09 03:54:17,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@168142da
2021-12-09 03:54:17,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@6de004f1
2021-12-09 03:54:17,616 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6de004f1
2021-12-09 03:54:17,616 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@517704
2021-12-09 03:54:17,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@517704
2021-12-09 03:54:17,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@517704
2021-12-09 03:54:17,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23444a36
2021-12-09 03:54:17,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 03:54:17,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 03:54:17,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 03:54:17,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e30db85
2021-12-09 03:54:17,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@78c262ba
2021-12-09 03:54:17,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@5db948c9
2021-12-09 03:54:17,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5db948c9
2021-12-09 03:54:17,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@4ae2e781
2021-12-09 03:54:17,621 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ae2e781
2021-12-09 03:54:17,621 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e00bfe2
2021-12-09 03:54:17,621 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e00bfe2
2021-12-09 03:54:17,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@15214920
2021-12-09 03:54:17,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15214920
2021-12-09 03:54:17,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58687fb7
2021-12-09 03:54:17,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58687fb7
2021-12-09 03:54:17,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@525647f3
2021-12-09 03:54:17,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 03:54:17,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 03:54:17,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 03:54:17,626 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 03:54:17,626 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 03:54:17,626 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 03:54:17,626 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5d71b500
2021-12-09 03:54:17,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@527a8665
2021-12-09 03:54:17,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 03:54:17,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 03:54:17,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 03:54:17,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 03:54:17,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 03:54:17,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 03:54:17,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@4a642e4b
2021-12-09 03:54:17,630 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@33d7765a
2021-12-09 03:54:17,630 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@7d3691e1
2021-12-09 03:54:17,630 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d3691e1
2021-12-09 03:54:17,631 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7558c24b
2021-12-09 03:54:17,631 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@b30a50d
2021-12-09 03:54:17,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b30a50d
2021-12-09 03:54:17,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@65eb3597
2021-12-09 03:54:17,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65eb3597
2021-12-09 03:54:17,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@374c40ba
2021-12-09 03:54:17,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f882465
2021-12-09 03:54:17,634 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@7f0f84d4
2021-12-09 03:54:17,635 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@5a4dda2
2021-12-09 03:54:17,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a4dda2
2021-12-09 03:54:17,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:54:17,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:54:17,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:54:17,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:54:17,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 03:54:17,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 03:54:17,637 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 03:54:17,637 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 03:54:17,654 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:54:17,876 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:54:17,888 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:54:17,927 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dbaa33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15d65fcf]
2021-12-09 03:54:18,030 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dbaa33] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3386ed8]
2021-12-09 03:54:18,232 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:54:18,235 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3386ed8] for TypeConfiguration
2021-12-09 03:54:18,236 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:54:18,432 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:54:18,433 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:54:18,434 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3386ed8] for TypeConfiguration
2021-12-09 03:54:18,434 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6fad5ace] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3386ed8]
2021-12-09 03:54:18,436 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:54:18,440 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:54:18,442 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:54:18,453 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:54:18,464 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 70 common frames omitted
2021-12-09 03:58:42,198 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 26344 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 03:58:42,200 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 03:58:42,200 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 03:58:42,642 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:58:42,642 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:58:42,674 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 29 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 03:58:42,816 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:58:42,817 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 03:58:42,825 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:58:42,826 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:58:42,827 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:58:42,831 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 03:58:42,832 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 03:58:42,838 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 03:58:42,838 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 03:58:42,864 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 21 ms. Found 6 JPA repository interfaces.
2021-12-09 03:58:43,278 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 03:58:43,284 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 03:58:43,284 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 03:58:43,284 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 03:58:43,364 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 03:58:43,365 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1135 ms
2021-12-09 03:58:43,515 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 03:58:43,571 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 03:58:43,655 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 03:58:43,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 03:58:43,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 03:58:43,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 03:58:43,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35e98af
2021-12-09 03:58:43,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@662be9f7
2021-12-09 03:58:43,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@5b5f9003
2021-12-09 03:58:43,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 03:58:43,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 03:58:43,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 03:58:43,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@632b305d
2021-12-09 03:58:43,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@632b305d
2021-12-09 03:58:43,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@632b305d
2021-12-09 03:58:43,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@195113de
2021-12-09 03:58:43,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@195113de
2021-12-09 03:58:43,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@195113de
2021-12-09 03:58:43,677 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 03:58:43,677 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 03:58:43,677 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 03:58:43,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@266e9dda
2021-12-09 03:58:43,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@266e9dda
2021-12-09 03:58:43,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@266e9dda
2021-12-09 03:58:43,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 03:58:43,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 03:58:43,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 03:58:43,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 03:58:43,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 03:58:43,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 03:58:43,680 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4844930a
2021-12-09 03:58:43,680 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4844930a
2021-12-09 03:58:43,680 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f95653f
2021-12-09 03:58:43,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f95653f
2021-12-09 03:58:43,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@38029686
2021-12-09 03:58:43,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@38029686
2021-12-09 03:58:43,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@423ed3b5
2021-12-09 03:58:43,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4001d8c1
2021-12-09 03:58:43,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@2fc49538
2021-12-09 03:58:43,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2fc49538
2021-12-09 03:58:43,683 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@1cd6b1bd
2021-12-09 03:58:43,683 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cd6b1bd
2021-12-09 03:58:43,683 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@5bda157e
2021-12-09 03:58:43,683 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5bda157e
2021-12-09 03:58:43,684 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e4162bc
2021-12-09 03:58:43,684 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e4162bc
2021-12-09 03:58:43,685 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@61b65d54
2021-12-09 03:58:43,685 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@61b65d54
2021-12-09 03:58:43,685 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3dbd7107
2021-12-09 03:58:43,685 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3dbd7107
2021-12-09 03:58:43,686 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5edc3e29
2021-12-09 03:58:43,686 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5edc3e29
2021-12-09 03:58:43,687 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b87760e
2021-12-09 03:58:43,687 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b87760e
2021-12-09 03:58:43,687 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c1503a3
2021-12-09 03:58:43,687 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c1503a3
2021-12-09 03:58:43,688 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@49671897
2021-12-09 03:58:43,689 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@49671897
2021-12-09 03:58:43,689 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@35bd8bc9
2021-12-09 03:58:43,689 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@35bd8bc9
2021-12-09 03:58:43,690 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 03:58:43,690 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 03:58:43,690 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 03:58:43,691 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28a6e171
2021-12-09 03:58:43,691 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 03:58:43,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 03:58:43,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 03:58:43,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19f02280
2021-12-09 03:58:43,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@450f0235
2021-12-09 03:58:43,693 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@217dc48e
2021-12-09 03:58:43,693 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@217dc48e
2021-12-09 03:58:43,693 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@632383b9
2021-12-09 03:58:43,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@632383b9
2021-12-09 03:58:43,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b35798
2021-12-09 03:58:43,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b35798
2021-12-09 03:58:43,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3e28d779
2021-12-09 03:58:43,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e28d779
2021-12-09 03:58:43,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13cc0b90
2021-12-09 03:58:43,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13cc0b90
2021-12-09 03:58:43,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49580ca8
2021-12-09 03:58:43,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@35145874
2021-12-09 03:58:43,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@35145874
2021-12-09 03:58:43,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@35145874
2021-12-09 03:58:43,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 03:58:43,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 03:58:43,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 03:58:43,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@4b957db0
2021-12-09 03:58:43,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@273fa9e
2021-12-09 03:58:43,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 03:58:43,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 03:58:43,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 03:58:43,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 03:58:43,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 03:58:43,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 03:58:43,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@58a765ce
2021-12-09 03:58:43,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@58aa1d72
2021-12-09 03:58:43,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@4a864d4d
2021-12-09 03:58:43,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a864d4d
2021-12-09 03:58:43,700 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c28e5b6
2021-12-09 03:58:43,700 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@5d1d9d73
2021-12-09 03:58:43,700 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5d1d9d73
2021-12-09 03:58:43,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@26e0d39c
2021-12-09 03:58:43,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26e0d39c
2021-12-09 03:58:43,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b379bc6
2021-12-09 03:58:43,702 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5a14e60d
2021-12-09 03:58:43,702 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@4966bab1
2021-12-09 03:58:43,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@7e5efcab
2021-12-09 03:58:43,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e5efcab
2021-12-09 03:58:43,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 03:58:43,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 03:58:43,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 03:58:43,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 03:58:43,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 03:58:43,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 03:58:43,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 03:58:43,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 03:58:43,727 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 03:58:44,009 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 03:58:44,021 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 03:58:44,070 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48cf8414] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27dbaa33]
2021-12-09 03:58:44,211 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48cf8414] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@598778cc]
2021-12-09 03:58:44,493 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 03:58:44,498 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@598778cc] for TypeConfiguration
2021-12-09 03:58:44,499 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:58:45,068 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 03:58:45,070 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 03:58:45,071 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@598778cc] for TypeConfiguration
2021-12-09 03:58:45,071 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2fccd98f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@598778cc]
2021-12-09 03:58:45,073 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 03:58:45,077 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 03:58:45,078 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 03:58:45,088 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 03:58:45,105 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 16 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 38 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 42 common frames omitted
2021-12-09 04:00:02,167 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 26476 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:00:02,169 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:00:02,169 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:00:02,481 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:00:02,482 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:00:02,507 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 22 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:00:02,621 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:00:02,622 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:00:02,629 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:00:02,630 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:00:02,631 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:00:02,635 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:00:02,635 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:00:02,639 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:00:02,640 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:00:02,656 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 6 JPA repository interfaces.
2021-12-09 04:00:02,970 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:00:02,974 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:00:02,975 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:00:02,975 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:00:03,048 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:00:03,048 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 852 ms
2021-12-09 04:00:03,135 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:00:03,156 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:00:03,218 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:00:03,233 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 04:00:03,234 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 04:00:03,234 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5fffb692
2021-12-09 04:00:03,235 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@126f8f24
2021-12-09 04:00:03,235 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@11c78080
2021-12-09 04:00:03,236 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6282b9f5
2021-12-09 04:00:03,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 04:00:03,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@67688110
2021-12-09 04:00:03,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67688110
2021-12-09 04:00:03,238 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 04:00:03,238 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 04:00:03,239 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a55594b
2021-12-09 04:00:03,240 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 04:00:03,240 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 04:00:03,240 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f15e689
2021-12-09 04:00:03,241 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 04:00:03,241 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 04:00:03,241 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@58feb6b0
2021-12-09 04:00:03,242 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 04:00:03,242 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 04:00:03,242 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14c99bf6
2021-12-09 04:00:03,243 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 04:00:03,243 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 04:00:03,243 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@445bce9a
2021-12-09 04:00:03,244 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 04:00:03,244 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 04:00:03,244 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ffd4c0d
2021-12-09 04:00:03,245 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 04:00:03,245 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f723cdb
2021-12-09 04:00:03,246 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 04:00:03,246 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2cfe272f
2021-12-09 04:00:03,246 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@380ce5a3
2021-12-09 04:00:03,246 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@380ce5a3
2021-12-09 04:00:03,247 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e24ce51
2021-12-09 04:00:03,247 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@74960e9d
2021-12-09 04:00:03,248 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@61037caf
2021-12-09 04:00:03,248 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@61037caf
2021-12-09 04:00:03,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 04:00:03,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ed49a7f
2021-12-09 04:00:03,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 04:00:03,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5e5ddfbc
2021-12-09 04:00:03,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 04:00:03,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@13213f26
2021-12-09 04:00:03,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 04:00:03,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@402f8592
2021-12-09 04:00:03,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 04:00:03,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6403a4a5
2021-12-09 04:00:03,253 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 04:00:03,253 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@559af296
2021-12-09 04:00:03,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 04:00:03,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@268c030f
2021-12-09 04:00:03,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 04:00:03,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@113f9078
2021-12-09 04:00:03,257 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@805e72e
2021-12-09 04:00:03,257 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@805e72e
2021-12-09 04:00:03,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@1472208d
2021-12-09 04:00:03,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1472208d
2021-12-09 04:00:03,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 04:00:03,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 04:00:03,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57bd6a8f
2021-12-09 04:00:03,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b195203
2021-12-09 04:00:03,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 04:00:03,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 04:00:03,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4f081b5d
2021-12-09 04:00:03,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f395ce1
2021-12-09 04:00:03,263 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f930e0
2021-12-09 04:00:03,263 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 04:00:03,263 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d2c345d
2021-12-09 04:00:03,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 04:00:03,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32507479
2021-12-09 04:00:03,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 04:00:03,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6a98f353
2021-12-09 04:00:03,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 04:00:03,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3830b06c
2021-12-09 04:00:03,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 04:00:03,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7c7e73c5
2021-12-09 04:00:03,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a3b10f4
2021-12-09 04:00:03,267 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 04:00:03,267 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 04:00:03,267 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@764fffa0
2021-12-09 04:00:03,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 04:00:03,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 04:00:03,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@280fafd
2021-12-09 04:00:03,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e1e837d
2021-12-09 04:00:03,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@626b639e
2021-12-09 04:00:03,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 04:00:03,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 04:00:03,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3757e8e2
2021-12-09 04:00:03,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 04:00:03,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 04:00:03,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b14c61
2021-12-09 04:00:03,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@361cd35c
2021-12-09 04:00:03,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3b4086c1
2021-12-09 04:00:03,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 04:00:03,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@40d848f9
2021-12-09 04:00:03,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@44bc2449
2021-12-09 04:00:03,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 04:00:03,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@501957bf
2021-12-09 04:00:03,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@102c18e
2021-12-09 04:00:03,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@102c18e
2021-12-09 04:00:03,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2bebd114
2021-12-09 04:00:03,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6dcab9d9
2021-12-09 04:00:03,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@39832280
2021-12-09 04:00:03,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 04:00:03,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76c86567
2021-12-09 04:00:03,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 04:00:03,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 04:00:03,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:00:03,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:00:03,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:00:03,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:00:03,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:00:03,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:00:03,299 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:00:03,542 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:00:03,555 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:00:03,599 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48cf8414]
2021-12-09 04:00:03,737 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1377b1a0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 04:00:04,012 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:00:04,016 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 04:00:04,018 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:00:04,555 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 04:00:04,556 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:00:04,556 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16e07bae] for TypeConfiguration
2021-12-09 04:00:04,557 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@149238fe] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16e07bae]
2021-12-09 04:00:04,559 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:00:04,563 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:00:04,564 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 04:00:04,575 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 04:00:04,592 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 16 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 38 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 42 common frames omitted
2021-12-09 04:04:09,816 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 26736 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:04:09,818 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:04:09,818 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:04:10,210 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:04:10,210 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:04:10,239 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 26 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:04:10,240 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:04:10,241 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:04:10,252 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 8 ms. Found 2 JPA repository interfaces.
2021-12-09 04:04:10,393 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:04:10,394 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:04:10,401 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:04:10,402 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:04:10,403 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:04:10,406 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:04:10,406 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:04:10,821 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:04:10,829 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:04:10,829 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:04:10,830 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:04:10,917 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:04:10,917 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1073 ms
2021-12-09 04:04:11,081 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:04:11,151 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:04:11,240 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:04:11,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5a1dddba
2021-12-09 04:04:11,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5a1dddba
2021-12-09 04:04:11,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5a1dddba
2021-12-09 04:04:11,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a9ec80e
2021-12-09 04:04:11,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4cffd3fd
2021-12-09 04:04:11,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6e1ae763
2021-12-09 04:04:11,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@3086f480
2021-12-09 04:04:11,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@3086f480
2021-12-09 04:04:11,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3086f480
2021-12-09 04:04:11,261 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@4962b41e
2021-12-09 04:04:11,261 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@4962b41e
2021-12-09 04:04:11,261 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4962b41e
2021-12-09 04:04:11,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@7f5fcfe9
2021-12-09 04:04:11,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@7f5fcfe9
2021-12-09 04:04:11,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7f5fcfe9
2021-12-09 04:04:11,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@475f5672
2021-12-09 04:04:11,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@475f5672
2021-12-09 04:04:11,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@475f5672
2021-12-09 04:04:11,263 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@44598ef7
2021-12-09 04:04:11,263 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@44598ef7
2021-12-09 04:04:11,263 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@44598ef7
2021-12-09 04:04:11,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@3ebc955b
2021-12-09 04:04:11,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@3ebc955b
2021-12-09 04:04:11,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3ebc955b
2021-12-09 04:04:11,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@3830f918
2021-12-09 04:04:11,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@3830f918
2021-12-09 04:04:11,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3830f918
2021-12-09 04:04:11,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38883a31
2021-12-09 04:04:11,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38883a31
2021-12-09 04:04:11,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5e1a5f
2021-12-09 04:04:11,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5e1a5f
2021-12-09 04:04:11,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@9fe720a
2021-12-09 04:04:11,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@9fe720a
2021-12-09 04:04:11,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8c12524
2021-12-09 04:04:11,267 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@101bdd1c
2021-12-09 04:04:11,267 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@3dc68586
2021-12-09 04:04:11,267 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3dc68586
2021-12-09 04:04:11,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@31da0434
2021-12-09 04:04:11,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@31da0434
2021-12-09 04:04:11,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@fb5aeed
2021-12-09 04:04:11,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@fb5aeed
2021-12-09 04:04:11,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@670342a2
2021-12-09 04:04:11,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@670342a2
2021-12-09 04:04:11,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@443cdaa4
2021-12-09 04:04:11,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@443cdaa4
2021-12-09 04:04:11,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@67e0fd6d
2021-12-09 04:04:11,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@67e0fd6d
2021-12-09 04:04:11,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c319d52
2021-12-09 04:04:11,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c319d52
2021-12-09 04:04:11,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@b2c4a8b
2021-12-09 04:04:11,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@b2c4a8b
2021-12-09 04:04:11,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4a6c0f38
2021-12-09 04:04:11,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4a6c0f38
2021-12-09 04:04:11,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@4b87760e
2021-12-09 04:04:11,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4b87760e
2021-12-09 04:04:11,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@2a0ea492
2021-12-09 04:04:11,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a0ea492
2021-12-09 04:04:11,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@49671897
2021-12-09 04:04:11,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@49671897
2021-12-09 04:04:11,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@49671897
2021-12-09 04:04:11,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@36f6e521
2021-12-09 04:04:11,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@191c6e13
2021-12-09 04:04:11,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@191c6e13
2021-12-09 04:04:11,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@191c6e13
2021-12-09 04:04:11,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@517704
2021-12-09 04:04:11,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@2f9b21d6
2021-12-09 04:04:11,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@740a0d5e
2021-12-09 04:04:11,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@740a0d5e
2021-12-09 04:04:11,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@1e30db85
2021-12-09 04:04:11,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e30db85
2021-12-09 04:04:11,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78c262ba
2021-12-09 04:04:11,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78c262ba
2021-12-09 04:04:11,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@5db948c9
2021-12-09 04:04:11,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5db948c9
2021-12-09 04:04:11,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4ae2e781
2021-12-09 04:04:11,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4ae2e781
2021-12-09 04:04:11,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@209f3887
2021-12-09 04:04:11,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@15214920
2021-12-09 04:04:11,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@15214920
2021-12-09 04:04:11,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@15214920
2021-12-09 04:04:11,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@58687fb7
2021-12-09 04:04:11,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@58687fb7
2021-12-09 04:04:11,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@58687fb7
2021-12-09 04:04:11,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@29962b2f
2021-12-09 04:04:11,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@43a4a9e5
2021-12-09 04:04:11,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6af609ea
2021-12-09 04:04:11,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6af609ea
2021-12-09 04:04:11,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6af609ea
2021-12-09 04:04:11,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5c313224
2021-12-09 04:04:11,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5c313224
2021-12-09 04:04:11,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5c313224
2021-12-09 04:04:11,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@8840c98
2021-12-09 04:04:11,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@7ab2a07e
2021-12-09 04:04:11,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@47044f7d
2021-12-09 04:04:11,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47044f7d
2021-12-09 04:04:11,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3b435211
2021-12-09 04:04:11,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@5eed6dfb
2021-12-09 04:04:11,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5eed6dfb
2021-12-09 04:04:11,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3c28e5b6
2021-12-09 04:04:11,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c28e5b6
2021-12-09 04:04:11,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@646cd766
2021-12-09 04:04:11,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2faa55bb
2021-12-09 04:04:11,286 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@26e0d39c
2021-12-09 04:04:11,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@5e85c21b
2021-12-09 04:04:11,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5e85c21b
2021-12-09 04:04:11,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4966bab1
2021-12-09 04:04:11,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f0f84d4
2021-12-09 04:04:11,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6df4af5
2021-12-09 04:04:11,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@26e8ff8c
2021-12-09 04:04:11,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5aa76ad2
2021-12-09 04:04:11,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@590d6c76
2021-12-09 04:04:11,289 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@25791d40
2021-12-09 04:04:11,289 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@448c92fc
2021-12-09 04:04:11,317 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:04:11,605 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:04:11,620 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:04:11,666 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dde5f38] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79ad1774]
2021-12-09 04:04:11,795 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3dde5f38] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@581918f6]
2021-12-09 04:04:12,032 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:04:12,036 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@581918f6] for TypeConfiguration
2021-12-09 04:04:12,037 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:04:12,043 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'activeMemberController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/discord/controller/ActiveMemberController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'activeMemberServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/discord/service/ActiveMemberServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tech.goodquestion.discord.repository.ActiveMemberRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2021-12-09 04:04:12,043 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:04:12,043 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@581918f6] for TypeConfiguration
2021-12-09 04:04:12,043 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3a116ca6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@581918f6]
2021-12-09 04:04:12,046 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:04:12,049 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:04:12,050 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 04:04:12,059 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 04:04:12,079 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter             - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in tech.goodquestion.discord.service.ActiveMemberServiceImpl required a bean of type 'tech.goodquestion.discord.repository.ActiveMemberRepository' that could not be found.


Action:

Consider defining a bean of type 'tech.goodquestion.discord.repository.ActiveMemberRepository' in your configuration.

2021-12-09 04:04:51,787 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 26757 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:04:51,788 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:04:51,788 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:04:52,095 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:04:52,096 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:04:52,119 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 21 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:04:52,119 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:04:52,119 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:04:52,131 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 9 ms. Found 2 JPA repository interfaces.
2021-12-09 04:04:52,250 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:04:52,250 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:04:52,257 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:04:52,258 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:04:52,259 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:04:52,262 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:04:52,262 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 11 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:04:52,584 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:04:52,589 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:04:52,589 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:04:52,589 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:04:52,671 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:04:52,671 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 859 ms
2021-12-09 04:04:52,759 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:04:52,779 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:04:52,848 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:04:52,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7fd4e815
2021-12-09 04:04:52,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7fd4e815
2021-12-09 04:04:52,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7fd4e815
2021-12-09 04:04:52,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@14b31e37
2021-12-09 04:04:52,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62d40e31
2021-12-09 04:04:52,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@79d7035
2021-12-09 04:04:52,867 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@11c78080
2021-12-09 04:04:52,867 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@11c78080
2021-12-09 04:04:52,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11c78080
2021-12-09 04:04:52,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@2f9dda71
2021-12-09 04:04:52,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@2f9dda71
2021-12-09 04:04:52,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2f9dda71
2021-12-09 04:04:52,869 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@67688110
2021-12-09 04:04:52,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@67688110
2021-12-09 04:04:52,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67688110
2021-12-09 04:04:52,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@6a55594b
2021-12-09 04:04:52,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@6a55594b
2021-12-09 04:04:52,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6a55594b
2021-12-09 04:04:52,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@1f15e689
2021-12-09 04:04:52,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@1f15e689
2021-12-09 04:04:52,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f15e689
2021-12-09 04:04:52,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@58feb6b0
2021-12-09 04:04:52,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@58feb6b0
2021-12-09 04:04:52,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@58feb6b0
2021-12-09 04:04:52,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@14c99bf6
2021-12-09 04:04:52,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@14c99bf6
2021-12-09 04:04:52,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14c99bf6
2021-12-09 04:04:52,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@445bce9a
2021-12-09 04:04:52,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@445bce9a
2021-12-09 04:04:52,876 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ffd4c0d
2021-12-09 04:04:52,876 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ffd4c0d
2021-12-09 04:04:52,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@f723cdb
2021-12-09 04:04:52,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@f723cdb
2021-12-09 04:04:52,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e91af20
2021-12-09 04:04:52,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2f95653f
2021-12-09 04:04:52,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@38029686
2021-12-09 04:04:52,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@38029686
2021-12-09 04:04:52,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@74960e9d
2021-12-09 04:04:52,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@74960e9d
2021-12-09 04:04:52,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@61037caf
2021-12-09 04:04:52,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@61037caf
2021-12-09 04:04:52,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ed49a7f
2021-12-09 04:04:52,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7ed49a7f
2021-12-09 04:04:52,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5e5ddfbc
2021-12-09 04:04:52,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5e5ddfbc
2021-12-09 04:04:52,883 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13213f26
2021-12-09 04:04:52,883 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13213f26
2021-12-09 04:04:52,883 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@402f8592
2021-12-09 04:04:52,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@402f8592
2021-12-09 04:04:52,885 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6403a4a5
2021-12-09 04:04:52,885 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6403a4a5
2021-12-09 04:04:52,886 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@559af296
2021-12-09 04:04:52,886 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@559af296
2021-12-09 04:04:52,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@2df65a56
2021-12-09 04:04:52,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2df65a56
2021-12-09 04:04:52,889 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@b5ac0c1
2021-12-09 04:04:52,889 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b5ac0c1
2021-12-09 04:04:52,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@2afdf6b7
2021-12-09 04:04:52,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2afdf6b7
2021-12-09 04:04:52,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2afdf6b7
2021-12-09 04:04:52,892 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1472208d
2021-12-09 04:04:52,893 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@57bd6a8f
2021-12-09 04:04:52,893 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@57bd6a8f
2021-12-09 04:04:52,893 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@57bd6a8f
2021-12-09 04:04:52,893 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31a136a6
2021-12-09 04:04:52,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4f081b5d
2021-12-09 04:04:52,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@5f395ce1
2021-12-09 04:04:52,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5f395ce1
2021-12-09 04:04:52,895 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@6f930e0
2021-12-09 04:04:52,895 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f930e0
2021-12-09 04:04:52,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d2c345d
2021-12-09 04:04:52,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d2c345d
2021-12-09 04:04:52,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@32507479
2021-12-09 04:04:52,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32507479
2021-12-09 04:04:52,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6a98f353
2021-12-09 04:04:52,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6a98f353
2021-12-09 04:04:52,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a2d867d
2021-12-09 04:04:52,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@7c7e73c5
2021-12-09 04:04:52,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@7c7e73c5
2021-12-09 04:04:52,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@7c7e73c5
2021-12-09 04:04:52,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@42fc4ac4
2021-12-09 04:04:52,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@42fc4ac4
2021-12-09 04:04:52,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@42fc4ac4
2021-12-09 04:04:52,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@764fffa0
2021-12-09 04:04:52,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@18e4674d
2021-12-09 04:04:52,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@4b03cbad
2021-12-09 04:04:52,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@4b03cbad
2021-12-09 04:04:52,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@4b03cbad
2021-12-09 04:04:52,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@626b639e
2021-12-09 04:04:52,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@626b639e
2021-12-09 04:04:52,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@626b639e
2021-12-09 04:04:52,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@437c4b25
2021-12-09 04:04:52,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@1653b84e
2021-12-09 04:04:52,902 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@361cd35c
2021-12-09 04:04:52,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@361cd35c
2021-12-09 04:04:52,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3b4086c1
2021-12-09 04:04:52,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@40d848f9
2021-12-09 04:04:52,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@40d848f9
2021-12-09 04:04:52,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@57151b3a
2021-12-09 04:04:52,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@57151b3a
2021-12-09 04:04:52,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@501957bf
2021-12-09 04:04:52,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6c742b84
2021-12-09 04:04:52,906 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@374c40ba
2021-12-09 04:04:52,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@7f0f84d4
2021-12-09 04:04:52,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f0f84d4
2021-12-09 04:04:52,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@590d6c76
2021-12-09 04:04:52,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@25791d40
2021-12-09 04:04:52,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@448c92fc
2021-12-09 04:04:52,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@251c8145
2021-12-09 04:04:52,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@17c0274c
2021-12-09 04:04:52,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7abeabe9
2021-12-09 04:04:52,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a05dd30
2021-12-09 04:04:52,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b52699c
2021-12-09 04:04:52,925 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:04:53,193 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:04:53,202 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:04:53,243 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63187d63] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1ccdc7aa]
2021-12-09 04:04:53,361 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63187d63] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5fc7255c]
2021-12-09 04:04:53,605 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:04:53,610 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5fc7255c] for TypeConfiguration
2021-12-09 04:04:53,611 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:04:53,618 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'activeMemberController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/discord/controller/ActiveMemberController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'activeMemberServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/discord/service/ActiveMemberServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'tech.goodquestion.discord.repository.ActiveMemberRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2021-12-09 04:04:53,618 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:04:53,618 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5fc7255c] for TypeConfiguration
2021-12-09 04:04:53,618 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@64540344] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5fc7255c]
2021-12-09 04:04:53,621 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:04:53,624 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:04:53,625 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 04:04:53,635 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 04:04:53,654 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter             - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in tech.goodquestion.discord.service.ActiveMemberServiceImpl required a bean of type 'tech.goodquestion.discord.repository.ActiveMemberRepository' that could not be found.


Action:

Consider defining a bean of type 'tech.goodquestion.discord.repository.ActiveMemberRepository' in your configuration.

2021-12-09 04:05:05,307 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 26764 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:05:05,308 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:05:05,308 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:05:05,661 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:05:05,662 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:05:05,691 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 26 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:05:05,820 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:05:05,820 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:05:05,828 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:05:05,829 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:05:05,830 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:05:05,834 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:05:05,834 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:05:05,840 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:05:05,840 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:05:05,865 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 18 ms. Found 6 JPA repository interfaces.
2021-12-09 04:05:06,252 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:05:06,257 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:05:06,258 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:05:06,258 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:05:06,343 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:05:06,343 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1010 ms
2021-12-09 04:05:06,454 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:05:06,497 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:05:06,602 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:05:06,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 04:05:06,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 04:05:06,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 04:05:06,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@781aff8b
2021-12-09 04:05:06,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4962b41e
2021-12-09 04:05:06,626 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c11d32
2021-12-09 04:05:06,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 04:05:06,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 04:05:06,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 04:05:06,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 04:05:06,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 04:05:06,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 04:05:06,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 04:05:06,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 04:05:06,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 04:05:06,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@3830f918
2021-12-09 04:05:06,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@3830f918
2021-12-09 04:05:06,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3830f918
2021-12-09 04:05:06,630 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@38883a31
2021-12-09 04:05:06,630 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@38883a31
2021-12-09 04:05:06,630 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38883a31
2021-12-09 04:05:06,631 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 04:05:06,631 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 04:05:06,631 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 04:05:06,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 04:05:06,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 04:05:06,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 04:05:06,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11f23203
2021-12-09 04:05:06,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11f23203
2021-12-09 04:05:06,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4052b19f
2021-12-09 04:05:06,634 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4052b19f
2021-12-09 04:05:06,634 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@7d9c45ee
2021-12-09 04:05:06,634 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@7d9c45ee
2021-12-09 04:05:06,635 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5d124d29
2021-12-09 04:05:06,635 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@fb5aeed
2021-12-09 04:05:06,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@670342a2
2021-12-09 04:05:06,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@670342a2
2021-12-09 04:05:06,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@443cdaa4
2021-12-09 04:05:06,636 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@443cdaa4
2021-12-09 04:05:06,637 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@67e0fd6d
2021-12-09 04:05:06,637 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@67e0fd6d
2021-12-09 04:05:06,638 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c319d52
2021-12-09 04:05:06,638 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c319d52
2021-12-09 04:05:06,639 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@b2c4a8b
2021-12-09 04:05:06,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@b2c4a8b
2021-12-09 04:05:06,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a6c0f38
2021-12-09 04:05:06,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a6c0f38
2021-12-09 04:05:06,641 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18709cb2
2021-12-09 04:05:06,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18709cb2
2021-12-09 04:05:06,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@be164d8
2021-12-09 04:05:06,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@be164d8
2021-12-09 04:05:06,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@586495f1
2021-12-09 04:05:06,643 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@586495f1
2021-12-09 04:05:06,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@168142da
2021-12-09 04:05:06,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@168142da
2021-12-09 04:05:06,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@6de004f1
2021-12-09 04:05:06,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6de004f1
2021-12-09 04:05:06,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@517704
2021-12-09 04:05:06,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@517704
2021-12-09 04:05:06,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@517704
2021-12-09 04:05:06,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23444a36
2021-12-09 04:05:06,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 04:05:06,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 04:05:06,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 04:05:06,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e30db85
2021-12-09 04:05:06,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@78c262ba
2021-12-09 04:05:06,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@5db948c9
2021-12-09 04:05:06,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5db948c9
2021-12-09 04:05:06,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@4ae2e781
2021-12-09 04:05:06,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ae2e781
2021-12-09 04:05:06,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e00bfe2
2021-12-09 04:05:06,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e00bfe2
2021-12-09 04:05:06,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@15214920
2021-12-09 04:05:06,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15214920
2021-12-09 04:05:06,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58687fb7
2021-12-09 04:05:06,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58687fb7
2021-12-09 04:05:06,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@525647f3
2021-12-09 04:05:06,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 04:05:06,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 04:05:06,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 04:05:06,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 04:05:06,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 04:05:06,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 04:05:06,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5d71b500
2021-12-09 04:05:06,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@527a8665
2021-12-09 04:05:06,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 04:05:06,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 04:05:06,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 04:05:06,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 04:05:06,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 04:05:06,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 04:05:06,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@4a642e4b
2021-12-09 04:05:06,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@33d7765a
2021-12-09 04:05:06,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@7d3691e1
2021-12-09 04:05:06,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d3691e1
2021-12-09 04:05:06,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7558c24b
2021-12-09 04:05:06,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@b30a50d
2021-12-09 04:05:06,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b30a50d
2021-12-09 04:05:06,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@65eb3597
2021-12-09 04:05:06,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65eb3597
2021-12-09 04:05:06,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@374c40ba
2021-12-09 04:05:06,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f882465
2021-12-09 04:05:06,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@7f0f84d4
2021-12-09 04:05:06,664 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@5a4dda2
2021-12-09 04:05:06,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a4dda2
2021-12-09 04:05:06,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:05:06,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:05:06,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:05:06,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:05:06,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:05:06,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:05:06,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 04:05:06,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 04:05:06,696 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:05:06,953 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:05:06,965 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:05:07,007 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dbaa33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15d65fcf]
2021-12-09 04:05:07,102 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dbaa33] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3386ed8]
2021-12-09 04:05:07,314 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:05:07,317 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3386ed8] for TypeConfiguration
2021-12-09 04:05:07,318 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:05:07,886 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 04:05:07,887 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:05:07,888 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3386ed8] for TypeConfiguration
2021-12-09 04:05:07,888 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@309e7215] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3386ed8]
2021-12-09 04:05:07,890 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:05:07,893 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:05:07,894 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 04:05:07,904 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 04:05:07,921 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 16 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 38 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 42 common frames omitted
2021-12-09 04:07:52,965 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 26956 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:07:52,967 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:07:52,967 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:07:53,391 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:07:53,392 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:07:53,424 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 29 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:07:53,557 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:07:53,567 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:07:53,578 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:07:53,579 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:07:53,580 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:07:53,585 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:07:53,585 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 17 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:07:53,591 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:07:53,591 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:07:53,619 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 24 ms. Found 6 JPA repository interfaces.
2021-12-09 04:07:54,034 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:07:54,041 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:07:54,042 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:07:54,042 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:07:54,135 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:07:54,135 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1129 ms
2021-12-09 04:07:54,288 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:07:54,330 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:07:54,433 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:07:54,453 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 04:07:54,453 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 04:07:54,453 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 04:07:54,453 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@781aff8b
2021-12-09 04:07:54,454 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4962b41e
2021-12-09 04:07:54,454 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c11d32
2021-12-09 04:07:54,455 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 04:07:54,455 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 04:07:54,455 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 04:07:54,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 04:07:54,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 04:07:54,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 04:07:54,457 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 04:07:54,457 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 04:07:54,457 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 04:07:54,458 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@3830f918
2021-12-09 04:07:54,458 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@3830f918
2021-12-09 04:07:54,458 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3830f918
2021-12-09 04:07:54,459 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@38883a31
2021-12-09 04:07:54,459 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@38883a31
2021-12-09 04:07:54,459 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38883a31
2021-12-09 04:07:54,460 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 04:07:54,460 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 04:07:54,460 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 04:07:54,461 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 04:07:54,461 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 04:07:54,461 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 04:07:54,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11f23203
2021-12-09 04:07:54,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11f23203
2021-12-09 04:07:54,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4052b19f
2021-12-09 04:07:54,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4052b19f
2021-12-09 04:07:54,463 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@7d9c45ee
2021-12-09 04:07:54,463 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@7d9c45ee
2021-12-09 04:07:54,463 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5d124d29
2021-12-09 04:07:54,464 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@fb5aeed
2021-12-09 04:07:54,464 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@670342a2
2021-12-09 04:07:54,464 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@670342a2
2021-12-09 04:07:54,465 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@443cdaa4
2021-12-09 04:07:54,465 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@443cdaa4
2021-12-09 04:07:54,465 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@67e0fd6d
2021-12-09 04:07:54,466 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@67e0fd6d
2021-12-09 04:07:54,466 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c319d52
2021-12-09 04:07:54,466 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c319d52
2021-12-09 04:07:54,467 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@b2c4a8b
2021-12-09 04:07:54,467 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@b2c4a8b
2021-12-09 04:07:54,468 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a6c0f38
2021-12-09 04:07:54,468 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a6c0f38
2021-12-09 04:07:54,468 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18709cb2
2021-12-09 04:07:54,468 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18709cb2
2021-12-09 04:07:54,469 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@be164d8
2021-12-09 04:07:54,469 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@be164d8
2021-12-09 04:07:54,470 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@586495f1
2021-12-09 04:07:54,470 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@586495f1
2021-12-09 04:07:54,471 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@168142da
2021-12-09 04:07:54,471 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@168142da
2021-12-09 04:07:54,472 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@6de004f1
2021-12-09 04:07:54,472 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6de004f1
2021-12-09 04:07:54,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@517704
2021-12-09 04:07:54,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@517704
2021-12-09 04:07:54,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@517704
2021-12-09 04:07:54,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23444a36
2021-12-09 04:07:54,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 04:07:54,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 04:07:54,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 04:07:54,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e30db85
2021-12-09 04:07:54,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@78c262ba
2021-12-09 04:07:54,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@5db948c9
2021-12-09 04:07:54,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5db948c9
2021-12-09 04:07:54,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@4ae2e781
2021-12-09 04:07:54,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ae2e781
2021-12-09 04:07:54,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e00bfe2
2021-12-09 04:07:54,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e00bfe2
2021-12-09 04:07:54,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@15214920
2021-12-09 04:07:54,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15214920
2021-12-09 04:07:54,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58687fb7
2021-12-09 04:07:54,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58687fb7
2021-12-09 04:07:54,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@525647f3
2021-12-09 04:07:54,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 04:07:54,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 04:07:54,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 04:07:54,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 04:07:54,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 04:07:54,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 04:07:54,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5d71b500
2021-12-09 04:07:54,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@527a8665
2021-12-09 04:07:54,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 04:07:54,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 04:07:54,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 04:07:54,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 04:07:54,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 04:07:54,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 04:07:54,482 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@4a642e4b
2021-12-09 04:07:54,482 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@33d7765a
2021-12-09 04:07:54,483 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@7d3691e1
2021-12-09 04:07:54,483 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d3691e1
2021-12-09 04:07:54,484 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7558c24b
2021-12-09 04:07:54,484 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@b30a50d
2021-12-09 04:07:54,484 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b30a50d
2021-12-09 04:07:54,485 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@65eb3597
2021-12-09 04:07:54,485 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65eb3597
2021-12-09 04:07:54,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@374c40ba
2021-12-09 04:07:54,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f882465
2021-12-09 04:07:54,487 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@7f0f84d4
2021-12-09 04:07:54,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@5a4dda2
2021-12-09 04:07:54,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a4dda2
2021-12-09 04:07:54,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:07:54,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:07:54,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:07:54,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:07:54,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:07:54,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:07:54,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 04:07:54,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 04:07:54,511 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:07:54,758 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:07:54,767 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:07:54,804 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dbaa33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15d65fcf]
2021-12-09 04:07:54,922 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dbaa33] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3386ed8]
2021-12-09 04:07:55,181 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:07:55,186 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3386ed8] for TypeConfiguration
2021-12-09 04:07:55,187 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:07:55,488 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'controller' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/elasticsearch/Controller.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 04:07:55,489 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:07:55,489 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3386ed8] for TypeConfiguration
2021-12-09 04:07:55,489 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5cdc8499] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3386ed8]
2021-12-09 04:07:55,491 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:07:55,495 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:07:55,496 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 04:07:55,505 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 04:07:55,524 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'controller' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/elasticsearch/Controller.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 52 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 56 common frames omitted
2021-12-09 04:10:01,362 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 27176 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:10:01,364 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:10:01,364 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:10:01,768 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:10:01,769 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:10:01,798 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 26 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:10:01,931 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:10:01,932 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:10:01,940 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:10:01,941 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:10:01,942 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:10:01,946 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:10:01,946 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:10:01,953 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:10:01,953 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:10:01,974 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 17 ms. Found 6 JPA repository interfaces.
2021-12-09 04:10:02,406 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:10:02,414 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:10:02,414 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:10:02,414 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:10:02,497 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:10:02,497 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1105 ms
2021-12-09 04:10:02,644 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:10:02,728 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:10:02,814 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:10:02,830 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 04:10:02,831 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 04:10:02,831 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 04:10:02,831 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35e98af
2021-12-09 04:10:02,831 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@662be9f7
2021-12-09 04:10:02,832 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@5b5f9003
2021-12-09 04:10:02,832 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 04:10:02,833 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 04:10:02,833 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 04:10:02,834 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@632b305d
2021-12-09 04:10:02,834 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@632b305d
2021-12-09 04:10:02,834 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@632b305d
2021-12-09 04:10:02,835 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@195113de
2021-12-09 04:10:02,835 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@195113de
2021-12-09 04:10:02,835 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@195113de
2021-12-09 04:10:02,836 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 04:10:02,836 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 04:10:02,836 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 04:10:02,837 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@266e9dda
2021-12-09 04:10:02,837 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@266e9dda
2021-12-09 04:10:02,837 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@266e9dda
2021-12-09 04:10:02,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 04:10:02,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 04:10:02,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 04:10:02,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 04:10:02,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 04:10:02,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 04:10:02,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4844930a
2021-12-09 04:10:02,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4844930a
2021-12-09 04:10:02,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f95653f
2021-12-09 04:10:02,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f95653f
2021-12-09 04:10:02,840 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@38029686
2021-12-09 04:10:02,840 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@38029686
2021-12-09 04:10:02,840 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@423ed3b5
2021-12-09 04:10:02,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4001d8c1
2021-12-09 04:10:02,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@2fc49538
2021-12-09 04:10:02,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2fc49538
2021-12-09 04:10:02,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@1cd6b1bd
2021-12-09 04:10:02,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cd6b1bd
2021-12-09 04:10:02,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@5bda157e
2021-12-09 04:10:02,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5bda157e
2021-12-09 04:10:02,843 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e4162bc
2021-12-09 04:10:02,843 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e4162bc
2021-12-09 04:10:02,843 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@61b65d54
2021-12-09 04:10:02,843 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@61b65d54
2021-12-09 04:10:02,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3dbd7107
2021-12-09 04:10:02,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3dbd7107
2021-12-09 04:10:02,845 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5edc3e29
2021-12-09 04:10:02,845 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5edc3e29
2021-12-09 04:10:02,845 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b87760e
2021-12-09 04:10:02,845 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b87760e
2021-12-09 04:10:02,846 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c1503a3
2021-12-09 04:10:02,846 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c1503a3
2021-12-09 04:10:02,847 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@49671897
2021-12-09 04:10:02,847 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@49671897
2021-12-09 04:10:02,848 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@35bd8bc9
2021-12-09 04:10:02,848 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@35bd8bc9
2021-12-09 04:10:02,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 04:10:02,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 04:10:02,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 04:10:02,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28a6e171
2021-12-09 04:10:02,850 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 04:10:02,850 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 04:10:02,850 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 04:10:02,850 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19f02280
2021-12-09 04:10:02,851 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@450f0235
2021-12-09 04:10:02,851 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@217dc48e
2021-12-09 04:10:02,851 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@217dc48e
2021-12-09 04:10:02,852 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@632383b9
2021-12-09 04:10:02,852 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@632383b9
2021-12-09 04:10:02,852 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b35798
2021-12-09 04:10:02,853 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b35798
2021-12-09 04:10:02,853 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3e28d779
2021-12-09 04:10:02,853 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e28d779
2021-12-09 04:10:02,854 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13cc0b90
2021-12-09 04:10:02,854 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13cc0b90
2021-12-09 04:10:02,854 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49580ca8
2021-12-09 04:10:02,855 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@35145874
2021-12-09 04:10:02,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@35145874
2021-12-09 04:10:02,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@35145874
2021-12-09 04:10:02,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 04:10:02,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 04:10:02,857 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 04:10:02,858 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@4b957db0
2021-12-09 04:10:02,858 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@273fa9e
2021-12-09 04:10:02,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 04:10:02,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 04:10:02,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 04:10:02,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 04:10:02,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 04:10:02,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 04:10:02,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@58a765ce
2021-12-09 04:10:02,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@58aa1d72
2021-12-09 04:10:02,862 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@4a864d4d
2021-12-09 04:10:02,862 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a864d4d
2021-12-09 04:10:02,863 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c28e5b6
2021-12-09 04:10:02,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@5d1d9d73
2021-12-09 04:10:02,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5d1d9d73
2021-12-09 04:10:02,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@26e0d39c
2021-12-09 04:10:02,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26e0d39c
2021-12-09 04:10:02,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b379bc6
2021-12-09 04:10:02,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5a14e60d
2021-12-09 04:10:02,867 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@4966bab1
2021-12-09 04:10:02,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@7e5efcab
2021-12-09 04:10:02,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e5efcab
2021-12-09 04:10:02,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 04:10:02,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:10:02,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:10:02,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:10:02,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:10:02,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:10:02,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:10:02,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 04:10:02,898 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:10:03,182 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:10:03,197 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:10:03,246 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48cf8414] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27dbaa33]
2021-12-09 04:10:03,378 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48cf8414] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@598778cc]
2021-12-09 04:10:03,628 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:10:03,632 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@598778cc] for TypeConfiguration
2021-12-09 04:10:03,634 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:10:03,939 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'controller' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/elasticsearch/Controller.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 04:10:03,940 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:10:03,941 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@598778cc] for TypeConfiguration
2021-12-09 04:10:03,941 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6f4029e9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@598778cc]
2021-12-09 04:10:03,942 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:10:03,946 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:10:03,947 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 04:10:03,956 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 04:10:03,971 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'controller' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/elasticsearch/Controller.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 52 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 56 common frames omitted
2021-12-09 04:15:02,803 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 27658 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:15:02,804 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:15:02,804 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:15:03,237 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:15:03,237 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:15:03,270 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 29 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:15:03,405 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:15:03,406 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:15:03,413 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:15:03,414 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:15:03,415 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:15:03,419 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:15:03,419 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:15:03,428 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:15:03,428 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:15:03,451 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 19 ms. Found 6 JPA repository interfaces.
2021-12-09 04:15:03,861 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:15:03,868 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:15:03,869 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:15:03,869 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:15:03,946 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:15:03,946 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1111 ms
2021-12-09 04:15:04,103 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:15:04,162 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:15:04,249 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:15:04,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 04:15:04,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 04:15:04,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 04:15:04,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7fbf26fc
2021-12-09 04:15:04,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4fecf308
2021-12-09 04:15:04,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f9dda71
2021-12-09 04:15:04,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 04:15:04,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 04:15:04,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 04:15:04,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 04:15:04,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 04:15:04,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 04:15:04,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 04:15:04,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 04:15:04,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 04:15:04,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 04:15:04,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 04:15:04,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 04:15:04,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 04:15:04,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 04:15:04,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 04:15:04,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 04:15:04,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 04:15:04,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 04:15:04,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 04:15:04,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 04:15:04,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 04:15:04,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@101bdd1c
2021-12-09 04:15:04,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@101bdd1c
2021-12-09 04:15:04,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3dc68586
2021-12-09 04:15:04,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3dc68586
2021-12-09 04:15:04,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@31da0434
2021-12-09 04:15:04,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@31da0434
2021-12-09 04:15:04,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c88191b
2021-12-09 04:15:04,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73893ec1
2021-12-09 04:15:04,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@d5e575c
2021-12-09 04:15:04,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@d5e575c
2021-12-09 04:15:04,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@3b41e1bf
2021-12-09 04:15:04,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3b41e1bf
2021-12-09 04:15:04,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@21390938
2021-12-09 04:15:04,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@21390938
2021-12-09 04:15:04,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@72fbf94d
2021-12-09 04:15:04,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@72fbf94d
2021-12-09 04:15:04,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f2c57fe
2021-12-09 04:15:04,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f2c57fe
2021-12-09 04:15:04,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f8a02cf
2021-12-09 04:15:04,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f8a02cf
2021-12-09 04:15:04,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a90e2c1
2021-12-09 04:15:04,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a90e2c1
2021-12-09 04:15:04,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b24ea2a
2021-12-09 04:15:04,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b24ea2a
2021-12-09 04:15:04,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47df5041
2021-12-09 04:15:04,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47df5041
2021-12-09 04:15:04,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@60bf494c
2021-12-09 04:15:04,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60bf494c
2021-12-09 04:15:04,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@45d56062
2021-12-09 04:15:04,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45d56062
2021-12-09 04:15:04,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@77cca767
2021-12-09 04:15:04,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77cca767
2021-12-09 04:15:04,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77cca767
2021-12-09 04:15:04,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31a136a6
2021-12-09 04:15:04,286 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 04:15:04,286 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 04:15:04,286 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 04:15:04,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19827608
2021-12-09 04:15:04,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7d2c9361
2021-12-09 04:15:04,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@296edc75
2021-12-09 04:15:04,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@296edc75
2021-12-09 04:15:04,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@339f3a55
2021-12-09 04:15:04,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@339f3a55
2021-12-09 04:15:04,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4702e7a5
2021-12-09 04:15:04,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4702e7a5
2021-12-09 04:15:04,289 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@784d9bc
2021-12-09 04:15:04,289 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@784d9bc
2021-12-09 04:15:04,289 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3554bdc0
2021-12-09 04:15:04,289 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3554bdc0
2021-12-09 04:15:04,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42fc4ac4
2021-12-09 04:15:04,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@11df2829
2021-12-09 04:15:04,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@11df2829
2021-12-09 04:15:04,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@11df2829
2021-12-09 04:15:04,291 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 04:15:04,291 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 04:15:04,291 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 04:15:04,291 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@8840c98
2021-12-09 04:15:04,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@7ab2a07e
2021-12-09 04:15:04,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 04:15:04,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 04:15:04,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 04:15:04,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 04:15:04,293 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 04:15:04,293 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 04:15:04,293 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@6b162ecc
2021-12-09 04:15:04,293 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@69ed5ea2
2021-12-09 04:15:04,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@46a123e4
2021-12-09 04:15:04,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46a123e4
2021-12-09 04:15:04,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a296107
2021-12-09 04:15:04,295 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@764a3e5d
2021-12-09 04:15:04,295 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@764a3e5d
2021-12-09 04:15:04,295 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3c7279a5
2021-12-09 04:15:04,295 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c7279a5
2021-12-09 04:15:04,296 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18dcb8a7
2021-12-09 04:15:04,296 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@72ecbcb3
2021-12-09 04:15:04,296 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@6df4af5
2021-12-09 04:15:04,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1d2fb82
2021-12-09 04:15:04,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d2fb82
2021-12-09 04:15:04,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:15:04,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:15:04,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:15:04,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:15:04,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:15:04,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 04:15:04,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 04:15:04,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 04:15:04,321 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:15:04,579 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:15:04,592 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:15:04,638 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d65fcf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3b021664]
2021-12-09 04:15:04,783 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d65fcf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@727453a3]
2021-12-09 04:15:05,041 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:15:05,047 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@727453a3] for TypeConfiguration
2021-12-09 04:15:05,049 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:15:05,337 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'controller' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/elasticsearch/Controller.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 04:15:05,338 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:15:05,338 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@727453a3] for TypeConfiguration
2021-12-09 04:15:05,338 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6ae32ff0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@727453a3]
2021-12-09 04:15:05,340 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:15:05,344 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:15:05,345 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 04:15:05,354 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 04:15:05,376 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'controller' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/elasticsearch/Controller.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 52 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 56 common frames omitted
2021-12-09 04:24:22,730 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 28242 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:24:22,732 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:24:22,732 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:24:23,416 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:24:23,416 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:24:23,449 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 29 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:24:23,590 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:24:23,590 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:24:23,598 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:24:23,600 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:24:23,601 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:24:23,605 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:24:23,606 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:24:23,614 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:24:23,614 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:24:23,648 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 30 ms. Found 6 JPA repository interfaces.
2021-12-09 04:24:24,156 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:24:24,164 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:24:24,165 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:24:24,165 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:24:24,267 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:24:24,267 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1481 ms
2021-12-09 04:24:24,410 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:24:24,463 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:24:24,555 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:24:24,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 04:24:24,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 04:24:24,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@48cb2d73
2021-12-09 04:24:24,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@35e98af
2021-12-09 04:24:24,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@662be9f7
2021-12-09 04:24:24,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@5b5f9003
2021-12-09 04:24:24,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 04:24:24,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 04:24:24,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6d293993
2021-12-09 04:24:24,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@632b305d
2021-12-09 04:24:24,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@632b305d
2021-12-09 04:24:24,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@632b305d
2021-12-09 04:24:24,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@195113de
2021-12-09 04:24:24,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@195113de
2021-12-09 04:24:24,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@195113de
2021-12-09 04:24:24,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 04:24:24,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 04:24:24,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@66d25ba9
2021-12-09 04:24:24,577 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@266e9dda
2021-12-09 04:24:24,577 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@266e9dda
2021-12-09 04:24:24,577 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@266e9dda
2021-12-09 04:24:24,577 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 04:24:24,578 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 04:24:24,578 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7db40fd5
2021-12-09 04:24:24,578 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 04:24:24,578 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 04:24:24,578 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@74c9e11
2021-12-09 04:24:24,579 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4844930a
2021-12-09 04:24:24,579 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4844930a
2021-12-09 04:24:24,579 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f95653f
2021-12-09 04:24:24,579 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f95653f
2021-12-09 04:24:24,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@38029686
2021-12-09 04:24:24,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@38029686
2021-12-09 04:24:24,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@423ed3b5
2021-12-09 04:24:24,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4001d8c1
2021-12-09 04:24:24,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@2fc49538
2021-12-09 04:24:24,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2fc49538
2021-12-09 04:24:24,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@1cd6b1bd
2021-12-09 04:24:24,582 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cd6b1bd
2021-12-09 04:24:24,582 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@5bda157e
2021-12-09 04:24:24,582 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5bda157e
2021-12-09 04:24:24,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e4162bc
2021-12-09 04:24:24,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e4162bc
2021-12-09 04:24:24,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@61b65d54
2021-12-09 04:24:24,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@61b65d54
2021-12-09 04:24:24,584 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3dbd7107
2021-12-09 04:24:24,584 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3dbd7107
2021-12-09 04:24:24,585 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5edc3e29
2021-12-09 04:24:24,585 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5edc3e29
2021-12-09 04:24:24,586 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b87760e
2021-12-09 04:24:24,586 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b87760e
2021-12-09 04:24:24,586 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c1503a3
2021-12-09 04:24:24,586 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c1503a3
2021-12-09 04:24:24,588 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@49671897
2021-12-09 04:24:24,588 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@49671897
2021-12-09 04:24:24,588 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@35bd8bc9
2021-12-09 04:24:24,589 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@35bd8bc9
2021-12-09 04:24:24,589 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 04:24:24,589 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 04:24:24,589 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@39ab5ef7
2021-12-09 04:24:24,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28a6e171
2021-12-09 04:24:24,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 04:24:24,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 04:24:24,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@474749b8
2021-12-09 04:24:24,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19f02280
2021-12-09 04:24:24,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@450f0235
2021-12-09 04:24:24,592 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@217dc48e
2021-12-09 04:24:24,592 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@217dc48e
2021-12-09 04:24:24,592 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@632383b9
2021-12-09 04:24:24,592 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@632383b9
2021-12-09 04:24:24,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b35798
2021-12-09 04:24:24,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b35798
2021-12-09 04:24:24,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3e28d779
2021-12-09 04:24:24,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e28d779
2021-12-09 04:24:24,594 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@13cc0b90
2021-12-09 04:24:24,594 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@13cc0b90
2021-12-09 04:24:24,594 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49580ca8
2021-12-09 04:24:24,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@35145874
2021-12-09 04:24:24,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@35145874
2021-12-09 04:24:24,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@35145874
2021-12-09 04:24:24,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 04:24:24,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 04:24:24,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@39e53bef
2021-12-09 04:24:24,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@4b957db0
2021-12-09 04:24:24,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@273fa9e
2021-12-09 04:24:24,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 04:24:24,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 04:24:24,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@1653b84e
2021-12-09 04:24:24,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 04:24:24,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 04:24:24,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8fcc534
2021-12-09 04:24:24,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@58a765ce
2021-12-09 04:24:24,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@58aa1d72
2021-12-09 04:24:24,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@4a864d4d
2021-12-09 04:24:24,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a864d4d
2021-12-09 04:24:24,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c28e5b6
2021-12-09 04:24:24,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@5d1d9d73
2021-12-09 04:24:24,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5d1d9d73
2021-12-09 04:24:24,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@26e0d39c
2021-12-09 04:24:24,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26e0d39c
2021-12-09 04:24:24,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@b379bc6
2021-12-09 04:24:24,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5a14e60d
2021-12-09 04:24:24,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@4966bab1
2021-12-09 04:24:24,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@7e5efcab
2021-12-09 04:24:24,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e5efcab
2021-12-09 04:24:24,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 04:24:24,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:24:24,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:24:24,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:24:24,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:24:24,604 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:24:24,604 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:24:24,604 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 04:24:24,624 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:24:24,876 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:24:24,887 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:24:24,935 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48cf8414] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27dbaa33]
2021-12-09 04:24:25,076 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48cf8414] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@598778cc]
2021-12-09 04:24:25,352 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:24:25,357 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@598778cc] for TypeConfiguration
2021-12-09 04:24:25,358 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:24:25,671 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'controller' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/elasticsearch/Controller.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
2021-12-09 04:24:25,672 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:24:25,672 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@598778cc] for TypeConfiguration
2021-12-09 04:24:25,672 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1c5cd2ea] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@598778cc]
2021-12-09 04:24:25,674 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:24:25,678 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:24:25,679 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 04:24:25,689 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 04:24:25,705 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'controller' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/elasticsearch/Controller.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicSearchRepository' defined in tech.goodquestion.website.elasticsearch.repository.TopicSearchRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! Reason: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 30 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page org.springframework.data.elasticsearch.repository.ElasticsearchRepository.searchSimilar(java.lang.Object,java.lang.String[],org.springframework.data.domain.Pageable)! No property searchSimilar found for type Topic!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 52 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property searchSimilar found for type Topic!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 56 common frames omitted
2021-12-09 04:24:45,131 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 28287 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:24:45,133 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:24:45,133 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:24:45,530 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:24:45,530 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:24:45,536 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 3 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:24:45,651 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:24:45,651 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:24:45,667 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:24:45,669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:24:45,670 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:24:45,677 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:24:45,690 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:24:45,693 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:24:45,694 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:24:45,698 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:24:45,699 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:24:45,699 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:24:45,700 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:24:45,700 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:24:45,706 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:24:45,706 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:24:45,722 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 04:24:46,130 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:24:46,136 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:24:46,137 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:24:46,137 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:24:46,226 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:24:46,226 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1065 ms
2021-12-09 04:24:46,356 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:24:46,401 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:24:46,489 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:24:46,506 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:24:46,506 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:24:46,506 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:24:46,507 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48cb2d73
2021-12-09 04:24:46,507 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35e98af
2021-12-09 04:24:46,507 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@662be9f7
2021-12-09 04:24:46,508 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:24:46,508 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:24:46,508 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:24:46,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:24:46,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:24:46,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:24:46,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:24:46,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:24:46,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:24:46,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:24:46,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:24:46,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:24:46,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:24:46,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:24:46,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:24:46,512 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:24:46,512 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:24:46,512 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:24:46,512 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:24:46,513 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:24:46,513 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:24:46,513 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@118acf70
2021-12-09 04:24:46,513 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@118acf70
2021-12-09 04:24:46,513 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e91af20
2021-12-09 04:24:46,514 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e91af20
2021-12-09 04:24:46,514 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@60dc1a4e
2021-12-09 04:24:46,514 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@60dc1a4e
2021-12-09 04:24:46,514 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@38029686
2021-12-09 04:24:46,515 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423ed3b5
2021-12-09 04:24:46,515 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@37af24cb
2021-12-09 04:24:46,515 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37af24cb
2021-12-09 04:24:46,516 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7742a45c
2021-12-09 04:24:46,516 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7742a45c
2021-12-09 04:24:46,516 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@619c93ca
2021-12-09 04:24:46,516 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@619c93ca
2021-12-09 04:24:46,517 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1129829c
2021-12-09 04:24:46,517 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1129829c
2021-12-09 04:24:46,517 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6839203b
2021-12-09 04:24:46,517 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6839203b
2021-12-09 04:24:46,518 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@43935e9c
2021-12-09 04:24:46,518 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@43935e9c
2021-12-09 04:24:46,519 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@26d5a317
2021-12-09 04:24:46,519 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@26d5a317
2021-12-09 04:24:46,519 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@89caf47
2021-12-09 04:24:46,519 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@89caf47
2021-12-09 04:24:46,520 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5df6163a
2021-12-09 04:24:46,520 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5df6163a
2021-12-09 04:24:46,521 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@224c7de4
2021-12-09 04:24:46,521 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@224c7de4
2021-12-09 04:24:46,522 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@30922f8d
2021-12-09 04:24:46,522 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30922f8d
2021-12-09 04:24:46,523 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:24:46,523 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:24:46,523 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:24:46,523 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@39ab5ef7
2021-12-09 04:24:46,524 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:24:46,524 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:24:46,524 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:24:46,524 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@265c1a7c
2021-12-09 04:24:46,525 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@cc9ef8d
2021-12-09 04:24:46,525 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@329dc214
2021-12-09 04:24:46,525 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@329dc214
2021-12-09 04:24:46,526 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@357c9bd9
2021-12-09 04:24:46,526 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@357c9bd9
2021-12-09 04:24:46,526 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dd63e3
2021-12-09 04:24:46,526 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dd63e3
2021-12-09 04:24:46,527 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@6a2d867d
2021-12-09 04:24:46,527 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a2d867d
2021-12-09 04:24:46,527 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3a0aaaf0
2021-12-09 04:24:46,527 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3a0aaaf0
2021-12-09 04:24:46,528 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13cc0b90
2021-12-09 04:24:46,528 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:24:46,528 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:24:46,528 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:24:46,529 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:24:46,529 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:24:46,529 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:24:46,529 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@4b03cbad
2021-12-09 04:24:46,530 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@4b957db0
2021-12-09 04:24:46,530 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:24:46,530 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:24:46,530 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:24:46,530 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:24:46,531 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:24:46,531 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:24:46,531 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@8fcc534
2021-12-09 04:24:46,531 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@58a765ce
2021-12-09 04:24:46,532 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@551be9f6
2021-12-09 04:24:46,532 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@551be9f6
2021-12-09 04:24:46,532 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a864d4d
2021-12-09 04:24:46,533 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@26457986
2021-12-09 04:24:46,533 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
2021-12-09 04:24:46,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@74ba6ff5
2021-12-09 04:24:46,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@74ba6ff5
2021-12-09 04:24:46,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e0d39c
2021-12-09 04:24:46,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b379bc6
2021-12-09 04:24:46,535 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@5e85c21b
2021-12-09 04:24:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1b52699c
2021-12-09 04:24:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b52699c
2021-12-09 04:24:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e5efcab
2021-12-09 04:24:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 04:24:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 04:24:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 04:24:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 04:24:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:24:46,538 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:24:46,538 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:24:46,560 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:24:46,813 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:24:46,823 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:24:46,864 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4243341e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d1c5cf2]
2021-12-09 04:24:47,000 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4243341e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6f240187]
2021-12-09 04:24:47,309 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:24:47,314 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6f240187] for TypeConfiguration
2021-12-09 04:24:47,316 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:24:47,904 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:24:48,109 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:24:48,332 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:24:48,342 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:24:48,356 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.449 seconds (JVM running for 4.019)
2021-12-09 04:24:55,191 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 04:24:55,191 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 04:24:55,192 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 04:24:55,238 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.id_user as id_user5_2_0_, topic0_.vote as vote4_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 04:24:55,249 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:24:55,252 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [3]
2021-12-09 04:24:55,258 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 04:24:55,258 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dsgdd]
2021-12-09 04:24:55,258 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user5_2_0_] : [BIGINT]) - [3]
2021-12-09 04:24:55,259 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote4_2_0_] : [INTEGER]) - [0]
2021-12-09 04:24:55,259 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 04:24:55,260 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 04:24:55,260 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 04:24:55,260 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [VARCHAR]) - [eelmdert]
2021-12-09 04:24:55,260 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6fferteffds]
2021-12-09 04:24:55,260 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dfferteffds]
2021-12-09 04:31:45,913 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:31:45,914 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6f240187] for TypeConfiguration
2021-12-09 04:31:45,914 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@40657aa5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6f240187]
2021-12-09 04:31:45,916 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:31:45,920 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:31:50,453 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 28849 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:31:50,454 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:31:50,454 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:31:50,832 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:31:50,832 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:31:50,839 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:31:50,967 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:31:50,967 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:31:50,983 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:31:50,985 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:31:50,986 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:31:50,993 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:31:51,006 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:31:51,009 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:31:51,009 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:31:51,013 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:31:51,014 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:31:51,014 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:31:51,015 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:31:51,015 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:31:51,021 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:31:51,021 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:31:51,039 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 04:31:51,432 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:31:51,439 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:31:51,439 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:31:51,439 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:31:51,530 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:31:51,530 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1045 ms
2021-12-09 04:31:51,660 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:31:51,713 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:31:51,825 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:31:51,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:31:51,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:31:51,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:31:51,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48cb2d73
2021-12-09 04:31:51,845 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35e98af
2021-12-09 04:31:51,845 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@662be9f7
2021-12-09 04:31:51,846 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:31:51,846 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:31:51,846 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:31:51,847 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:31:51,847 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:31:51,847 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:31:51,848 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:31:51,848 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:31:51,848 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:31:51,848 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:31:51,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:31:51,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:31:51,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:31:51,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:31:51,850 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:31:51,850 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:31:51,850 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:31:51,850 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:31:51,851 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:31:51,851 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:31:51,851 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:31:51,852 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@118acf70
2021-12-09 04:31:51,852 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@118acf70
2021-12-09 04:31:51,852 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e91af20
2021-12-09 04:31:51,852 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e91af20
2021-12-09 04:31:51,853 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@60dc1a4e
2021-12-09 04:31:51,853 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@60dc1a4e
2021-12-09 04:31:51,853 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@38029686
2021-12-09 04:31:51,854 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423ed3b5
2021-12-09 04:31:51,854 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@37af24cb
2021-12-09 04:31:51,854 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37af24cb
2021-12-09 04:31:51,855 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7742a45c
2021-12-09 04:31:51,855 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7742a45c
2021-12-09 04:31:51,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@619c93ca
2021-12-09 04:31:51,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@619c93ca
2021-12-09 04:31:51,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1129829c
2021-12-09 04:31:51,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1129829c
2021-12-09 04:31:51,857 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6839203b
2021-12-09 04:31:51,857 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6839203b
2021-12-09 04:31:51,858 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@43935e9c
2021-12-09 04:31:51,858 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@43935e9c
2021-12-09 04:31:51,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@26d5a317
2021-12-09 04:31:51,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@26d5a317
2021-12-09 04:31:51,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@89caf47
2021-12-09 04:31:51,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@89caf47
2021-12-09 04:31:51,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5df6163a
2021-12-09 04:31:51,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5df6163a
2021-12-09 04:31:51,862 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@224c7de4
2021-12-09 04:31:51,862 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@224c7de4
2021-12-09 04:31:51,862 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@30922f8d
2021-12-09 04:31:51,862 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30922f8d
2021-12-09 04:31:51,863 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:31:51,863 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:31:51,863 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:31:51,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@39ab5ef7
2021-12-09 04:31:51,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:31:51,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:31:51,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:31:51,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@265c1a7c
2021-12-09 04:31:51,867 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@cc9ef8d
2021-12-09 04:31:51,867 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@329dc214
2021-12-09 04:31:51,867 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@329dc214
2021-12-09 04:31:51,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@357c9bd9
2021-12-09 04:31:51,869 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@357c9bd9
2021-12-09 04:31:51,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dd63e3
2021-12-09 04:31:51,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dd63e3
2021-12-09 04:31:51,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@6a2d867d
2021-12-09 04:31:51,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a2d867d
2021-12-09 04:31:51,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3a0aaaf0
2021-12-09 04:31:51,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3a0aaaf0
2021-12-09 04:31:51,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13cc0b90
2021-12-09 04:31:51,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:31:51,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:31:51,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:31:51,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:31:51,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:31:51,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:31:51,876 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@4b03cbad
2021-12-09 04:31:51,876 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@4b957db0
2021-12-09 04:31:51,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:31:51,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:31:51,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:31:51,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:31:51,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:31:51,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:31:51,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@8fcc534
2021-12-09 04:31:51,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@58a765ce
2021-12-09 04:31:51,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@551be9f6
2021-12-09 04:31:51,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@551be9f6
2021-12-09 04:31:51,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a864d4d
2021-12-09 04:31:51,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@26457986
2021-12-09 04:31:51,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
2021-12-09 04:31:51,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@74ba6ff5
2021-12-09 04:31:51,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@74ba6ff5
2021-12-09 04:31:51,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e0d39c
2021-12-09 04:31:51,883 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b379bc6
2021-12-09 04:31:51,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@5e85c21b
2021-12-09 04:31:51,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1b52699c
2021-12-09 04:31:51,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b52699c
2021-12-09 04:31:51,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e5efcab
2021-12-09 04:31:51,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 04:31:51,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 04:31:51,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 04:31:51,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 04:31:51,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:31:51,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:31:51,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:31:51,920 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:31:52,223 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:31:52,234 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:31:52,277 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4243341e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d1c5cf2]
2021-12-09 04:31:52,408 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4243341e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@67dc6b48]
2021-12-09 04:31:52,679 [main] DEBUG org.hibernate.SQL                                  - alter table topic add column description varchar(255) not null
2021-12-09 04:31:52,747 [main] DEBUG org.hibernate.SQL                                  - alter table topic add column updated_at datetime(6) not null
2021-12-09 04:31:52,779 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl               - GenerationTarget encountered exception accepting command : Error executing DDL "alter table topic add column updated_at datetime(6) not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table topic add column updated_at datetime(6) not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:562)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:583)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:297)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:75)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '0000-00-00 00:00:00' for column 'updated_at' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 34 common frames omitted
2021-12-09 04:31:52,786 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:31:52,791 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@67dc6b48] for TypeConfiguration
2021-12-09 04:31:52,792 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:31:53,403 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:31:53,606 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:31:53,837 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:31:53,845 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:31:53,856 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.629 seconds (JVM running for 4.118)
2021-12-09 04:35:50,449 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:35:50,449 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@67dc6b48] for TypeConfiguration
2021-12-09 04:35:50,450 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45125255] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@67dc6b48]
2021-12-09 04:35:50,452 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:35:50,456 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:35:54,172 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 29229 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:35:54,173 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:35:54,174 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:35:54,603 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:35:54,604 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:35:54,611 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:35:54,735 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:35:54,735 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:35:54,753 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:35:54,754 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:35:54,756 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:35:54,766 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:35:54,784 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 48 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:35:54,789 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:35:54,789 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:35:54,794 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:35:54,795 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:35:54,795 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:35:54,796 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:35:54,796 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:35:54,802 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:35:54,803 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:35:54,826 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
2021-12-09 04:35:55,245 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:35:55,251 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:35:55,252 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:35:55,252 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:35:55,335 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:35:55,335 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1131 ms
2021-12-09 04:35:55,488 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:35:55,547 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:35:55,650 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:35:55,669 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:35:55,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:35:55,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:35:55,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48cb2d73
2021-12-09 04:35:55,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35e98af
2021-12-09 04:35:55,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@662be9f7
2021-12-09 04:35:55,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:35:55,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:35:55,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:35:55,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:35:55,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:35:55,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:35:55,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:35:55,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:35:55,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:35:55,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:35:55,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:35:55,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:35:55,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:35:55,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:35:55,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:35:55,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:35:55,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:35:55,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:35:55,677 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:35:55,677 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:35:55,677 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:35:55,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@118acf70
2021-12-09 04:35:55,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@118acf70
2021-12-09 04:35:55,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e91af20
2021-12-09 04:35:55,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e91af20
2021-12-09 04:35:55,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@60dc1a4e
2021-12-09 04:35:55,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@60dc1a4e
2021-12-09 04:35:55,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@38029686
2021-12-09 04:35:55,680 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423ed3b5
2021-12-09 04:35:55,680 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@37af24cb
2021-12-09 04:35:55,680 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37af24cb
2021-12-09 04:35:55,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7742a45c
2021-12-09 04:35:55,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7742a45c
2021-12-09 04:35:55,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@619c93ca
2021-12-09 04:35:55,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@619c93ca
2021-12-09 04:35:55,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1129829c
2021-12-09 04:35:55,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1129829c
2021-12-09 04:35:55,683 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6839203b
2021-12-09 04:35:55,683 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6839203b
2021-12-09 04:35:55,683 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@43935e9c
2021-12-09 04:35:55,683 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@43935e9c
2021-12-09 04:35:55,684 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@26d5a317
2021-12-09 04:35:55,684 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@26d5a317
2021-12-09 04:35:55,685 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@89caf47
2021-12-09 04:35:55,685 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@89caf47
2021-12-09 04:35:55,685 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5df6163a
2021-12-09 04:35:55,685 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5df6163a
2021-12-09 04:35:55,687 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@224c7de4
2021-12-09 04:35:55,687 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@224c7de4
2021-12-09 04:35:55,688 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@30922f8d
2021-12-09 04:35:55,688 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30922f8d
2021-12-09 04:35:55,689 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:35:55,689 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:35:55,689 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:35:55,690 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@39ab5ef7
2021-12-09 04:35:55,690 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:35:55,690 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:35:55,690 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:35:55,691 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@265c1a7c
2021-12-09 04:35:55,691 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@cc9ef8d
2021-12-09 04:35:55,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@329dc214
2021-12-09 04:35:55,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@329dc214
2021-12-09 04:35:55,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@357c9bd9
2021-12-09 04:35:55,692 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@357c9bd9
2021-12-09 04:35:55,693 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dd63e3
2021-12-09 04:35:55,693 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dd63e3
2021-12-09 04:35:55,693 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@6a2d867d
2021-12-09 04:35:55,693 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a2d867d
2021-12-09 04:35:55,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3a0aaaf0
2021-12-09 04:35:55,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3a0aaaf0
2021-12-09 04:35:55,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13cc0b90
2021-12-09 04:35:55,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:35:55,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:35:55,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:35:55,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:35:55,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:35:55,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:35:55,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@4b03cbad
2021-12-09 04:35:55,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@4b957db0
2021-12-09 04:35:55,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:35:55,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:35:55,697 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:35:55,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:35:55,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:35:55,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:35:55,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@8fcc534
2021-12-09 04:35:55,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@58a765ce
2021-12-09 04:35:55,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@551be9f6
2021-12-09 04:35:55,700 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@551be9f6
2021-12-09 04:35:55,700 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a864d4d
2021-12-09 04:35:55,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@26457986
2021-12-09 04:35:55,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
2021-12-09 04:35:55,702 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@74ba6ff5
2021-12-09 04:35:55,702 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@74ba6ff5
2021-12-09 04:35:55,702 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e0d39c
2021-12-09 04:35:55,703 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b379bc6
2021-12-09 04:35:55,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@5e85c21b
2021-12-09 04:35:55,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1b52699c
2021-12-09 04:35:55,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b52699c
2021-12-09 04:35:55,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e5efcab
2021-12-09 04:35:55,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 04:35:55,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 04:35:55,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 04:35:55,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 04:35:55,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:35:55,707 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:35:55,708 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:35:55,745 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:35:56,029 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:35:56,040 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:35:56,083 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4243341e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d1c5cf2]
2021-12-09 04:35:56,215 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4243341e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@67dc6b48]
2021-12-09 04:35:56,479 [main] DEBUG org.hibernate.SQL                                  - alter table topic add column updated_at datetime(6) not null
2021-12-09 04:35:56,517 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl               - GenerationTarget encountered exception accepting command : Error executing DDL "alter table topic add column updated_at datetime(6) not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table topic add column updated_at datetime(6) not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:562)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:583)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:297)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:75)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '0000-00-00 00:00:00' for column 'updated_at' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 34 common frames omitted
2021-12-09 04:35:56,523 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:35:56,528 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@67dc6b48] for TypeConfiguration
2021-12-09 04:35:56,530 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:35:57,143 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:35:57,341 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:35:57,557 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:35:57,569 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:35:57,580 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.625 seconds (JVM running for 4.096)
2021-12-09 04:36:12,345 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 04:36:12,346 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 04:36:12,347 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 04:36:12,447 [http-nio-5050-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `int` from String "eelmdedfrt": not a valid `int` value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `int` from String "eelmdedfrt": not a valid `int` value
 at [Source: (PushbackInputStream); line: 5, column: 17] (through reference chain: tech.goodquestion.website.entity.User["mobile"])]
2021-12-09 04:36:37,952 [http-nio-5050-exec-4] INFO  t.g.website.controller.UserController              - User created: User(userId=0, email=Lustav@gmfail.chom, username=test5dffefdrthjeffds, password=testd6ffdferjteffds, mobile=1, collectedPoints=0, createdAt=Thu Nov 25 06:37:39 CET 2021)
2021-12-09 04:36:37,999 [http-nio-5050-exec-4] DEBUG org.hibernate.SQL                                  - insert into user (collected_points, created_at, email, mobile, password, username) values (?, ?, ?, ?, ?, ?)
2021-12-09 04:36:38,018 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [INTEGER] - [0]
2021-12-09 04:36:38,020 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [2] as [TIMESTAMP] - [Thu Dec 09 04:36:37 CET 2021]
2021-12-09 04:36:38,024 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [3] as [VARCHAR] - [Lustav@gmfail.chom]
2021-12-09 04:36:38,025 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [4] as [INTEGER] - [1]
2021-12-09 04:36:38,025 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [5] as [VARCHAR] - [testd6ffdferjteffds]
2021-12-09 04:36:38,025 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [6] as [VARCHAR] - [test5dffefdrthjeffds]
2021-12-09 04:37:20,123 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:37:20,124 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@67dc6b48] for TypeConfiguration
2021-12-09 04:37:20,125 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5fa08def] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@67dc6b48]
2021-12-09 04:37:20,127 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:37:20,134 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:37:24,282 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 29381 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:37:24,283 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:37:24,283 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:37:24,648 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:37:24,649 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:37:24,655 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:37:24,781 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:37:24,781 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:37:24,798 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:37:24,799 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:37:24,800 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:37:24,808 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:37:24,819 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:37:24,823 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:37:24,823 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:37:24,827 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:37:24,828 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:37:24,828 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:37:24,829 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:37:24,830 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:37:24,835 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:37:24,835 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:37:24,852 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2021-12-09 04:37:25,246 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:37:25,253 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:37:25,253 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:37:25,253 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:37:25,338 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:37:25,338 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1026 ms
2021-12-09 04:37:25,474 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:37:25,527 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:37:25,626 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:37:25,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 04:37:25,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 04:37:25,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79d7035
2021-12-09 04:37:25,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@243bf087
2021-12-09 04:37:25,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@781aff8b
2021-12-09 04:37:25,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@4962b41e
2021-12-09 04:37:25,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 04:37:25,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 04:37:25,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@552fee7a
2021-12-09 04:37:25,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 04:37:25,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 04:37:25,647 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66e827a8
2021-12-09 04:37:25,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 04:37:25,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 04:37:25,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2db15f70
2021-12-09 04:37:25,648 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 04:37:25,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 04:37:25,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6bcae9
2021-12-09 04:37:25,649 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 04:37:25,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7e3236d
2021-12-09 04:37:25,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e3236d
2021-12-09 04:37:25,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 04:37:25,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 04:37:25,650 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2dba05b1
2021-12-09 04:37:25,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 04:37:25,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 04:37:25,651 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44b940a2
2021-12-09 04:37:25,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 04:37:25,652 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@72557746
2021-12-09 04:37:25,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 04:37:25,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6221b13b
2021-12-09 04:37:25,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@646427f7
2021-12-09 04:37:25,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@646427f7
2021-12-09 04:37:25,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d9c45ee
2021-12-09 04:37:25,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d124d29
2021-12-09 04:37:25,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@7926352f
2021-12-09 04:37:25,654 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7926352f
2021-12-09 04:37:25,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 04:37:25,655 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7ca492d9
2021-12-09 04:37:25,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 04:37:25,656 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@486e9d1d
2021-12-09 04:37:25,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 04:37:25,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1a531422
2021-12-09 04:37:25,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 04:37:25,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d28fb02
2021-12-09 04:37:25,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 04:37:25,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@101cf747
2021-12-09 04:37:25,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 04:37:25,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70b6db83
2021-12-09 04:37:25,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 04:37:25,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@370ef50b
2021-12-09 04:37:25,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 04:37:25,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d313c8c
2021-12-09 04:37:25,661 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@36ad229b
2021-12-09 04:37:25,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36ad229b
2021-12-09 04:37:25,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@50211483
2021-12-09 04:37:25,662 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50211483
2021-12-09 04:37:25,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 04:37:25,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 04:37:25,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@68ea253b
2021-12-09 04:37:25,664 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@517704
2021-12-09 04:37:25,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 04:37:25,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 04:37:25,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@696b52bc
2021-12-09 04:37:25,665 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b2b8d86
2021-12-09 04:37:25,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@14b528b6
2021-12-09 04:37:25,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 04:37:25,666 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fbe70d8
2021-12-09 04:37:25,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 04:37:25,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7aea704c
2021-12-09 04:37:25,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 04:37:25,667 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d1c164a
2021-12-09 04:37:25,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 04:37:25,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73bb1337
2021-12-09 04:37:25,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 04:37:25,668 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@426131d7
2021-12-09 04:37:25,669 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58687fb7
2021-12-09 04:37:25,669 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 04:37:25,669 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 04:37:25,669 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5b733ef7
2021-12-09 04:37:25,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 04:37:25,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 04:37:25,670 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f245bdd
2021-12-09 04:37:25,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5b29ab61
2021-12-09 04:37:25,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@5d71b500
2021-12-09 04:37:25,671 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 04:37:25,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 04:37:25,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5ec6fede
2021-12-09 04:37:25,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 04:37:25,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 04:37:25,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6c075e9d
2021-12-09 04:37:25,672 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@5e599100
2021-12-09 04:37:25,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@4a642e4b
2021-12-09 04:37:25,673 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 04:37:25,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@269222ae
2021-12-09 04:37:25,674 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7d3691e1
2021-12-09 04:37:25,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 04:37:25,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2dff7085
2021-12-09 04:37:25,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 04:37:25,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@395f52ed
2021-12-09 04:37:25,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@65eb3597
2021-12-09 04:37:25,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@374c40ba
2021-12-09 04:37:25,677 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@41def031
2021-12-09 04:37:25,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 04:37:25,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dbed7fd
2021-12-09 04:37:25,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 04:37:25,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 04:37:25,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 04:37:25,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 04:37:25,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:37:25,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:37:25,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:37:25,679 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:37:25,705 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:37:25,962 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:37:25,975 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:37:26,022 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7e0986c9]
2021-12-09 04:37:26,148 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@d1c5cf2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@57f2e67]
2021-12-09 04:37:26,393 [main] DEBUG org.hibernate.SQL                                  - alter table topic add column updated_at datetime(6) not null
2021-12-09 04:37:26,425 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl               - GenerationTarget encountered exception accepting command : Error executing DDL "alter table topic add column updated_at datetime(6) not null" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table topic add column updated_at datetime(6) not null" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:562)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:583)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:297)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:75)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Incorrect datetime value: '0000-00-00 00:00:00' for column 'updated_at' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 34 common frames omitted
2021-12-09 04:37:26,431 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:37:26,436 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@57f2e67] for TypeConfiguration
2021-12-09 04:37:26,438 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:37:27,010 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:37:27,196 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:37:27,407 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:37:27,414 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:37:27,424 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.349 seconds (JVM running for 3.818)
2021-12-09 04:39:11,750 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 04:39:11,752 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 04:39:11,762 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 10 ms
2021-12-09 04:39:11,932 [http-nio-5050-exec-1] INFO  t.g.website.controller.UserController              - User created: User(userId=0, email=Lustav@gmfail.chom, username=test5dffefdrthjeffds, password=testd6ffdferjteffds, mobile=1, collectedPoints=0, createdAt=Thu Nov 25 06:37:39 CET 2021)
2021-12-09 04:39:12,002 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - insert into user (collected_points, created_at, email, mobile, password, username) values (?, ?, ?, ?, ?, ?)
2021-12-09 04:39:12,029 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [INTEGER] - [0]
2021-12-09 04:39:12,030 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [2] as [TIMESTAMP] - [Thu Dec 09 04:39:12 CET 2021]
2021-12-09 04:39:12,037 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [3] as [VARCHAR] - [Lustav@gmfail.chom]
2021-12-09 04:39:12,037 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [4] as [INTEGER] - [1]
2021-12-09 04:39:12,038 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [5] as [VARCHAR] - [testd6ffdferjteffds]
2021-12-09 04:39:12,038 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [6] as [VARCHAR] - [test5dffefdrthjeffds]
2021-12-09 04:39:12,047 [http-nio-5050-exec-1] WARN  o.h.engine.jdbc.spi.SqlExceptionHelper             - SQL Error: 1062, SQLState: 23000
2021-12-09 04:39:12,048 [http-nio-5050-exec-1] ERROR o.h.engine.jdbc.spi.SqlExceptionHelper             - Duplicate entry 'Lustav@gmfail.chom' for key 'UK_ob8kqyqqgmefl0aco34akdtpe'
2021-12-09 04:39:12,079 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [UK_ob8kqyqqgmefl0aco34akdtpe]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement] with root cause
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'Lustav@gmfail.chom' for key 'UK_ob8kqyqqgmefl0aco34akdtpe'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1350)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3196)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3802)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:99)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:720)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:706)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy93.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy93.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:597)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.save(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.createAccount(UserServiceImpl.java:22)
	at tech.goodquestion.website.controller.UserController.signIn(UserController.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:40:42,909 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:40:42,910 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@57f2e67] for TypeConfiguration
2021-12-09 04:40:42,910 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@64ed021a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@57f2e67]
2021-12-09 04:40:42,914 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:40:42,922 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:40:47,447 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 29739 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:40:47,448 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:40:47,448 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:40:47,968 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:40:47,969 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:40:47,976 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:40:48,096 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:40:48,096 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:40:48,113 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:40:48,114 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:40:48,115 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:40:48,123 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:40:48,134 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 37 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:40:48,138 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:40:48,138 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:40:48,142 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:40:48,143 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:40:48,143 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:40:48,144 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:40:48,144 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:40:48,150 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:40:48,150 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:40:48,167 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 04:40:48,588 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:40:48,596 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:40:48,596 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:40:48,596 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:40:48,693 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:40:48,693 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1216 ms
2021-12-09 04:40:48,871 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:40:48,923 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:40:49,025 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:40:49,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:40:49,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:40:49,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457a5b2d
2021-12-09 04:40:49,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48cb2d73
2021-12-09 04:40:49,046 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35e98af
2021-12-09 04:40:49,046 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@662be9f7
2021-12-09 04:40:49,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:40:49,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:40:49,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@31f77791
2021-12-09 04:40:49,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:40:49,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:40:49,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@42297bdf
2021-12-09 04:40:49,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:40:49,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:40:49,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17222c11
2021-12-09 04:40:49,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:40:49,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:40:49,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@11b5f4e2
2021-12-09 04:40:49,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:40:49,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:40:49,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@739831a4
2021-12-09 04:40:49,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:40:49,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:40:49,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fe8c7db
2021-12-09 04:40:49,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:40:49,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:40:49,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19ae2ee5
2021-12-09 04:40:49,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@118acf70
2021-12-09 04:40:49,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@118acf70
2021-12-09 04:40:49,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e91af20
2021-12-09 04:40:49,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e91af20
2021-12-09 04:40:49,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@60dc1a4e
2021-12-09 04:40:49,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@60dc1a4e
2021-12-09 04:40:49,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@38029686
2021-12-09 04:40:49,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@423ed3b5
2021-12-09 04:40:49,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@37af24cb
2021-12-09 04:40:49,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37af24cb
2021-12-09 04:40:49,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7742a45c
2021-12-09 04:40:49,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7742a45c
2021-12-09 04:40:49,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@619c93ca
2021-12-09 04:40:49,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@619c93ca
2021-12-09 04:40:49,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1129829c
2021-12-09 04:40:49,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1129829c
2021-12-09 04:40:49,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6839203b
2021-12-09 04:40:49,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6839203b
2021-12-09 04:40:49,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@43935e9c
2021-12-09 04:40:49,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@43935e9c
2021-12-09 04:40:49,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@26d5a317
2021-12-09 04:40:49,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@26d5a317
2021-12-09 04:40:49,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@89caf47
2021-12-09 04:40:49,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@89caf47
2021-12-09 04:40:49,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5df6163a
2021-12-09 04:40:49,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5df6163a
2021-12-09 04:40:49,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@224c7de4
2021-12-09 04:40:49,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@224c7de4
2021-12-09 04:40:49,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@30922f8d
2021-12-09 04:40:49,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@30922f8d
2021-12-09 04:40:49,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:40:49,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:40:49,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a8e9ed9
2021-12-09 04:40:49,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@39ab5ef7
2021-12-09 04:40:49,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:40:49,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:40:49,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16a3cc88
2021-12-09 04:40:49,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@265c1a7c
2021-12-09 04:40:49,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@cc9ef8d
2021-12-09 04:40:49,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@329dc214
2021-12-09 04:40:49,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@329dc214
2021-12-09 04:40:49,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@357c9bd9
2021-12-09 04:40:49,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@357c9bd9
2021-12-09 04:40:49,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dd63e3
2021-12-09 04:40:49,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dd63e3
2021-12-09 04:40:49,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@6a2d867d
2021-12-09 04:40:49,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6a2d867d
2021-12-09 04:40:49,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3a0aaaf0
2021-12-09 04:40:49,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3a0aaaf0
2021-12-09 04:40:49,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13cc0b90
2021-12-09 04:40:49,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:40:49,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:40:49,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@691541bc
2021-12-09 04:40:49,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:40:49,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:40:49,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18e4674d
2021-12-09 04:40:49,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@4b03cbad
2021-12-09 04:40:49,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@4b957db0
2021-12-09 04:40:49,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:40:49,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:40:49,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@437c4b25
2021-12-09 04:40:49,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:40:49,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:40:49,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@679d0be8
2021-12-09 04:40:49,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@8fcc534
2021-12-09 04:40:49,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@58a765ce
2021-12-09 04:40:49,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@551be9f6
2021-12-09 04:40:49,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@551be9f6
2021-12-09 04:40:49,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a864d4d
2021-12-09 04:40:49,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@26457986
2021-12-09 04:40:49,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26457986
2021-12-09 04:40:49,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@74ba6ff5
2021-12-09 04:40:49,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@74ba6ff5
2021-12-09 04:40:49,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26e0d39c
2021-12-09 04:40:49,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b379bc6
2021-12-09 04:40:49,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@5e85c21b
2021-12-09 04:40:49,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1b52699c
2021-12-09 04:40:49,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b52699c
2021-12-09 04:40:49,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e5efcab
2021-12-09 04:40:49,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 04:40:49,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 04:40:49,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 04:40:49,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 04:40:49,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:40:49,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:40:49,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:40:49,117 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:40:49,444 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:40:49,455 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:40:49,499 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4243341e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d1c5cf2]
2021-12-09 04:40:49,660 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4243341e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6f240187]
2021-12-09 04:40:49,912 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:40:49,916 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6f240187] for TypeConfiguration
2021-12-09 04:40:49,918 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:40:50,461 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:40:50,649 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:40:50,863 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:40:50,870 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:40:50,879 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.636 seconds (JVM running for 4.178)
2021-12-09 04:47:21,358 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:47:21,359 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6f240187] for TypeConfiguration
2021-12-09 04:47:21,360 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@201c8ebe] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6f240187]
2021-12-09 04:47:21,363 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:47:21,368 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:49:59,204 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 30317 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:49:59,205 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:49:59,206 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:49:59,569 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:49:59,570 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:49:59,576 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:49:59,703 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:49:59,703 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:49:59,720 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:49:59,722 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:49:59,723 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:49:59,730 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:49:59,743 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 39 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:49:59,746 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:49:59,747 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:49:59,751 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:49:59,752 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:49:59,752 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:49:59,753 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:49:59,754 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:49:59,759 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:49:59,760 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:49:59,778 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2021-12-09 04:50:00,206 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:50:00,213 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:50:00,213 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:50:00,214 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:50:00,303 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:50:00,303 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1069 ms
2021-12-09 04:50:00,416 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:50:00,469 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:50:00,579 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:50:00,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@35e98af
2021-12-09 04:50:00,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@35e98af
2021-12-09 04:50:00,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@35e98af
2021-12-09 04:50:00,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@662be9f7
2021-12-09 04:50:00,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b5f9003
2021-12-09 04:50:00,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@7f5fcfe9
2021-12-09 04:50:00,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@66e827a8
2021-12-09 04:50:00,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@66e827a8
2021-12-09 04:50:00,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66e827a8
2021-12-09 04:50:00,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@2db15f70
2021-12-09 04:50:00,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@2db15f70
2021-12-09 04:50:00,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2db15f70
2021-12-09 04:50:00,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@6bcae9
2021-12-09 04:50:00,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@6bcae9
2021-12-09 04:50:00,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6bcae9
2021-12-09 04:50:00,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@7e3236d
2021-12-09 04:50:00,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@7e3236d
2021-12-09 04:50:00,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e3236d
2021-12-09 04:50:00,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@2dba05b1
2021-12-09 04:50:00,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@2dba05b1
2021-12-09 04:50:00,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2dba05b1
2021-12-09 04:50:00,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@44b940a2
2021-12-09 04:50:00,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@44b940a2
2021-12-09 04:50:00,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44b940a2
2021-12-09 04:50:00,604 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@72557746
2021-12-09 04:50:00,604 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@72557746
2021-12-09 04:50:00,604 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72557746
2021-12-09 04:50:00,604 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6221b13b
2021-12-09 04:50:00,605 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6221b13b
2021-12-09 04:50:00,605 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@646427f7
2021-12-09 04:50:00,605 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@646427f7
2021-12-09 04:50:00,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@423ed3b5
2021-12-09 04:50:00,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@423ed3b5
2021-12-09 04:50:00,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4001d8c1
2021-12-09 04:50:00,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7926352f
2021-12-09 04:50:00,607 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@7ca492d9
2021-12-09 04:50:00,607 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ca492d9
2021-12-09 04:50:00,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@486e9d1d
2021-12-09 04:50:00,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@486e9d1d
2021-12-09 04:50:00,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@1a531422
2021-12-09 04:50:00,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1a531422
2021-12-09 04:50:00,609 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d28fb02
2021-12-09 04:50:00,609 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d28fb02
2021-12-09 04:50:00,610 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@101cf747
2021-12-09 04:50:00,610 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@101cf747
2021-12-09 04:50:00,610 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70b6db83
2021-12-09 04:50:00,610 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70b6db83
2021-12-09 04:50:00,611 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@370ef50b
2021-12-09 04:50:00,611 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@370ef50b
2021-12-09 04:50:00,611 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2d313c8c
2021-12-09 04:50:00,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2d313c8c
2021-12-09 04:50:00,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e52a26b
2021-12-09 04:50:00,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e52a26b
2021-12-09 04:50:00,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@36f6e521
2021-12-09 04:50:00,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36f6e521
2021-12-09 04:50:00,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@191c6e13
2021-12-09 04:50:00,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@191c6e13
2021-12-09 04:50:00,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@28a6e171
2021-12-09 04:50:00,616 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@28a6e171
2021-12-09 04:50:00,616 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@28a6e171
2021-12-09 04:50:00,616 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f9b21d6
2021-12-09 04:50:00,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@5b2b8d86
2021-12-09 04:50:00,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5b2b8d86
2021-12-09 04:50:00,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5b2b8d86
2021-12-09 04:50:00,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@14b528b6
2021-12-09 04:50:00,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@fbe70d8
2021-12-09 04:50:00,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7aea704c
2021-12-09 04:50:00,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7aea704c
2021-12-09 04:50:00,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@7d1c164a
2021-12-09 04:50:00,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d1c164a
2021-12-09 04:50:00,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@73bb1337
2021-12-09 04:50:00,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@73bb1337
2021-12-09 04:50:00,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@426131d7
2021-12-09 04:50:00,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@426131d7
2021-12-09 04:50:00,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49580ca8
2021-12-09 04:50:00,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49580ca8
2021-12-09 04:50:00,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29962b2f
2021-12-09 04:50:00,621 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@f245bdd
2021-12-09 04:50:00,621 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@f245bdd
2021-12-09 04:50:00,621 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@f245bdd
2021-12-09 04:50:00,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b29ab61
2021-12-09 04:50:00,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b29ab61
2021-12-09 04:50:00,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b29ab61
2021-12-09 04:50:00,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@273fa9e
2021-12-09 04:50:00,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@5ec6fede
2021-12-09 04:50:00,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6c075e9d
2021-12-09 04:50:00,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6c075e9d
2021-12-09 04:50:00,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6c075e9d
2021-12-09 04:50:00,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@58a765ce
2021-12-09 04:50:00,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@58a765ce
2021-12-09 04:50:00,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@58a765ce
2021-12-09 04:50:00,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@58aa1d72
2021-12-09 04:50:00,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@5eed6dfb
2021-12-09 04:50:00,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@3c28e5b6
2021-12-09 04:50:00,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3c28e5b6
2021-12-09 04:50:00,626 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@646cd766
2021-12-09 04:50:00,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@5db3d57c
2021-12-09 04:50:00,627 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5db3d57c
2021-12-09 04:50:00,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@b379bc6
2021-12-09 04:50:00,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b379bc6
2021-12-09 04:50:00,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
2021-12-09 04:50:00,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3709748f
2021-12-09 04:50:00,629 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@5aa76ad2
2021-12-09 04:50:00,631 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@3db65c0d
2021-12-09 04:50:00,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3db65c0d
2021-12-09 04:50:00,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:50:00,632 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:50:00,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:50:00,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 04:50:00,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 04:50:00,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 04:50:00,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d289d3f
2021-12-09 04:50:00,633 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@10f405ff
2021-12-09 04:50:00,665 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:50:00,947 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:50:00,957 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:50:01,005 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f59da34] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@752973de]
2021-12-09 04:50:01,157 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f59da34] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@57f2e67]
2021-12-09 04:50:01,429 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:50:01,434 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@57f2e67] for TypeConfiguration
2021-12-09 04:50:01,436 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:50:02,001 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:50:02,194 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:50:02,420 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:50:02,428 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:50:02,445 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.469 seconds (JVM running for 3.954)
2021-12-09 04:50:39,723 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 04:50:39,723 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 04:50:39,724 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 04:50:39,775 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 04:50:39,787 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:50:39,791 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [3]
2021-12-09 04:50:39,797 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 04:50:39,797 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dsgdd]
2021-12-09 04:50:39,797 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([descript4_2_0_] : [VARCHAR]) - []
2021-12-09 04:50:39,797 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user6_2_0_] : [BIGINT]) - [3]
2021-12-09 04:50:39,798 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote5_2_0_] : [INTEGER]) - [0]
2021-12-09 04:50:39,798 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 04:50:39,799 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 04:50:39,799 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 04:50:39,812 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.deleteById(SimpleJpaRepository.java:165)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy104.deleteById(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.deleteTopicById(TopicServiceImpl.java:39)
	at tech.goodquestion.website.controller.TopicController.createTopic(TopicController.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:51:29,177 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:51:29,178 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@57f2e67] for TypeConfiguration
2021-12-09 04:51:29,178 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3e5a9292] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@57f2e67]
2021-12-09 04:51:29,180 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:51:29,184 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:51:32,890 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 30461 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:51:32,891 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:51:32,891 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:51:33,250 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:51:33,251 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:51:33,258 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:51:33,379 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:51:33,379 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:51:33,396 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:51:33,397 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:51:33,398 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:51:33,406 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:51:33,418 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:51:33,421 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:51:33,422 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:51:33,426 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:51:33,426 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:51:33,427 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:51:33,428 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:51:33,428 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:51:33,433 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:51:33,434 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:51:33,451 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 04:51:33,840 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:51:33,847 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:51:33,847 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:51:33,847 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:51:33,927 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:51:33,927 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1006 ms
2021-12-09 04:51:34,058 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:51:34,121 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:51:34,245 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:51:34,265 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 04:51:34,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 04:51:34,266 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 04:51:34,267 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7fbf26fc
2021-12-09 04:51:34,267 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4fecf308
2021-12-09 04:51:34,268 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f9dda71
2021-12-09 04:51:34,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 04:51:34,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 04:51:34,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 04:51:34,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 04:51:34,271 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 04:51:34,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 04:51:34,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 04:51:34,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 04:51:34,272 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 04:51:34,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 04:51:34,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 04:51:34,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 04:51:34,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 04:51:34,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 04:51:34,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 04:51:34,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 04:51:34,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 04:51:34,275 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 04:51:34,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 04:51:34,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 04:51:34,276 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 04:51:34,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@101bdd1c
2021-12-09 04:51:34,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@101bdd1c
2021-12-09 04:51:34,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3dc68586
2021-12-09 04:51:34,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3dc68586
2021-12-09 04:51:34,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@31da0434
2021-12-09 04:51:34,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@31da0434
2021-12-09 04:51:34,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c88191b
2021-12-09 04:51:34,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73893ec1
2021-12-09 04:51:34,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@d5e575c
2021-12-09 04:51:34,280 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@d5e575c
2021-12-09 04:51:34,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@3b41e1bf
2021-12-09 04:51:34,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3b41e1bf
2021-12-09 04:51:34,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@21390938
2021-12-09 04:51:34,282 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@21390938
2021-12-09 04:51:34,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@72fbf94d
2021-12-09 04:51:34,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@72fbf94d
2021-12-09 04:51:34,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f2c57fe
2021-12-09 04:51:34,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f2c57fe
2021-12-09 04:51:34,286 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f8a02cf
2021-12-09 04:51:34,286 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f8a02cf
2021-12-09 04:51:34,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a90e2c1
2021-12-09 04:51:34,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a90e2c1
2021-12-09 04:51:34,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b24ea2a
2021-12-09 04:51:34,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b24ea2a
2021-12-09 04:51:34,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47df5041
2021-12-09 04:51:34,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47df5041
2021-12-09 04:51:34,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@60bf494c
2021-12-09 04:51:34,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60bf494c
2021-12-09 04:51:34,291 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@45d56062
2021-12-09 04:51:34,291 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45d56062
2021-12-09 04:51:34,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@77cca767
2021-12-09 04:51:34,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77cca767
2021-12-09 04:51:34,293 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77cca767
2021-12-09 04:51:34,293 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31a136a6
2021-12-09 04:51:34,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 04:51:34,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 04:51:34,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 04:51:34,295 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19827608
2021-12-09 04:51:34,295 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7d2c9361
2021-12-09 04:51:34,296 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@296edc75
2021-12-09 04:51:34,296 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@296edc75
2021-12-09 04:51:34,297 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@339f3a55
2021-12-09 04:51:34,297 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@339f3a55
2021-12-09 04:51:34,297 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4702e7a5
2021-12-09 04:51:34,297 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4702e7a5
2021-12-09 04:51:34,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@784d9bc
2021-12-09 04:51:34,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@784d9bc
2021-12-09 04:51:34,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3554bdc0
2021-12-09 04:51:34,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3554bdc0
2021-12-09 04:51:34,299 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42fc4ac4
2021-12-09 04:51:34,299 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@11df2829
2021-12-09 04:51:34,299 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@11df2829
2021-12-09 04:51:34,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@11df2829
2021-12-09 04:51:34,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 04:51:34,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 04:51:34,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 04:51:34,301 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@8840c98
2021-12-09 04:51:34,302 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@7ab2a07e
2021-12-09 04:51:34,302 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 04:51:34,302 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 04:51:34,302 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 04:51:34,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 04:51:34,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 04:51:34,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 04:51:34,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@6b162ecc
2021-12-09 04:51:34,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@69ed5ea2
2021-12-09 04:51:34,304 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@46a123e4
2021-12-09 04:51:34,304 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46a123e4
2021-12-09 04:51:34,305 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a296107
2021-12-09 04:51:34,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@764a3e5d
2021-12-09 04:51:34,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@764a3e5d
2021-12-09 04:51:34,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3c7279a5
2021-12-09 04:51:34,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c7279a5
2021-12-09 04:51:34,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18dcb8a7
2021-12-09 04:51:34,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@72ecbcb3
2021-12-09 04:51:34,308 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@6df4af5
2021-12-09 04:51:34,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1d2fb82
2021-12-09 04:51:34,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d2fb82
2021-12-09 04:51:34,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:51:34,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:51:34,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:51:34,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:51:34,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:51:34,311 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 04:51:34,311 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 04:51:34,311 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 04:51:34,335 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:51:34,606 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:51:34,616 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:51:34,680 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d65fcf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3b021664]
2021-12-09 04:51:34,830 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d65fcf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@727453a3]
2021-12-09 04:51:35,069 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:51:35,074 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@727453a3] for TypeConfiguration
2021-12-09 04:51:35,075 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:51:35,635 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:51:35,821 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:51:36,047 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:51:36,054 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:51:36,063 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.388 seconds (JVM running for 3.858)
2021-12-09 04:51:41,213 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 04:51:41,213 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 04:51:41,214 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 0 ms
2021-12-09 04:51:41,263 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 04:51:41,275 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:51:41,280 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [3]
2021-12-09 04:51:41,287 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 04:51:41,287 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dsgdd]
2021-12-09 04:51:41,288 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([descript4_2_0_] : [VARCHAR]) - []
2021-12-09 04:51:41,288 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user6_2_0_] : [BIGINT]) - [3]
2021-12-09 04:51:41,288 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote5_2_0_] : [INTEGER]) - [0]
2021-12-09 04:51:41,289 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 04:51:41,290 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 04:51:41,290 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 04:51:41,306 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.deleteById(SimpleJpaRepository.java:165)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy104.deleteById(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.deleteTopicById(TopicServiceImpl.java:39)
	at tech.goodquestion.website.controller.TopicController.deleteTopicById(TopicController.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:52:52,144 [http-nio-5050-exec-4] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:52:52,147 [http-nio-5050-exec-4] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:52:52,148 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:52:52,149 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:52:52,149 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:52:52,149 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:52:52,151 [http-nio-5050-exec-4] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:52:54,267 [http-nio-5050-exec-6] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:52:54,269 [http-nio-5050-exec-6] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:52:54,269 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:52:54,270 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:52:54,270 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:52:54,270 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:52:54,271 [http-nio-5050-exec-6] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:53:42,714 [http-nio-5050-exec-8] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:53:42,715 [http-nio-5050-exec-8] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:53:42,716 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:53:42,717 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:53:42,717 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:53:42,717 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:53:42,719 [http-nio-5050-exec-8] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:54:03,102 [http-nio-5050-exec-10] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:54:03,105 [http-nio-5050-exec-10] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:54:03,105 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:54:03,106 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:54:03,106 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:54:03,106 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:54:03,108 [http-nio-5050-exec-10] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:55:05,801 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:55:05,802 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@727453a3] for TypeConfiguration
2021-12-09 04:55:05,802 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3baa8ac2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@727453a3]
2021-12-09 04:55:05,804 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:55:05,809 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:55:09,520 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 30775 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:55:09,521 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:55:09,521 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:55:09,900 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:55:09,900 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:55:09,907 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:55:10,028 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:55:10,029 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:55:10,047 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:55:10,048 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:55:10,049 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:55:10,057 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:55:10,069 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 39 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:55:10,072 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:55:10,072 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:55:10,077 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:55:10,077 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:55:10,077 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:55:10,078 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:55:10,079 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:55:10,084 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:55:10,084 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:55:10,102 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 04:55:10,513 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:55:10,520 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:55:10,521 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:55:10,521 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:55:10,605 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:55:10,605 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1054 ms
2021-12-09 04:55:10,768 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:55:10,838 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:55:10,989 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:55:11,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@35e98af
2021-12-09 04:55:11,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@35e98af
2021-12-09 04:55:11,028 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@35e98af
2021-12-09 04:55:11,029 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@662be9f7
2021-12-09 04:55:11,030 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b5f9003
2021-12-09 04:55:11,032 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@7f5fcfe9
2021-12-09 04:55:11,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@66e827a8
2021-12-09 04:55:11,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@66e827a8
2021-12-09 04:55:11,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66e827a8
2021-12-09 04:55:11,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@2db15f70
2021-12-09 04:55:11,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@2db15f70
2021-12-09 04:55:11,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2db15f70
2021-12-09 04:55:11,035 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@6bcae9
2021-12-09 04:55:11,035 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@6bcae9
2021-12-09 04:55:11,035 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6bcae9
2021-12-09 04:55:11,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@7e3236d
2021-12-09 04:55:11,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@7e3236d
2021-12-09 04:55:11,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e3236d
2021-12-09 04:55:11,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@2dba05b1
2021-12-09 04:55:11,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@2dba05b1
2021-12-09 04:55:11,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2dba05b1
2021-12-09 04:55:11,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@44b940a2
2021-12-09 04:55:11,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@44b940a2
2021-12-09 04:55:11,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44b940a2
2021-12-09 04:55:11,041 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@72557746
2021-12-09 04:55:11,041 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@72557746
2021-12-09 04:55:11,041 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72557746
2021-12-09 04:55:11,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6221b13b
2021-12-09 04:55:11,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6221b13b
2021-12-09 04:55:11,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@646427f7
2021-12-09 04:55:11,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@646427f7
2021-12-09 04:55:11,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@423ed3b5
2021-12-09 04:55:11,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@423ed3b5
2021-12-09 04:55:11,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4001d8c1
2021-12-09 04:55:11,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7926352f
2021-12-09 04:55:11,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@7ca492d9
2021-12-09 04:55:11,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ca492d9
2021-12-09 04:55:11,046 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@486e9d1d
2021-12-09 04:55:11,046 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@486e9d1d
2021-12-09 04:55:11,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@1a531422
2021-12-09 04:55:11,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1a531422
2021-12-09 04:55:11,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d28fb02
2021-12-09 04:55:11,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d28fb02
2021-12-09 04:55:11,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@101cf747
2021-12-09 04:55:11,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@101cf747
2021-12-09 04:55:11,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70b6db83
2021-12-09 04:55:11,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70b6db83
2021-12-09 04:55:11,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@370ef50b
2021-12-09 04:55:11,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@370ef50b
2021-12-09 04:55:11,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2d313c8c
2021-12-09 04:55:11,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2d313c8c
2021-12-09 04:55:11,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e52a26b
2021-12-09 04:55:11,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e52a26b
2021-12-09 04:55:11,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@36f6e521
2021-12-09 04:55:11,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36f6e521
2021-12-09 04:55:11,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@191c6e13
2021-12-09 04:55:11,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@191c6e13
2021-12-09 04:55:11,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@28a6e171
2021-12-09 04:55:11,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@28a6e171
2021-12-09 04:55:11,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@28a6e171
2021-12-09 04:55:11,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f9b21d6
2021-12-09 04:55:11,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@5b2b8d86
2021-12-09 04:55:11,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5b2b8d86
2021-12-09 04:55:11,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5b2b8d86
2021-12-09 04:55:11,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@14b528b6
2021-12-09 04:55:11,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@fbe70d8
2021-12-09 04:55:11,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7aea704c
2021-12-09 04:55:11,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7aea704c
2021-12-09 04:55:11,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@7d1c164a
2021-12-09 04:55:11,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d1c164a
2021-12-09 04:55:11,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@73bb1337
2021-12-09 04:55:11,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@73bb1337
2021-12-09 04:55:11,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@426131d7
2021-12-09 04:55:11,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@426131d7
2021-12-09 04:55:11,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49580ca8
2021-12-09 04:55:11,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49580ca8
2021-12-09 04:55:11,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29962b2f
2021-12-09 04:55:11,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@f245bdd
2021-12-09 04:55:11,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@f245bdd
2021-12-09 04:55:11,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@f245bdd
2021-12-09 04:55:11,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b29ab61
2021-12-09 04:55:11,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b29ab61
2021-12-09 04:55:11,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b29ab61
2021-12-09 04:55:11,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@273fa9e
2021-12-09 04:55:11,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@5ec6fede
2021-12-09 04:55:11,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6c075e9d
2021-12-09 04:55:11,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6c075e9d
2021-12-09 04:55:11,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6c075e9d
2021-12-09 04:55:11,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@58a765ce
2021-12-09 04:55:11,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@58a765ce
2021-12-09 04:55:11,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@58a765ce
2021-12-09 04:55:11,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@58aa1d72
2021-12-09 04:55:11,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@5eed6dfb
2021-12-09 04:55:11,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@3c28e5b6
2021-12-09 04:55:11,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3c28e5b6
2021-12-09 04:55:11,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@646cd766
2021-12-09 04:55:11,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@5db3d57c
2021-12-09 04:55:11,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5db3d57c
2021-12-09 04:55:11,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@b379bc6
2021-12-09 04:55:11,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@b379bc6
2021-12-09 04:55:11,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a14e60d
2021-12-09 04:55:11,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3709748f
2021-12-09 04:55:11,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@5aa76ad2
2021-12-09 04:55:11,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@3db65c0d
2021-12-09 04:55:11,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3db65c0d
2021-12-09 04:55:11,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:55:11,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:55:11,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:55:11,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 04:55:11,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 04:55:11,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 04:55:11,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d289d3f
2021-12-09 04:55:11,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@10f405ff
2021-12-09 04:55:11,100 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:55:11,365 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:55:11,375 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:55:11,417 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f59da34] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@752973de]
2021-12-09 04:55:11,537 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f59da34] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@57f2e67]
2021-12-09 04:55:11,795 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:55:11,799 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@57f2e67] for TypeConfiguration
2021-12-09 04:55:11,800 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:55:12,371 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:55:12,556 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:55:12,777 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:55:12,784 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:55:12,794 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.519 seconds (JVM running for 4.016)
2021-12-09 04:55:15,929 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 04:55:15,929 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 04:55:15,930 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 04:55:15,956 [http-nio-5050-exec-2] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:55:15,987 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:55:15,999 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:55:16,011 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:55:16,013 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:55:16,013 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:55:16,033 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:55:18,536 [http-nio-5050-exec-4] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:55:18,537 [http-nio-5050-exec-4] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:55:18,538 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:55:18,538 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:55:18,539 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:55:18,539 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:55:18,541 [http-nio-5050-exec-4] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:55:23,465 [http-nio-5050-exec-6] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 04:55:23,466 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:55:23,467 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [3]
2021-12-09 04:55:23,468 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 04:55:23,468 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dsgdd]
2021-12-09 04:55:23,468 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([descript4_2_0_] : [VARCHAR]) - []
2021-12-09 04:55:23,468 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user6_2_0_] : [BIGINT]) - [3]
2021-12-09 04:55:23,468 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote5_2_0_] : [INTEGER]) - [0]
2021-12-09 04:55:23,469 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 04:55:23,469 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 04:55:23,469 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 04:55:23,472 [http-nio-5050-exec-6] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.deleteById(SimpleJpaRepository.java:165)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy104.deleteById(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.deleteTopicById(TopicServiceImpl.java:39)
	at tech.goodquestion.website.controller.TopicController.deleteTopicById(TopicController.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:55:28,293 [http-nio-5050-exec-8] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:55:28,295 [http-nio-5050-exec-8] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:55:28,295 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:55:28,296 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:55:28,296 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:55:28,297 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:55:28,298 [http-nio-5050-exec-8] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:56:11,204 [http-nio-5050-exec-10] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:56:11,207 [http-nio-5050-exec-10] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:56:11,207 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:56:11,208 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:56:11,208 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:56:11,208 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:56:11,209 [http-nio-5050-exec-10] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:56:24,901 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:56:24,902 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@57f2e67] for TypeConfiguration
2021-12-09 04:56:24,902 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5d7d2c6f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@57f2e67]
2021-12-09 04:56:24,904 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:56:24,907 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:56:28,644 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 30898 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:56:28,646 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:56:28,646 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:56:29,018 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:56:29,019 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:56:29,026 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:56:29,156 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:56:29,157 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:56:29,175 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:56:29,176 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:56:29,177 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:56:29,185 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:56:29,197 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 40 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:56:29,201 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:56:29,201 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:56:29,205 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:56:29,206 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:56:29,206 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:56:29,207 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:56:29,208 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:56:29,213 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:56:29,213 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:56:29,232 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2021-12-09 04:56:29,635 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:56:29,641 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:56:29,642 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:56:29,642 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:56:29,733 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:56:29,734 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1059 ms
2021-12-09 04:56:29,944 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:56:30,013 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:56:30,147 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:56:30,171 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@650aa077
2021-12-09 04:56:30,171 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@650aa077
2021-12-09 04:56:30,171 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@650aa077
2021-12-09 04:56:30,172 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@372461a9
2021-12-09 04:56:30,173 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3086f480
2021-12-09 04:56:30,173 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@7fbf26fc
2021-12-09 04:56:30,174 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@7f5fcfe9
2021-12-09 04:56:30,174 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@7f5fcfe9
2021-12-09 04:56:30,174 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f5fcfe9
2021-12-09 04:56:30,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@475f5672
2021-12-09 04:56:30,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@475f5672
2021-12-09 04:56:30,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@475f5672
2021-12-09 04:56:30,176 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@44598ef7
2021-12-09 04:56:30,176 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@44598ef7
2021-12-09 04:56:30,176 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@44598ef7
2021-12-09 04:56:30,177 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@3ebc955b
2021-12-09 04:56:30,177 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@3ebc955b
2021-12-09 04:56:30,177 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ebc955b
2021-12-09 04:56:30,178 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@3830f918
2021-12-09 04:56:30,178 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@3830f918
2021-12-09 04:56:30,178 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3830f918
2021-12-09 04:56:30,179 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@38883a31
2021-12-09 04:56:30,179 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@38883a31
2021-12-09 04:56:30,179 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38883a31
2021-12-09 04:56:30,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@5e1a5f
2021-12-09 04:56:30,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@5e1a5f
2021-12-09 04:56:30,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5e1a5f
2021-12-09 04:56:30,181 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9fe720a
2021-12-09 04:56:30,181 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9fe720a
2021-12-09 04:56:30,182 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@11f23203
2021-12-09 04:56:30,182 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@11f23203
2021-12-09 04:56:30,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@4052b19f
2021-12-09 04:56:30,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@4052b19f
2021-12-09 04:56:30,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31efacad
2021-12-09 04:56:30,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31da0434
2021-12-09 04:56:30,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@fb5aeed
2021-12-09 04:56:30,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@fb5aeed
2021-12-09 04:56:30,185 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@670342a2
2021-12-09 04:56:30,185 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@670342a2
2021-12-09 04:56:30,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@443cdaa4
2021-12-09 04:56:30,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@443cdaa4
2021-12-09 04:56:30,187 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@67e0fd6d
2021-12-09 04:56:30,187 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@67e0fd6d
2021-12-09 04:56:30,187 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4c319d52
2021-12-09 04:56:30,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4c319d52
2021-12-09 04:56:30,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@b2c4a8b
2021-12-09 04:56:30,188 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@b2c4a8b
2021-12-09 04:56:30,189 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4a6c0f38
2021-12-09 04:56:30,189 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4a6c0f38
2021-12-09 04:56:30,190 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18709cb2
2021-12-09 04:56:30,190 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18709cb2
2021-12-09 04:56:30,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@be164d8
2021-12-09 04:56:30,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@be164d8
2021-12-09 04:56:30,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@6070775e
2021-12-09 04:56:30,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6070775e
2021-12-09 04:56:30,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@36f6e521
2021-12-09 04:56:30,193 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@36f6e521
2021-12-09 04:56:30,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@191c6e13
2021-12-09 04:56:30,194 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@191c6e13
2021-12-09 04:56:30,195 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@191c6e13
2021-12-09 04:56:30,195 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@12fcb2c3
2021-12-09 04:56:30,196 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@2f9b21d6
2021-12-09 04:56:30,196 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2f9b21d6
2021-12-09 04:56:30,196 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2f9b21d6
2021-12-09 04:56:30,197 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@740a0d5e
2021-12-09 04:56:30,197 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1e30db85
2021-12-09 04:56:30,198 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@78c262ba
2021-12-09 04:56:30,198 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@78c262ba
2021-12-09 04:56:30,198 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@5db948c9
2021-12-09 04:56:30,198 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5db948c9
2021-12-09 04:56:30,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4ae2e781
2021-12-09 04:56:30,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4ae2e781
2021-12-09 04:56:30,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@1e00bfe2
2021-12-09 04:56:30,199 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e00bfe2
2021-12-09 04:56:30,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15214920
2021-12-09 04:56:30,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15214920
2021-12-09 04:56:30,200 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5d9618f2
2021-12-09 04:56:30,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@29962b2f
2021-12-09 04:56:30,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@29962b2f
2021-12-09 04:56:30,201 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@29962b2f
2021-12-09 04:56:30,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77524ca7
2021-12-09 04:56:30,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77524ca7
2021-12-09 04:56:30,202 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77524ca7
2021-12-09 04:56:30,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@14b275bd
2021-12-09 04:56:30,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@5c313224
2021-12-09 04:56:30,203 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@527a8665
2021-12-09 04:56:30,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@527a8665
2021-12-09 04:56:30,204 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@527a8665
2021-12-09 04:56:30,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7f8a9454
2021-12-09 04:56:30,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7f8a9454
2021-12-09 04:56:30,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7f8a9454
2021-12-09 04:56:30,205 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@47044f7d
2021-12-09 04:56:30,206 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3b435211
2021-12-09 04:56:30,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@5eed6dfb
2021-12-09 04:56:30,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5eed6dfb
2021-12-09 04:56:30,207 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@13250132
2021-12-09 04:56:30,208 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@646cd766
2021-12-09 04:56:30,208 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@646cd766
2021-12-09 04:56:30,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@5db3d57c
2021-12-09 04:56:30,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5db3d57c
2021-12-09 04:56:30,209 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a84788f
2021-12-09 04:56:30,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3c7279a5
2021-12-09 04:56:30,210 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@6ef2f7ad
2021-12-09 04:56:30,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@7abeabe9
2021-12-09 04:56:30,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7abeabe9
2021-12-09 04:56:30,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@250d440
2021-12-09 04:56:30,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76c86567
2021-12-09 04:56:30,212 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e5efcab
2021-12-09 04:56:30,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 04:56:30,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d2fb82
2021-12-09 04:56:30,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@34045582
2021-12-09 04:56:30,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3db65c0d
2021-12-09 04:56:30,213 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 04:56:30,237 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:56:30,506 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:56:30,523 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:56:30,569 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@fcf9525] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@300bb303]
2021-12-09 04:56:30,698 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@fcf9525] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6df2a206]
2021-12-09 04:56:30,959 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:56:30,963 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6df2a206] for TypeConfiguration
2021-12-09 04:56:30,965 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:56:31,501 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:56:31,698 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:56:31,947 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:56:31,961 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:56:31,974 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.542 seconds (JVM running for 4.063)
2021-12-09 04:56:33,183 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 04:56:33,183 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 04:56:33,184 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 04:56:33,214 [http-nio-5050-exec-2] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:56:33,248 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:56:33,264 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:56:33,275 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:56:33,276 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:56:33,276 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:56:33,298 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy104.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:56:34,393 [http-nio-5050-exec-4] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:56:34,395 [http-nio-5050-exec-4] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:56:34,396 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:56:34,397 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:56:34,397 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:56:34,398 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:56:34,402 [http-nio-5050-exec-4] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy104.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:56:35,263 [http-nio-5050-exec-6] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:56:35,264 [http-nio-5050-exec-6] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:56:35,265 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:56:35,266 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:56:35,267 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:56:35,267 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:56:35,270 [http-nio-5050-exec-6] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy104.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:56:41,047 [http-nio-5050-exec-9] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:56:41,048 [http-nio-5050-exec-9] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:56:41,049 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:56:41,049 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:56:41,050 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:56:41,050 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:56:41,051 [http-nio-5050-exec-9] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy104.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:57:53,776 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:57:53,776 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6df2a206] for TypeConfiguration
2021-12-09 04:57:53,777 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5d7d2c6f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6df2a206]
2021-12-09 04:57:53,779 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:57:53,782 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:57:57,669 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 31049 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:57:57,671 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:57:57,671 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:57:58,058 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:57:58,059 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:57:58,066 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:57:58,187 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:57:58,187 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:57:58,204 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:57:58,205 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:57:58,207 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:57:58,214 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:57:58,226 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:57:58,229 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:57:58,229 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:57:58,234 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:57:58,234 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:57:58,235 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:57:58,236 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:57:58,236 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:57:58,241 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:57:58,241 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:57:58,259 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 04:57:58,670 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:57:58,677 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:57:58,677 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:57:58,677 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:57:58,766 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:57:58,766 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1066 ms
2021-12-09 04:57:58,897 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:57:58,944 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:57:59,037 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:57:59,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 04:57:59,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 04:57:59,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3086f480
2021-12-09 04:57:59,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7fbf26fc
2021-12-09 04:57:59,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4fecf308
2021-12-09 04:57:59,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f9dda71
2021-12-09 04:57:59,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 04:57:59,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 04:57:59,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@616a06e3
2021-12-09 04:57:59,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 04:57:59,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 04:57:59,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57fdb8a4
2021-12-09 04:57:59,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 04:57:59,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 04:57:59,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@21a46ff1
2021-12-09 04:57:59,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 04:57:59,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 04:57:59,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5efe47fd
2021-12-09 04:57:59,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 04:57:59,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 04:57:59,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@27a6fef2
2021-12-09 04:57:59,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 04:57:59,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 04:57:59,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@31b0f02
2021-12-09 04:57:59,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 04:57:59,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 04:57:59,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@149274cb
2021-12-09 04:57:59,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@101bdd1c
2021-12-09 04:57:59,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@101bdd1c
2021-12-09 04:57:59,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3dc68586
2021-12-09 04:57:59,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3dc68586
2021-12-09 04:57:59,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@31da0434
2021-12-09 04:57:59,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@31da0434
2021-12-09 04:57:59,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c88191b
2021-12-09 04:57:59,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73893ec1
2021-12-09 04:57:59,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@d5e575c
2021-12-09 04:57:59,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@d5e575c
2021-12-09 04:57:59,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@3b41e1bf
2021-12-09 04:57:59,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3b41e1bf
2021-12-09 04:57:59,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@21390938
2021-12-09 04:57:59,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@21390938
2021-12-09 04:57:59,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@72fbf94d
2021-12-09 04:57:59,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@72fbf94d
2021-12-09 04:57:59,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7f2c57fe
2021-12-09 04:57:59,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7f2c57fe
2021-12-09 04:57:59,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f8a02cf
2021-12-09 04:57:59,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f8a02cf
2021-12-09 04:57:59,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a90e2c1
2021-12-09 04:57:59,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a90e2c1
2021-12-09 04:57:59,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1b24ea2a
2021-12-09 04:57:59,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1b24ea2a
2021-12-09 04:57:59,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47df5041
2021-12-09 04:57:59,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47df5041
2021-12-09 04:57:59,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@60bf494c
2021-12-09 04:57:59,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60bf494c
2021-12-09 04:57:59,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@45d56062
2021-12-09 04:57:59,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45d56062
2021-12-09 04:57:59,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@77cca767
2021-12-09 04:57:59,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77cca767
2021-12-09 04:57:59,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77cca767
2021-12-09 04:57:59,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@31a136a6
2021-12-09 04:57:59,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 04:57:59,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 04:57:59,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29013ef2
2021-12-09 04:57:59,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19827608
2021-12-09 04:57:59,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7d2c9361
2021-12-09 04:57:59,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@296edc75
2021-12-09 04:57:59,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@296edc75
2021-12-09 04:57:59,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@339f3a55
2021-12-09 04:57:59,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@339f3a55
2021-12-09 04:57:59,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4702e7a5
2021-12-09 04:57:59,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4702e7a5
2021-12-09 04:57:59,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@784d9bc
2021-12-09 04:57:59,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@784d9bc
2021-12-09 04:57:59,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3554bdc0
2021-12-09 04:57:59,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3554bdc0
2021-12-09 04:57:59,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42fc4ac4
2021-12-09 04:57:59,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@11df2829
2021-12-09 04:57:59,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@11df2829
2021-12-09 04:57:59,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@11df2829
2021-12-09 04:57:59,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 04:57:59,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 04:57:59,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4ed18798
2021-12-09 04:57:59,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@8840c98
2021-12-09 04:57:59,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@7ab2a07e
2021-12-09 04:57:59,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 04:57:59,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 04:57:59,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6f85ee02
2021-12-09 04:57:59,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 04:57:59,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 04:57:59,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b435211
2021-12-09 04:57:59,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@6b162ecc
2021-12-09 04:57:59,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@69ed5ea2
2021-12-09 04:57:59,086 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@46a123e4
2021-12-09 04:57:59,086 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46a123e4
2021-12-09 04:57:59,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a296107
2021-12-09 04:57:59,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@764a3e5d
2021-12-09 04:57:59,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@764a3e5d
2021-12-09 04:57:59,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3c7279a5
2021-12-09 04:57:59,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c7279a5
2021-12-09 04:57:59,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18dcb8a7
2021-12-09 04:57:59,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@72ecbcb3
2021-12-09 04:57:59,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@6df4af5
2021-12-09 04:57:59,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1d2fb82
2021-12-09 04:57:59,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d2fb82
2021-12-09 04:57:59,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 04:57:59,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:57:59,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:57:59,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:57:59,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:57:59,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 04:57:59,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 04:57:59,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 04:57:59,125 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:57:59,429 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:57:59,441 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:57:59,500 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d65fcf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3b021664]
2021-12-09 04:57:59,702 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d65fcf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@727453a3]
2021-12-09 04:57:59,959 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:57:59,964 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@727453a3] for TypeConfiguration
2021-12-09 04:57:59,965 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:58:00,521 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:58:00,717 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:58:00,929 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:58:00,940 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:58:00,950 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.486 seconds (JVM running for 4.027)
2021-12-09 04:58:03,545 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 04:58:03,546 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 04:58:03,547 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 04:58:03,575 [http-nio-5050-exec-2] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:58:03,606 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:58:03,620 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:58:03,629 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:58:03,630 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:58:03,630 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:58:03,648 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 04:58:50,125 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:58:50,125 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@727453a3] for TypeConfiguration
2021-12-09 04:58:50,125 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@13af8642] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@727453a3]
2021-12-09 04:58:50,127 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 04:58:50,130 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 04:58:53,897 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 31140 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 04:58:53,898 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 04:58:53,898 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 04:58:54,250 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:58:54,251 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:58:54,257 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 04:58:54,381 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:58:54,381 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:58:54,399 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:58:54,400 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:58:54,401 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:58:54,408 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 04:58:54,420 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 04:58:54,424 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:58:54,424 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 04:58:54,428 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:58:54,429 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:58:54,429 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:58:54,430 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 04:58:54,431 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 04:58:54,436 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 04:58:54,436 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 04:58:54,453 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2021-12-09 04:58:54,855 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 04:58:54,862 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 04:58:54,862 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 04:58:54,862 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 04:58:54,949 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 04:58:54,949 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1023 ms
2021-12-09 04:58:55,086 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 04:58:55,157 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 04:58:55,279 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 04:58:55,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@126f8f24
2021-12-09 04:58:55,301 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@126f8f24
2021-12-09 04:58:55,301 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@126f8f24
2021-12-09 04:58:55,301 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@11c78080
2021-12-09 04:58:55,302 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6282b9f5
2021-12-09 04:58:55,302 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@58278366
2021-12-09 04:58:55,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@42297bdf
2021-12-09 04:58:55,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@42297bdf
2021-12-09 04:58:55,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@42297bdf
2021-12-09 04:58:55,304 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@17222c11
2021-12-09 04:58:55,304 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@17222c11
2021-12-09 04:58:55,304 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@17222c11
2021-12-09 04:58:55,305 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@11b5f4e2
2021-12-09 04:58:55,305 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@11b5f4e2
2021-12-09 04:58:55,305 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@11b5f4e2
2021-12-09 04:58:55,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@739831a4
2021-12-09 04:58:55,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@739831a4
2021-12-09 04:58:55,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@739831a4
2021-12-09 04:58:55,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7fe8c7db
2021-12-09 04:58:55,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@7fe8c7db
2021-12-09 04:58:55,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7fe8c7db
2021-12-09 04:58:55,308 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@19ae2ee5
2021-12-09 04:58:55,308 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@19ae2ee5
2021-12-09 04:58:55,308 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@19ae2ee5
2021-12-09 04:58:55,309 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@118acf70
2021-12-09 04:58:55,309 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@118acf70
2021-12-09 04:58:55,309 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@118acf70
2021-12-09 04:58:55,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e91af20
2021-12-09 04:58:55,310 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e91af20
2021-12-09 04:58:55,311 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@60dc1a4e
2021-12-09 04:58:55,311 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@60dc1a4e
2021-12-09 04:58:55,311 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@6e24ce51
2021-12-09 04:58:55,312 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@6e24ce51
2021-12-09 04:58:55,312 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74960e9d
2021-12-09 04:58:55,312 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@37af24cb
2021-12-09 04:58:55,313 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@7742a45c
2021-12-09 04:58:55,314 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7742a45c
2021-12-09 04:58:55,315 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@619c93ca
2021-12-09 04:58:55,315 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@619c93ca
2021-12-09 04:58:55,316 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@1129829c
2021-12-09 04:58:55,316 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1129829c
2021-12-09 04:58:55,317 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6839203b
2021-12-09 04:58:55,317 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6839203b
2021-12-09 04:58:55,317 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43935e9c
2021-12-09 04:58:55,318 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43935e9c
2021-12-09 04:58:55,318 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@26d5a317
2021-12-09 04:58:55,318 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@26d5a317
2021-12-09 04:58:55,319 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@89caf47
2021-12-09 04:58:55,319 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@89caf47
2021-12-09 04:58:55,320 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5df6163a
2021-12-09 04:58:55,320 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5df6163a
2021-12-09 04:58:55,321 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a0ea492
2021-12-09 04:58:55,321 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2a0ea492
2021-12-09 04:58:55,323 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@47a4eee2
2021-12-09 04:58:55,323 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@47a4eee2
2021-12-09 04:58:55,324 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@4026461d
2021-12-09 04:58:55,324 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4026461d
2021-12-09 04:58:55,325 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b195203
2021-12-09 04:58:55,325 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b195203
2021-12-09 04:58:55,325 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b195203
2021-12-09 04:58:55,326 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30a9e3db
2021-12-09 04:58:55,326 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@265c1a7c
2021-12-09 04:58:55,326 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@265c1a7c
2021-12-09 04:58:55,327 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@265c1a7c
2021-12-09 04:58:55,327 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@cc9ef8d
2021-12-09 04:58:55,328 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@329dc214
2021-12-09 04:58:55,328 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@357c9bd9
2021-12-09 04:58:55,328 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@357c9bd9
2021-12-09 04:58:55,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@2dd63e3
2021-12-09 04:58:55,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2dd63e3
2021-12-09 04:58:55,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6a2d867d
2021-12-09 04:58:55,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6a2d867d
2021-12-09 04:58:55,330 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3a0aaaf0
2021-12-09 04:58:55,330 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a0aaaf0
2021-12-09 04:58:55,331 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3a3b10f4
2021-12-09 04:58:55,331 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3a3b10f4
2021-12-09 04:58:55,331 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@20a24edf
2021-12-09 04:58:55,332 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@18e4674d
2021-12-09 04:58:55,332 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@18e4674d
2021-12-09 04:58:55,332 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@18e4674d
2021-12-09 04:58:55,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b03cbad
2021-12-09 04:58:55,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b03cbad
2021-12-09 04:58:55,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b03cbad
2021-12-09 04:58:55,334 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@626b639e
2021-12-09 04:58:55,334 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@437c4b25
2021-12-09 04:58:55,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@679d0be8
2021-12-09 04:58:55,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@679d0be8
2021-12-09 04:58:55,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@679d0be8
2021-12-09 04:58:55,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@361cd35c
2021-12-09 04:58:55,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@361cd35c
2021-12-09 04:58:55,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@361cd35c
2021-12-09 04:58:55,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@3b4086c1
2021-12-09 04:58:55,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@56a4abd0
2021-12-09 04:58:55,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@44bc2449
2021-12-09 04:58:55,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@44bc2449
2021-12-09 04:58:55,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f129467
2021-12-09 04:58:55,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@6c742b84
2021-12-09 04:58:55,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6c742b84
2021-12-09 04:58:55,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@2bebd114
2021-12-09 04:58:55,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bebd114
2021-12-09 04:58:55,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6dcab9d9
2021-12-09 04:58:55,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4a50c746
2021-12-09 04:58:55,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@26e8ff8c
2021-12-09 04:58:55,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@34045582
2021-12-09 04:58:55,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34045582
2021-12-09 04:58:55,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 04:58:55,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 04:58:55,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 04:58:55,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 04:58:55,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 04:58:55,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 04:58:55,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 04:58:55,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d289d3f
2021-12-09 04:58:55,369 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 04:58:55,615 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 04:58:55,628 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 04:58:55,672 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b021664] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f59da34]
2021-12-09 04:58:55,794 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b021664] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@67dc6b48]
2021-12-09 04:58:56,016 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 04:58:56,019 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@67dc6b48] for TypeConfiguration
2021-12-09 04:58:56,020 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 04:58:56,442 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 04:58:56,592 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 04:58:56,756 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 04:58:56,761 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 04:58:56,770 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.078 seconds (JVM running for 3.541)
2021-12-09 04:59:01,907 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 04:59:01,907 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 04:59:01,908 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 04:59:01,933 [http-nio-5050-exec-1] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 04:59:01,953 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 04:59:01,964 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 04:59:01,972 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 04:59:01,973 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 04:59:01,973 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 04:59:01,997 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:00:16,310 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:00:16,310 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@67dc6b48] for TypeConfiguration
2021-12-09 05:00:16,311 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45808709] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@67dc6b48]
2021-12-09 05:00:16,312 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:00:16,316 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:00:19,015 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 31256 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:00:19,017 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:00:19,017 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:00:19,385 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:00:19,385 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:00:19,392 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:00:19,509 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:00:19,509 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:00:19,526 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:00:19,528 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:00:19,529 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:00:19,536 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:00:19,548 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:00:19,551 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:00:19,552 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:00:19,556 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:00:19,556 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:00:19,557 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:00:19,558 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:00:19,558 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:00:19,563 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:00:19,564 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:00:19,581 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot register bean definition [Root bean: class [org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration] for bean 'topicRepository': There is already [Root bean: class [org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration] bound.
2021-12-09 05:00:19,589 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 05:00:19,603 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter             - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'topicRepository', defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration, could not be registered. A bean with that name has already been defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableElasticsearchRepositories declared on ElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2021-12-09 05:00:26,229 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 31262 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:00:26,230 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:00:26,230 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:00:26,541 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:00:26,542 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:00:26,547 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 3 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:00:26,657 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:00:26,657 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:00:26,672 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:00:26,673 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:00:26,674 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:00:26,681 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:00:26,692 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 34 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:00:26,695 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:00:26,695 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:00:26,699 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:00:26,700 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:00:26,700 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:00:26,701 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:00:26,702 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:00:26,707 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:00:26,707 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:00:26,723 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:00:27,126 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:00:27,133 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:00:27,133 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:00:27,133 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:00:27,215 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:00:27,215 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 960 ms
2021-12-09 05:00:27,346 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:00:27,396 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:00:27,504 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:00:27,527 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 05:00:27,527 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 05:00:27,527 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@243bf087
2021-12-09 05:00:27,528 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@781aff8b
2021-12-09 05:00:27,528 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4962b41e
2021-12-09 05:00:27,529 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c11d32
2021-12-09 05:00:27,530 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 05:00:27,530 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 05:00:27,531 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@475f5672
2021-12-09 05:00:27,532 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 05:00:27,532 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 05:00:27,532 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@44598ef7
2021-12-09 05:00:27,533 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 05:00:27,533 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 05:00:27,533 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ebc955b
2021-12-09 05:00:27,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@3830f918
2021-12-09 05:00:27,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@3830f918
2021-12-09 05:00:27,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3830f918
2021-12-09 05:00:27,535 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@38883a31
2021-12-09 05:00:27,535 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@38883a31
2021-12-09 05:00:27,535 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38883a31
2021-12-09 05:00:27,536 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 05:00:27,536 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 05:00:27,536 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5e1a5f
2021-12-09 05:00:27,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 05:00:27,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 05:00:27,538 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9fe720a
2021-12-09 05:00:27,539 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11f23203
2021-12-09 05:00:27,539 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11f23203
2021-12-09 05:00:27,540 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4052b19f
2021-12-09 05:00:27,540 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4052b19f
2021-12-09 05:00:27,541 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@7d9c45ee
2021-12-09 05:00:27,541 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@7d9c45ee
2021-12-09 05:00:27,541 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5d124d29
2021-12-09 05:00:27,542 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@fb5aeed
2021-12-09 05:00:27,542 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@670342a2
2021-12-09 05:00:27,542 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@670342a2
2021-12-09 05:00:27,543 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@443cdaa4
2021-12-09 05:00:27,544 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@443cdaa4
2021-12-09 05:00:27,545 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@67e0fd6d
2021-12-09 05:00:27,545 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@67e0fd6d
2021-12-09 05:00:27,546 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c319d52
2021-12-09 05:00:27,546 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4c319d52
2021-12-09 05:00:27,546 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@b2c4a8b
2021-12-09 05:00:27,547 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@b2c4a8b
2021-12-09 05:00:27,547 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4a6c0f38
2021-12-09 05:00:27,547 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4a6c0f38
2021-12-09 05:00:27,548 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18709cb2
2021-12-09 05:00:27,548 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18709cb2
2021-12-09 05:00:27,549 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@be164d8
2021-12-09 05:00:27,549 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@be164d8
2021-12-09 05:00:27,549 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@586495f1
2021-12-09 05:00:27,550 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@586495f1
2021-12-09 05:00:27,552 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@168142da
2021-12-09 05:00:27,552 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@168142da
2021-12-09 05:00:27,553 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@6de004f1
2021-12-09 05:00:27,553 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6de004f1
2021-12-09 05:00:27,555 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@517704
2021-12-09 05:00:27,555 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@517704
2021-12-09 05:00:27,555 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@517704
2021-12-09 05:00:27,556 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23444a36
2021-12-09 05:00:27,557 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 05:00:27,557 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 05:00:27,557 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@740a0d5e
2021-12-09 05:00:27,558 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e30db85
2021-12-09 05:00:27,559 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@78c262ba
2021-12-09 05:00:27,560 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@5db948c9
2021-12-09 05:00:27,560 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5db948c9
2021-12-09 05:00:27,560 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@4ae2e781
2021-12-09 05:00:27,561 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4ae2e781
2021-12-09 05:00:27,561 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e00bfe2
2021-12-09 05:00:27,561 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e00bfe2
2021-12-09 05:00:27,562 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@15214920
2021-12-09 05:00:27,562 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15214920
2021-12-09 05:00:27,563 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58687fb7
2021-12-09 05:00:27,563 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58687fb7
2021-12-09 05:00:27,564 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@525647f3
2021-12-09 05:00:27,565 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 05:00:27,565 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 05:00:27,565 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@77524ca7
2021-12-09 05:00:27,566 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 05:00:27,566 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 05:00:27,566 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14b275bd
2021-12-09 05:00:27,567 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@5d71b500
2021-12-09 05:00:27,568 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@527a8665
2021-12-09 05:00:27,569 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 05:00:27,569 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 05:00:27,569 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@7f8a9454
2021-12-09 05:00:27,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 05:00:27,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 05:00:27,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e599100
2021-12-09 05:00:27,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@4a642e4b
2021-12-09 05:00:27,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@33d7765a
2021-12-09 05:00:27,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@7d3691e1
2021-12-09 05:00:27,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d3691e1
2021-12-09 05:00:27,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7558c24b
2021-12-09 05:00:27,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@b30a50d
2021-12-09 05:00:27,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b30a50d
2021-12-09 05:00:27,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@65eb3597
2021-12-09 05:00:27,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65eb3597
2021-12-09 05:00:27,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@374c40ba
2021-12-09 05:00:27,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f882465
2021-12-09 05:00:27,577 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@7f0f84d4
2021-12-09 05:00:27,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@5a4dda2
2021-12-09 05:00:27,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a4dda2
2021-12-09 05:00:27,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1edccfd4
2021-12-09 05:00:27,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@8c43966
2021-12-09 05:00:27,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1efac5b9
2021-12-09 05:00:27,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11a3a45f
2021-12-09 05:00:27,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 05:00:27,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 05:00:27,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 05:00:27,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 05:00:27,617 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:00:27,897 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:00:27,908 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:00:27,956 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dbaa33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@15d65fcf]
2021-12-09 05:00:28,088 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dbaa33] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3386ed8]
2021-12-09 05:00:28,362 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:00:28,366 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3386ed8] for TypeConfiguration
2021-12-09 05:00:28,368 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:00:28,921 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:00:29,109 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:00:29,345 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:00:29,358 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:00:29,373 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.353 seconds (JVM running for 3.811)
2021-12-09 05:00:31,865 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:00:31,865 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:00:31,866 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 05:00:31,900 [http-nio-5050-exec-2] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 05:00:31,927 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:31,938 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 05:00:31,945 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:31,946 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 05:00:31,946 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 05:00:31,965 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:00:35,006 [http-nio-5050-exec-4] INFO  t.g.website.controller.UserController              - Id entered: 3
2021-12-09 05:00:35,007 [http-nio-5050-exec-4] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:35,008 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:00:35,008 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:35,009 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 05:00:35,009 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 05:00:35,011 [http-nio-5050-exec-4] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:00:37,105 [http-nio-5050-exec-6] INFO  t.g.website.controller.UserController              - Id entered: 5
2021-12-09 05:00:37,107 [http-nio-5050-exec-6] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:37,107 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [5]
2021-12-09 05:00:37,108 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:37,108 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-09 04:36:37.997]
2021-12-09 05:00:37,108 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [Lustav@gmfail.chom]
2021-12-09 05:00:37,108 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_0_] : [INTEGER]) - [1]
2021-12-09 05:00:37,109 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_0_] : [VARCHAR]) - [testd6ffdferjteffds]
2021-12-09 05:00:37,109 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_0_] : [VARCHAR]) - [test5dffefdrthjeffds]
2021-12-09 05:00:40,884 [http-nio-5050-exec-7] INFO  t.g.website.controller.UserController              - Id entered: 6
2021-12-09 05:00:40,886 [http-nio-5050-exec-7] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:40,886 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [6]
2021-12-09 05:00:43,476 [http-nio-5050-exec-8] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 05:00:43,478 [http-nio-5050-exec-8] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:43,478 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 05:00:43,479 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:43,480 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 05:00:43,480 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 05:00:43,482 [http-nio-5050-exec-8] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:00:45,368 [http-nio-5050-exec-10] INFO  t.g.website.controller.UserController              - Id entered: 2
2021-12-09 05:00:45,370 [http-nio-5050-exec-10] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:45,370 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [2]
2021-12-09 05:00:47,184 [http-nio-5050-exec-1] INFO  t.g.website.controller.UserController              - Id entered: 3
2021-12-09 05:00:47,186 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:47,186 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:00:47,187 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:47,187 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 05:00:47,187 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 05:00:47,189 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:00:48,643 [http-nio-5050-exec-2] INFO  t.g.website.controller.UserController              - Id entered: 4
2021-12-09 05:00:48,646 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:48,647 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [4]
2021-12-09 05:00:48,648 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:48,649 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-09 03:08:07.501]
2021-12-09 05:00:48,649 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [Lustav@gmail.chom]
2021-12-09 05:00:48,651 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:00:49,734 [http-nio-5050-exec-5] INFO  t.g.website.controller.UserController              - Id entered: 5
2021-12-09 05:00:49,735 [http-nio-5050-exec-5] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:49,736 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [5]
2021-12-09 05:00:49,737 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:49,737 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-09 04:36:37.997]
2021-12-09 05:00:49,737 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [Lustav@gmfail.chom]
2021-12-09 05:00:49,737 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_0_] : [INTEGER]) - [1]
2021-12-09 05:00:49,737 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_0_] : [VARCHAR]) - [testd6ffdferjteffds]
2021-12-09 05:00:49,737 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_0_] : [VARCHAR]) - [test5dffefdrthjeffds]
2021-12-09 05:00:50,705 [http-nio-5050-exec-6] INFO  t.g.website.controller.UserController              - Id entered: 6
2021-12-09 05:00:50,707 [http-nio-5050-exec-6] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:50,707 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [6]
2021-12-09 05:00:51,853 [http-nio-5050-exec-7] INFO  t.g.website.controller.UserController              - Id entered: 6
2021-12-09 05:00:51,854 [http-nio-5050-exec-7] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:51,854 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [6]
2021-12-09 05:00:52,713 [http-nio-5050-exec-8] INFO  t.g.website.controller.UserController              - Id entered: 7
2021-12-09 05:00:52,714 [http-nio-5050-exec-8] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:52,714 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [7]
2021-12-09 05:00:53,537 [http-nio-5050-exec-9] INFO  t.g.website.controller.UserController              - Id entered: 8
2021-12-09 05:00:53,539 [http-nio-5050-exec-9] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:53,539 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [8]
2021-12-09 05:00:55,283 [http-nio-5050-exec-10] INFO  t.g.website.controller.UserController              - Id entered: 1
2021-12-09 05:00:55,284 [http-nio-5050-exec-10] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:55,285 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 05:00:55,285 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:55,285 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:52:27.578]
2021-12-09 05:00:55,286 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [testfgffeffffdd]
2021-12-09 05:00:55,287 [http-nio-5050-exec-10] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at jdk.internal.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:00:56,868 [http-nio-5050-exec-3] INFO  t.g.website.controller.UserController              - Id entered: 2
2021-12-09 05:00:56,869 [http-nio-5050-exec-3] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:56,869 [http-nio-5050-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [2]
2021-12-09 05:00:57,961 [http-nio-5050-exec-2] INFO  t.g.website.controller.UserController              - Id entered: 3
2021-12-09 05:00:57,962 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:57,962 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:00:57,963 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:57,963 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-08 21:53:04.278]
2021-12-09 05:00:57,964 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [Lustav@gmail.com]
2021-12-09 05:00:57,965 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at jdk.internal.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:00:58,904 [http-nio-5050-exec-5] INFO  t.g.website.controller.UserController              - Id entered: 4
2021-12-09 05:00:58,905 [http-nio-5050-exec-5] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:58,905 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [4]
2021-12-09 05:00:58,906 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:58,906 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-09 03:08:07.501]
2021-12-09 05:00:58,906 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [Lustav@gmail.chom]
2021-12-09 05:00:58,908 [http-nio-5050-exec-5] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: For input string: "eelmdert"; nested exception is java.lang.NumberFormatException: For input string: "eelmdert"] with root cause
java.lang.NumberFormatException: For input string: "eelmdert"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:549)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getDouble(MysqlTextValueDecoder.java:249)
	at com.mysql.cj.result.AbstractNumericValueFactory.createFromBytes(AbstractNumericValueFactory.java:56)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:143)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:135)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1316)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:822)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:843)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.IntegerTypeDescriptor$2.doExtract(IntegerTypeDescriptor.java:62)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3131)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:342)
	at org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:269)
	at org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:102)
	at org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:288)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractRows(ResultSetProcessorImpl.java:157)
	at org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:94)
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:105)
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:285)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:4437)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4427)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:576)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:332)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:110)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1186)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1175)
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:193)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2786)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2723)
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2767)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3322)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289)
	at jdk.internal.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at com.sun.proxy.$Proxy92.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:310)
	at jdk.internal.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:529)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:599)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:163)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy105.findById(Unknown Source)
	at tech.goodquestion.website.service.UserServiceImpl.getUserById(UserServiceImpl.java:29)
	at tech.goodquestion.website.controller.UserController.getUserById(UserController.java:42)
	at jdk.internal.reflect.GeneratedMethodAccessor66.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:00:59,874 [http-nio-5050-exec-7] INFO  t.g.website.controller.UserController              - Id entered: 5
2021-12-09 05:00:59,876 [http-nio-5050-exec-7] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:00:59,876 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [5]
2021-12-09 05:00:59,877 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_0_] : [INTEGER]) - [0]
2021-12-09 05:00:59,877 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_0_] : [TIMESTAMP]) - [2021-12-09 04:36:37.997]
2021-12-09 05:00:59,877 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_0_] : [VARCHAR]) - [Lustav@gmfail.chom]
2021-12-09 05:00:59,877 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_0_] : [INTEGER]) - [1]
2021-12-09 05:00:59,877 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_0_] : [VARCHAR]) - [testd6ffdferjteffds]
2021-12-09 05:00:59,877 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_0_] : [VARCHAR]) - [test5dffefdrthjeffds]
2021-12-09 05:01:00,800 [http-nio-5050-exec-8] INFO  t.g.website.controller.UserController              - Id entered: 6
2021-12-09 05:01:00,801 [http-nio-5050-exec-8] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:01:00,801 [http-nio-5050-exec-8] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [6]
2021-12-09 05:01:02,740 [http-nio-5050-exec-9] INFO  t.g.website.controller.UserController              - Id entered: 7
2021-12-09 05:01:02,741 [http-nio-5050-exec-9] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:01:02,741 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [7]
2021-12-09 05:01:03,628 [http-nio-5050-exec-10] INFO  t.g.website.controller.UserController              - Id entered: 8
2021-12-09 05:01:03,629 [http-nio-5050-exec-10] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:01:03,629 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [8]
2021-12-09 05:01:04,626 [http-nio-5050-exec-1] INFO  t.g.website.controller.UserController              - Id entered: 9
2021-12-09 05:01:04,627 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:01:04,628 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [9]
2021-12-09 05:01:06,941 [http-nio-5050-exec-3] INFO  t.g.website.controller.UserController              - Id entered: 7
2021-12-09 05:01:06,943 [http-nio-5050-exec-3] DEBUG org.hibernate.SQL                                  - select user0_.id_user as id_user1_3_0_, user0_.collected_points as collecte2_3_0_, user0_.created_at as created_3_3_0_, user0_.email as email4_3_0_, user0_.mobile as mobile5_3_0_, user0_.password as password6_3_0_, user0_.username as username7_3_0_ from user user0_ where user0_.id_user=?
2021-12-09 05:01:06,943 [http-nio-5050-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [7]
2021-12-09 05:01:28,941 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:01:28,941 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 05:01:31,767 [http-nio-5050-exec-4] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:01:31,768 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [2]
2021-12-09 05:01:34,197 [http-nio-5050-exec-5] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:01:34,198 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:02:06,428 [http-nio-5050-exec-6] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:02:06,429 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:02:06,430 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [5]
2021-12-09 05:02:06,430 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 05:02:06,430 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dffege]
2021-12-09 05:02:06,430 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([descript4_2_0_] : [VARCHAR]) - [werrewwr]
2021-12-09 05:02:06,431 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user6_2_0_] : [BIGINT]) - [5]
2021-12-09 05:02:06,431 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote5_2_0_] : [INTEGER]) - [4]
2021-12-09 05:02:06,431 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 05:02:06,431 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-09 04:36:37.997]
2021-12-09 05:02:06,431 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmfail.chom]
2021-12-09 05:02:06,431 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [INTEGER]) - [1]
2021-12-09 05:02:06,431 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6ffdferjteffds]
2021-12-09 05:02:06,431 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dffefdrthjeffds]
2021-12-09 05:02:18,204 [http-nio-5050-exec-9] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:02:18,205 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:02:18,207 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [5]
2021-12-09 05:02:18,207 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 05:02:18,207 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dffege]
2021-12-09 05:02:18,207 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([descript4_2_0_] : [VARCHAR]) - [werrewwr]
2021-12-09 05:02:18,207 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user6_2_0_] : [BIGINT]) - [5]
2021-12-09 05:02:18,207 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote5_2_0_] : [INTEGER]) - [4]
2021-12-09 05:02:18,207 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 05:02:18,207 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-09 04:36:37.997]
2021-12-09 05:02:18,207 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmfail.chom]
2021-12-09 05:02:18,208 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [INTEGER]) - [1]
2021-12-09 05:02:18,208 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6ffdferjteffds]
2021-12-09 05:02:18,208 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dffefdrthjeffds]
2021-12-09 05:02:18,237 [http-nio-5050-exec-9] DEBUG org.hibernate.SQL                                  - delete from topic where id_topic=?
2021-12-09 05:02:18,237 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:02:23,159 [http-nio-5050-exec-10] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:02:23,160 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:02:24,170 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:02:24,170 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:02:24,356 [http-nio-5050-exec-3] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:02:24,356 [http-nio-5050-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:14:39,644 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:14:39,645 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3386ed8] for TypeConfiguration
2021-12-09 05:14:39,645 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@437c966d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3386ed8]
2021-12-09 05:14:39,650 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:14:39,653 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:15:42,422 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 32370 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:15:42,424 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:15:42,424 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:15:42,831 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:15:42,831 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:15:42,837 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 3 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:15:42,955 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:15:42,955 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:15:42,973 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:15:42,974 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:15:42,976 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:15:42,987 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:15:43,001 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 45 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:15:43,004 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:15:43,005 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:15:43,009 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:15:43,009 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:15:43,010 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:15:43,011 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:15:43,011 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:15:43,017 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:15:43,017 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:15:43,035 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:15:43,488 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:15:43,495 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:15:43,495 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:15:43,496 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:15:43,584 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:15:43,584 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1131 ms
2021-12-09 05:15:43,796 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:15:43,840 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:15:43,927 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:15:43,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@6282b9f5
2021-12-09 05:15:43,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@6282b9f5
2021-12-09 05:15:43,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6282b9f5
2021-12-09 05:15:43,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58278366
2021-12-09 05:15:43,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@552fee7a
2021-12-09 05:15:43,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@475f5672
2021-12-09 05:15:43,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@2db15f70
2021-12-09 05:15:43,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@2db15f70
2021-12-09 05:15:43,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db15f70
2021-12-09 05:15:43,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@6bcae9
2021-12-09 05:15:43,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@6bcae9
2021-12-09 05:15:43,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bcae9
2021-12-09 05:15:43,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@7e3236d
2021-12-09 05:15:43,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@7e3236d
2021-12-09 05:15:43,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7e3236d
2021-12-09 05:15:43,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@2dba05b1
2021-12-09 05:15:43,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@2dba05b1
2021-12-09 05:15:43,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2dba05b1
2021-12-09 05:15:43,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@44b940a2
2021-12-09 05:15:43,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@44b940a2
2021-12-09 05:15:43,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@44b940a2
2021-12-09 05:15:43,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@72557746
2021-12-09 05:15:43,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@72557746
2021-12-09 05:15:43,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72557746
2021-12-09 05:15:43,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6221b13b
2021-12-09 05:15:43,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6221b13b
2021-12-09 05:15:43,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6221b13b
2021-12-09 05:15:43,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@646427f7
2021-12-09 05:15:43,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@646427f7
2021-12-09 05:15:43,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@423ed3b5
2021-12-09 05:15:43,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@423ed3b5
2021-12-09 05:15:43,955 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@37af24cb
2021-12-09 05:15:43,955 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@37af24cb
2021-12-09 05:15:43,955 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2fc49538
2021-12-09 05:15:43,955 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7ca492d9
2021-12-09 05:15:43,956 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@486e9d1d
2021-12-09 05:15:43,956 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@486e9d1d
2021-12-09 05:15:43,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@1a531422
2021-12-09 05:15:43,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1a531422
2021-12-09 05:15:43,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@2d28fb02
2021-12-09 05:15:43,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2d28fb02
2021-12-09 05:15:43,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@101cf747
2021-12-09 05:15:43,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@101cf747
2021-12-09 05:15:43,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@70b6db83
2021-12-09 05:15:43,959 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@70b6db83
2021-12-09 05:15:43,959 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@370ef50b
2021-12-09 05:15:43,959 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@370ef50b
2021-12-09 05:15:43,960 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d313c8c
2021-12-09 05:15:43,960 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d313c8c
2021-12-09 05:15:43,960 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7e52a26b
2021-12-09 05:15:43,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7e52a26b
2021-12-09 05:15:43,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55846997
2021-12-09 05:15:43,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55846997
2021-12-09 05:15:43,963 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@6de004f1
2021-12-09 05:15:43,963 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6de004f1
2021-12-09 05:15:43,963 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@517704
2021-12-09 05:15:43,964 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@517704
2021-12-09 05:15:43,964 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@696b52bc
2021-12-09 05:15:43,964 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@696b52bc
2021-12-09 05:15:43,964 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@696b52bc
2021-12-09 05:15:43,965 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@740a0d5e
2021-12-09 05:15:43,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@14b528b6
2021-12-09 05:15:43,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14b528b6
2021-12-09 05:15:43,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14b528b6
2021-12-09 05:15:43,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fbe70d8
2021-12-09 05:15:43,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7aea704c
2021-12-09 05:15:43,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7d1c164a
2021-12-09 05:15:43,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d1c164a
2021-12-09 05:15:43,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@73bb1337
2021-12-09 05:15:43,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73bb1337
2021-12-09 05:15:43,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@426131d7
2021-12-09 05:15:43,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@426131d7
2021-12-09 05:15:43,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@49580ca8
2021-12-09 05:15:43,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49580ca8
2021-12-09 05:15:43,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b733ef7
2021-12-09 05:15:43,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b733ef7
2021-12-09 05:15:43,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77524ca7
2021-12-09 05:15:43,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5b29ab61
2021-12-09 05:15:43,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b29ab61
2021-12-09 05:15:43,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5b29ab61
2021-12-09 05:15:43,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@273fa9e
2021-12-09 05:15:43,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@273fa9e
2021-12-09 05:15:43,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@273fa9e
2021-12-09 05:15:43,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@1653b84e
2021-12-09 05:15:43,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@6c075e9d
2021-12-09 05:15:43,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@58a765ce
2021-12-09 05:15:43,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@58a765ce
2021-12-09 05:15:43,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@58a765ce
2021-12-09 05:15:43,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@56a4abd0
2021-12-09 05:15:43,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@56a4abd0
2021-12-09 05:15:43,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@56a4abd0
2021-12-09 05:15:43,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@269222ae
2021-12-09 05:15:43,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@7d3691e1
2021-12-09 05:15:43,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@2dff7085
2021-12-09 05:15:43,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2dff7085
2021-12-09 05:15:43,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b30a50d
2021-12-09 05:15:43,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@65eb3597
2021-12-09 05:15:43,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65eb3597
2021-12-09 05:15:43,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@4a50c746
2021-12-09 05:15:43,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4a50c746
2021-12-09 05:15:43,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22d477c2
2021-12-09 05:15:43,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@39832280
2021-12-09 05:15:43,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
2021-12-09 05:15:43,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@8c0a23f
2021-12-09 05:15:43,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@8c0a23f
2021-12-09 05:15:43,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@10f405ff
2021-12-09 05:15:43,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:15:43,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:15:43,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:15:43,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:15:43,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:15:43,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:15:43,979 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:15:44,005 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:15:44,302 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:15:44,311 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:15:44,351 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@79f1e22e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6903ed0e]
2021-12-09 05:15:44,487 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@79f1e22e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@37986daf]
2021-12-09 05:15:44,769 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:15:44,773 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@37986daf] for TypeConfiguration
2021-12-09 05:15:44,774 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:15:45,366 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:15:45,548 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:15:45,767 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:15:45,773 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:15:45,784 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.586 seconds (JVM running for 4.124)
2021-12-09 05:15:49,656 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:15:49,656 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:15:49,657 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 05:15:49,695 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:15:49,703 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:15:50,508 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:15:50,509 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:15:50,675 [http-nio-5050-exec-3] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:15:50,676 [http-nio-5050-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:15:55,101 [http-nio-5050-exec-4] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:15:55,101 [http-nio-5050-exec-4] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 05:16:02,519 [http-nio-5050-exec-5] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:16:02,520 [http-nio-5050-exec-5] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 05:16:03,416 [http-nio-5050-exec-6] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:16:03,416 [http-nio-5050-exec-6] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [1]
2021-12-09 05:16:14,542 [http-nio-5050-exec-7] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:16:14,542 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:16:14,544 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [5]
2021-12-09 05:16:14,551 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 05:16:14,551 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [dffege]
2021-12-09 05:16:14,551 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([descript4_2_0_] : [VARCHAR]) - [werrewwr]
2021-12-09 05:16:14,551 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user6_2_0_] : [BIGINT]) - [5]
2021-12-09 05:16:14,552 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote5_2_0_] : [INTEGER]) - [4]
2021-12-09 05:16:14,553 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 05:16:14,553 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-09 04:36:37.997]
2021-12-09 05:16:14,553 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmfail.chom]
2021-12-09 05:16:14,553 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [INTEGER]) - [1]
2021-12-09 05:16:14,553 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6ffdferjteffds]
2021-12-09 05:16:14,553 [http-nio-5050-exec-7] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dffefdrthjeffds]
2021-12-09 05:16:56,865 [http-nio-5050-exec-9] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:16:56,866 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:16:56,867 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [5]
2021-12-09 05:16:56,867 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 05:16:56,867 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [danke]
2021-12-09 05:16:56,867 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([descript4_2_0_] : [VARCHAR]) - [werrewwr]
2021-12-09 05:16:56,867 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user6_2_0_] : [BIGINT]) - [5]
2021-12-09 05:16:56,867 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote5_2_0_] : [INTEGER]) - [4]
2021-12-09 05:16:56,868 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 05:16:56,868 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-09 04:36:37.997]
2021-12-09 05:16:56,868 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmfail.chom]
2021-12-09 05:16:56,868 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [INTEGER]) - [1]
2021-12-09 05:16:56,868 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6ffdferjteffds]
2021-12-09 05:16:56,868 [http-nio-5050-exec-9] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dffefdrthjeffds]
2021-12-09 05:16:58,956 [http-nio-5050-exec-10] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:16:58,956 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:16:58,957 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [5]
2021-12-09 05:16:58,957 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 05:16:58,957 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [danke]
2021-12-09 05:16:58,958 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([descript4_2_0_] : [VARCHAR]) - [werrewwr]
2021-12-09 05:16:58,958 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user6_2_0_] : [BIGINT]) - [5]
2021-12-09 05:16:58,958 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote5_2_0_] : [INTEGER]) - [4]
2021-12-09 05:16:58,958 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 05:16:58,958 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-09 04:36:37.997]
2021-12-09 05:16:58,958 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmfail.chom]
2021-12-09 05:16:58,958 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [INTEGER]) - [1]
2021-12-09 05:16:58,958 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6ffdferjteffds]
2021-12-09 05:16:58,958 [http-nio-5050-exec-10] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dffefdrthjeffds]
2021-12-09 05:17:24,441 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:17:24,441 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:17:24,442 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [5]
2021-12-09 05:17:24,442 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 05:17:24,442 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [danke]
2021-12-09 05:17:24,443 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([descript4_2_0_] : [VARCHAR]) - [werrewwr]
2021-12-09 05:17:24,443 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user6_2_0_] : [BIGINT]) - [5]
2021-12-09 05:17:24,443 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote5_2_0_] : [INTEGER]) - [4]
2021-12-09 05:17:24,443 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 05:17:24,443 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-09 04:36:37.997]
2021-12-09 05:17:24,443 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmfail.chom]
2021-12-09 05:17:24,443 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [INTEGER]) - [1]
2021-12-09 05:17:24,443 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6ffdferjteffds]
2021-12-09 05:17:24,443 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dffefdrthjeffds]
2021-12-09 05:18:54,240 [http-nio-5050-exec-5] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'newContent' for method parameter type String is not present]
2021-12-09 05:20:10,128 [http-nio-5050-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'newContent' for method parameter type String is not present]
2021-12-09 05:20:37,475 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:20:37,476 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@37986daf] for TypeConfiguration
2021-12-09 05:20:37,476 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e966457] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@37986daf]
2021-12-09 05:20:37,480 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:20:37,486 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:20:40,824 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 32702 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:20:40,842 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:20:40,842 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:20:41,330 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:20:41,331 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:20:41,337 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:20:41,460 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:20:41,461 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:20:41,478 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:20:41,479 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:20:41,480 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:20:41,488 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:20:41,499 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:20:41,503 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:20:41,503 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:20:41,507 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:20:41,508 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:20:41,508 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:20:41,509 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:20:41,510 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:20:41,515 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:20:41,516 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:20:41,538 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
2021-12-09 05:20:41,959 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:20:41,966 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:20:41,967 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:20:41,967 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:20:42,063 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:20:42,063 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1150 ms
2021-12-09 05:20:42,229 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:20:42,283 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:20:42,387 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:20:42,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@4fecf308
2021-12-09 05:20:42,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@4fecf308
2021-12-09 05:20:42,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4fecf308
2021-12-09 05:20:42,406 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f9dda71
2021-12-09 05:20:42,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31f77791
2021-12-09 05:20:42,407 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6d293993
2021-12-09 05:20:42,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@17222c11
2021-12-09 05:20:42,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@17222c11
2021-12-09 05:20:42,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17222c11
2021-12-09 05:20:42,409 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@11b5f4e2
2021-12-09 05:20:42,409 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@11b5f4e2
2021-12-09 05:20:42,409 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11b5f4e2
2021-12-09 05:20:42,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@739831a4
2021-12-09 05:20:42,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@739831a4
2021-12-09 05:20:42,410 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@739831a4
2021-12-09 05:20:42,411 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@7fe8c7db
2021-12-09 05:20:42,411 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@7fe8c7db
2021-12-09 05:20:42,411 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7fe8c7db
2021-12-09 05:20:42,411 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@19ae2ee5
2021-12-09 05:20:42,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@19ae2ee5
2021-12-09 05:20:42,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@19ae2ee5
2021-12-09 05:20:42,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@118acf70
2021-12-09 05:20:42,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@118acf70
2021-12-09 05:20:42,412 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@118acf70
2021-12-09 05:20:42,413 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@e91af20
2021-12-09 05:20:42,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@e91af20
2021-12-09 05:20:42,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e91af20
2021-12-09 05:20:42,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@60dc1a4e
2021-12-09 05:20:42,414 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@60dc1a4e
2021-12-09 05:20:42,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6e24ce51
2021-12-09 05:20:42,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6e24ce51
2021-12-09 05:20:42,415 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@73893ec1
2021-12-09 05:20:42,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@73893ec1
2021-12-09 05:20:42,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61037caf
2021-12-09 05:20:42,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7742a45c
2021-12-09 05:20:42,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@619c93ca
2021-12-09 05:20:42,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@619c93ca
2021-12-09 05:20:42,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@1129829c
2021-12-09 05:20:42,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1129829c
2021-12-09 05:20:42,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@6839203b
2021-12-09 05:20:42,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6839203b
2021-12-09 05:20:42,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@43935e9c
2021-12-09 05:20:42,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@43935e9c
2021-12-09 05:20:42,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@26d5a317
2021-12-09 05:20:42,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@26d5a317
2021-12-09 05:20:42,421 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@89caf47
2021-12-09 05:20:42,421 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@89caf47
2021-12-09 05:20:42,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5df6163a
2021-12-09 05:20:42,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5df6163a
2021-12-09 05:20:42,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2a0ea492
2021-12-09 05:20:42,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2a0ea492
2021-12-09 05:20:42,424 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36ad229b
2021-12-09 05:20:42,424 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36ad229b
2021-12-09 05:20:42,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@35bd8bc9
2021-12-09 05:20:42,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@35bd8bc9
2021-12-09 05:20:42,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@39ab5ef7
2021-12-09 05:20:42,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@39ab5ef7
2021-12-09 05:20:42,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@16a3cc88
2021-12-09 05:20:42,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@16a3cc88
2021-12-09 05:20:42,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@16a3cc88
2021-12-09 05:20:42,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@474749b8
2021-12-09 05:20:42,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@cc9ef8d
2021-12-09 05:20:42,429 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cc9ef8d
2021-12-09 05:20:42,429 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cc9ef8d
2021-12-09 05:20:42,429 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@329dc214
2021-12-09 05:20:42,430 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@357c9bd9
2021-12-09 05:20:42,430 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@2dd63e3
2021-12-09 05:20:42,430 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2dd63e3
2021-12-09 05:20:42,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@6a2d867d
2021-12-09 05:20:42,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6a2d867d
2021-12-09 05:20:42,431 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0aaaf0
2021-12-09 05:20:42,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0aaaf0
2021-12-09 05:20:42,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3a3b10f4
2021-12-09 05:20:42,432 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a3b10f4
2021-12-09 05:20:42,433 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@691541bc
2021-12-09 05:20:42,433 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@691541bc
2021-12-09 05:20:42,433 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35145874
2021-12-09 05:20:42,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@4b03cbad
2021-12-09 05:20:42,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@4b03cbad
2021-12-09 05:20:42,434 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@4b03cbad
2021-12-09 05:20:42,435 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@626b639e
2021-12-09 05:20:42,435 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@626b639e
2021-12-09 05:20:42,435 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@626b639e
2021-12-09 05:20:42,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@3757e8e2
2021-12-09 05:20:42,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@679d0be8
2021-12-09 05:20:42,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@361cd35c
2021-12-09 05:20:42,436 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@361cd35c
2021-12-09 05:20:42,437 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@361cd35c
2021-12-09 05:20:42,438 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@69ed5ea2
2021-12-09 05:20:42,438 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@69ed5ea2
2021-12-09 05:20:42,438 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@69ed5ea2
2021-12-09 05:20:42,438 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@551be9f6
2021-12-09 05:20:42,438 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@4a864d4d
2021-12-09 05:20:42,439 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@26457986
2021-12-09 05:20:42,439 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@26457986
2021-12-09 05:20:42,440 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d1d9d73
2021-12-09 05:20:42,441 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@26e0d39c
2021-12-09 05:20:42,441 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26e0d39c
2021-12-09 05:20:42,442 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@72ecbcb3
2021-12-09 05:20:42,442 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@72ecbcb3
2021-12-09 05:20:42,442 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6ef2f7ad
2021-12-09 05:20:42,443 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@38e83838
2021-12-09 05:20:42,444 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@7abeabe9
2021-12-09 05:20:42,446 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@40df6090
2021-12-09 05:20:42,446 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40df6090
2021-12-09 05:20:42,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d289d3f
2021-12-09 05:20:42,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10f405ff
2021-12-09 05:20:42,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:20:42,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:20:42,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:20:42,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:20:42,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:20:42,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:20:42,481 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:20:42,794 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:20:42,805 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:20:42,850 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67afe909] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79f1e22e]
2021-12-09 05:20:42,977 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67afe909] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@704c3bdf]
2021-12-09 05:20:43,255 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:20:43,259 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@704c3bdf] for TypeConfiguration
2021-12-09 05:20:43,260 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:20:43,805 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:20:43,984 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:20:44,194 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:20:44,200 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:20:44,209 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.901 seconds (JVM running for 4.892)
2021-12-09 05:21:00,318 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:21:00,318 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:21:00,320 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 05:21:00,371 [http-nio-5050-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'newContent' for method parameter type String is not present]
2021-12-09 05:21:15,425 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:21:15,426 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@704c3bdf] for TypeConfiguration
2021-12-09 05:21:15,426 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6ee7dee8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@704c3bdf]
2021-12-09 05:21:15,427 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:21:15,430 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:21:19,294 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 32769 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:21:19,295 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:21:19,296 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:21:19,680 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:21:19,680 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:21:19,687 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:21:19,808 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:21:19,808 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:21:19,826 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:21:19,827 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:21:19,828 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:21:19,835 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:21:19,846 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:21:19,850 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:21:19,850 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:21:19,854 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:21:19,855 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:21:19,855 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:21:19,856 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:21:19,857 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:21:19,862 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:21:19,862 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:21:19,879 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:21:20,317 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:21:20,324 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:21:20,325 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:21:20,325 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:21:20,408 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:21:20,409 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1085 ms
2021-12-09 05:21:20,549 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:21:20,604 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:21:20,705 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:21:20,722 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@4962b41e
2021-12-09 05:21:20,722 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@4962b41e
2021-12-09 05:21:20,722 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4962b41e
2021-12-09 05:21:20,723 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c11d32
2021-12-09 05:21:20,723 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@707865bd
2021-12-09 05:21:20,724 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@67688110
2021-12-09 05:21:20,724 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@57fdb8a4
2021-12-09 05:21:20,724 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@57fdb8a4
2021-12-09 05:21:20,724 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57fdb8a4
2021-12-09 05:21:20,725 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@21a46ff1
2021-12-09 05:21:20,725 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@21a46ff1
2021-12-09 05:21:20,725 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21a46ff1
2021-12-09 05:21:20,726 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@5efe47fd
2021-12-09 05:21:20,726 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@5efe47fd
2021-12-09 05:21:20,726 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5efe47fd
2021-12-09 05:21:20,727 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@27a6fef2
2021-12-09 05:21:20,727 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@27a6fef2
2021-12-09 05:21:20,727 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27a6fef2
2021-12-09 05:21:20,728 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@31b0f02
2021-12-09 05:21:20,728 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@31b0f02
2021-12-09 05:21:20,728 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31b0f02
2021-12-09 05:21:20,728 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@149274cb
2021-12-09 05:21:20,728 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@149274cb
2021-12-09 05:21:20,728 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@149274cb
2021-12-09 05:21:20,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@101bdd1c
2021-12-09 05:21:20,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@101bdd1c
2021-12-09 05:21:20,730 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@101bdd1c
2021-12-09 05:21:20,730 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3dc68586
2021-12-09 05:21:20,730 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3dc68586
2021-12-09 05:21:20,731 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31da0434
2021-12-09 05:21:20,731 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31da0434
2021-12-09 05:21:20,731 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@fb5aeed
2021-12-09 05:21:20,731 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@fb5aeed
2021-12-09 05:21:20,732 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bc63e20
2021-12-09 05:21:20,732 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d5e575c
2021-12-09 05:21:20,732 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@3b41e1bf
2021-12-09 05:21:20,732 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b41e1bf
2021-12-09 05:21:20,733 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@21390938
2021-12-09 05:21:20,733 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@21390938
2021-12-09 05:21:20,734 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@72fbf94d
2021-12-09 05:21:20,734 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fbf94d
2021-12-09 05:21:20,734 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f2c57fe
2021-12-09 05:21:20,735 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f2c57fe
2021-12-09 05:21:20,735 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f8a02cf
2021-12-09 05:21:20,735 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f8a02cf
2021-12-09 05:21:20,736 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a90e2c1
2021-12-09 05:21:20,736 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a90e2c1
2021-12-09 05:21:20,736 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b24ea2a
2021-12-09 05:21:20,736 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b24ea2a
2021-12-09 05:21:20,737 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@47df5041
2021-12-09 05:21:20,737 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@47df5041
2021-12-09 05:21:20,737 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@224c7de4
2021-12-09 05:21:20,737 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@224c7de4
2021-12-09 05:21:20,739 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@1472208d
2021-12-09 05:21:20,739 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1472208d
2021-12-09 05:21:20,740 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@57bd6a8f
2021-12-09 05:21:20,740 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@57bd6a8f
2021-12-09 05:21:20,741 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@2e0fdbe9
2021-12-09 05:21:20,741 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e0fdbe9
2021-12-09 05:21:20,741 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e0fdbe9
2021-12-09 05:21:20,741 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f081b5d
2021-12-09 05:21:20,742 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@19827608
2021-12-09 05:21:20,742 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19827608
2021-12-09 05:21:20,742 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19827608
2021-12-09 05:21:20,742 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d2c9361
2021-12-09 05:21:20,743 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@296edc75
2021-12-09 05:21:20,743 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@339f3a55
2021-12-09 05:21:20,743 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@339f3a55
2021-12-09 05:21:20,744 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@4702e7a5
2021-12-09 05:21:20,744 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4702e7a5
2021-12-09 05:21:20,744 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@784d9bc
2021-12-09 05:21:20,744 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@784d9bc
2021-12-09 05:21:20,745 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3554bdc0
2021-12-09 05:21:20,745 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3554bdc0
2021-12-09 05:21:20,745 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@491f8831
2021-12-09 05:21:20,745 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@491f8831
2021-12-09 05:21:20,745 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@764fffa0
2021-12-09 05:21:20,746 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@4ed18798
2021-12-09 05:21:20,746 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@4ed18798
2021-12-09 05:21:20,746 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@4ed18798
2021-12-09 05:21:20,746 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@8840c98
2021-12-09 05:21:20,747 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@8840c98
2021-12-09 05:21:20,747 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@8840c98
2021-12-09 05:21:20,747 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@580902cd
2021-12-09 05:21:20,748 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@6f85ee02
2021-12-09 05:21:20,748 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3b435211
2021-12-09 05:21:20,748 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b435211
2021-12-09 05:21:20,748 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3b435211
2021-12-09 05:21:20,749 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33d7765a
2021-12-09 05:21:20,749 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33d7765a
2021-12-09 05:21:20,749 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33d7765a
2021-12-09 05:21:20,749 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@5600a5da
2021-12-09 05:21:20,749 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@40d848f9
2021-12-09 05:21:20,750 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@57151b3a
2021-12-09 05:21:20,750 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@57151b3a
2021-12-09 05:21:20,750 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@501957bf
2021-12-09 05:21:20,751 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@102c18e
2021-12-09 05:21:20,751 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@102c18e
2021-12-09 05:21:20,752 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@f882465
2021-12-09 05:21:20,752 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@f882465
2021-12-09 05:21:20,752 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@79ecc507
2021-12-09 05:21:20,752 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41def031
2021-12-09 05:21:20,753 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@17c0274c
2021-12-09 05:21:20,754 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@69796bd0
2021-12-09 05:21:20,754 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@69796bd0
2021-12-09 05:21:20,754 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 05:21:20,754 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d289d3f
2021-12-09 05:21:20,755 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10f405ff
2021-12-09 05:21:20,755 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:21:20,755 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:21:20,755 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:21:20,755 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:21:20,755 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:21:20,782 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:21:21,069 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:21:21,080 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:21:21,126 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67c21bf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@67afe909]
2021-12-09 05:21:21,282 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67c21bf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26f5e45d]
2021-12-09 05:21:21,553 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:21:21,558 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@26f5e45d] for TypeConfiguration
2021-12-09 05:21:21,559 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:21:22,113 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:21:22,307 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:21:22,521 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:21:22,530 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:21:22,542 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.483 seconds (JVM running for 3.967)
2021-12-09 05:21:44,549 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:21:44,550 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:21:44,552 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 2 ms
2021-12-09 05:21:44,604 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Optional long parameter 'topicId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.] with root cause
java.lang.IllegalStateException: Optional long parameter 'topicId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:263)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:116)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:170)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:22:05,017 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:22:05,017 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@26f5e45d] for TypeConfiguration
2021-12-09 05:22:05,018 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7172091b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@26f5e45d]
2021-12-09 05:22:05,019 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:22:05,024 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:22:09,163 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 32849 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:22:09,165 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:22:09,165 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:22:09,537 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:22:09,538 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:22:09,544 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:22:09,668 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:22:09,669 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:22:09,686 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:22:09,687 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:22:09,688 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:22:09,696 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:22:09,708 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 39 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:22:09,711 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:22:09,712 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:22:09,716 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:22:09,716 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:22:09,717 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:22:09,718 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:22:09,718 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:22:09,723 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:22:09,723 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:22:09,740 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2021-12-09 05:22:10,167 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:22:10,173 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:22:10,174 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:22:10,174 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:22:10,257 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:22:10,257 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1064 ms
2021-12-09 05:22:10,392 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:22:10,442 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:22:10,543 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:22:10,561 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@6282b9f5
2021-12-09 05:22:10,561 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@6282b9f5
2021-12-09 05:22:10,561 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6282b9f5
2021-12-09 05:22:10,561 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58278366
2021-12-09 05:22:10,562 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@552fee7a
2021-12-09 05:22:10,562 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@475f5672
2021-12-09 05:22:10,563 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@2db15f70
2021-12-09 05:22:10,563 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@2db15f70
2021-12-09 05:22:10,563 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2db15f70
2021-12-09 05:22:10,564 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@6bcae9
2021-12-09 05:22:10,564 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@6bcae9
2021-12-09 05:22:10,564 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6bcae9
2021-12-09 05:22:10,565 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@7e3236d
2021-12-09 05:22:10,565 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@7e3236d
2021-12-09 05:22:10,565 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7e3236d
2021-12-09 05:22:10,566 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@2dba05b1
2021-12-09 05:22:10,566 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@2dba05b1
2021-12-09 05:22:10,566 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2dba05b1
2021-12-09 05:22:10,567 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@44b940a2
2021-12-09 05:22:10,569 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@44b940a2
2021-12-09 05:22:10,569 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@44b940a2
2021-12-09 05:22:10,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@72557746
2021-12-09 05:22:10,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@72557746
2021-12-09 05:22:10,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72557746
2021-12-09 05:22:10,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6221b13b
2021-12-09 05:22:10,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@6221b13b
2021-12-09 05:22:10,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6221b13b
2021-12-09 05:22:10,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@646427f7
2021-12-09 05:22:10,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@646427f7
2021-12-09 05:22:10,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@423ed3b5
2021-12-09 05:22:10,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@423ed3b5
2021-12-09 05:22:10,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@37af24cb
2021-12-09 05:22:10,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@37af24cb
2021-12-09 05:22:10,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2fc49538
2021-12-09 05:22:10,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7ca492d9
2021-12-09 05:22:10,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@486e9d1d
2021-12-09 05:22:10,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@486e9d1d
2021-12-09 05:22:10,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@1a531422
2021-12-09 05:22:10,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1a531422
2021-12-09 05:22:10,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@2d28fb02
2021-12-09 05:22:10,577 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2d28fb02
2021-12-09 05:22:10,577 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@101cf747
2021-12-09 05:22:10,577 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@101cf747
2021-12-09 05:22:10,578 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@70b6db83
2021-12-09 05:22:10,578 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@70b6db83
2021-12-09 05:22:10,579 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@370ef50b
2021-12-09 05:22:10,579 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@370ef50b
2021-12-09 05:22:10,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d313c8c
2021-12-09 05:22:10,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2d313c8c
2021-12-09 05:22:10,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7e52a26b
2021-12-09 05:22:10,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7e52a26b
2021-12-09 05:22:10,582 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55846997
2021-12-09 05:22:10,582 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55846997
2021-12-09 05:22:10,584 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@6de004f1
2021-12-09 05:22:10,584 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6de004f1
2021-12-09 05:22:10,585 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@517704
2021-12-09 05:22:10,585 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@517704
2021-12-09 05:22:10,586 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@696b52bc
2021-12-09 05:22:10,586 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@696b52bc
2021-12-09 05:22:10,586 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@696b52bc
2021-12-09 05:22:10,587 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@740a0d5e
2021-12-09 05:22:10,587 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@14b528b6
2021-12-09 05:22:10,588 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14b528b6
2021-12-09 05:22:10,588 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14b528b6
2021-12-09 05:22:10,588 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fbe70d8
2021-12-09 05:22:10,589 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7aea704c
2021-12-09 05:22:10,589 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@7d1c164a
2021-12-09 05:22:10,589 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d1c164a
2021-12-09 05:22:10,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@73bb1337
2021-12-09 05:22:10,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73bb1337
2021-12-09 05:22:10,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@426131d7
2021-12-09 05:22:10,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@426131d7
2021-12-09 05:22:10,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@49580ca8
2021-12-09 05:22:10,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49580ca8
2021-12-09 05:22:10,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b733ef7
2021-12-09 05:22:10,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b733ef7
2021-12-09 05:22:10,592 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77524ca7
2021-12-09 05:22:10,592 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5b29ab61
2021-12-09 05:22:10,592 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b29ab61
2021-12-09 05:22:10,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5b29ab61
2021-12-09 05:22:10,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@273fa9e
2021-12-09 05:22:10,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@273fa9e
2021-12-09 05:22:10,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@273fa9e
2021-12-09 05:22:10,594 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@1653b84e
2021-12-09 05:22:10,594 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@6c075e9d
2021-12-09 05:22:10,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@58a765ce
2021-12-09 05:22:10,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@58a765ce
2021-12-09 05:22:10,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@58a765ce
2021-12-09 05:22:10,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@56a4abd0
2021-12-09 05:22:10,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@56a4abd0
2021-12-09 05:22:10,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@56a4abd0
2021-12-09 05:22:10,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@269222ae
2021-12-09 05:22:10,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@7d3691e1
2021-12-09 05:22:10,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@2dff7085
2021-12-09 05:22:10,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2dff7085
2021-12-09 05:22:10,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b30a50d
2021-12-09 05:22:10,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@65eb3597
2021-12-09 05:22:10,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65eb3597
2021-12-09 05:22:10,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@4a50c746
2021-12-09 05:22:10,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4a50c746
2021-12-09 05:22:10,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22d477c2
2021-12-09 05:22:10,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@39832280
2021-12-09 05:22:10,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@5a05dd30
2021-12-09 05:22:10,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@8c0a23f
2021-12-09 05:22:10,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@8c0a23f
2021-12-09 05:22:10,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@10f405ff
2021-12-09 05:22:10,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:22:10,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:22:10,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:22:10,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:22:10,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:22:10,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:22:10,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:22:10,637 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:22:10,921 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:22:10,933 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:22:10,978 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@79f1e22e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6903ed0e]
2021-12-09 05:22:11,116 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@79f1e22e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@37986daf]
2021-12-09 05:22:11,374 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:22:11,378 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@37986daf] for TypeConfiguration
2021-12-09 05:22:11,379 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:22:11,966 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:22:12,212 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:22:12,518 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:22:12,523 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:22:12,533 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.607 seconds (JVM running for 4.12)
2021-12-09 05:22:15,300 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:22:15,301 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:22:15,302 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 05:22:15,355 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Long.longValue()" because "topicId" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Long.longValue()" because "topicId" is null
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:22:46,582 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:22:46,583 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@37986daf] for TypeConfiguration
2021-12-09 05:22:46,583 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@49f033bf] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@37986daf]
2021-12-09 05:22:46,585 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:22:46,590 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:22:50,777 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 32922 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:22:50,779 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:22:50,779 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:22:51,156 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:22:51,157 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:22:51,164 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:22:51,291 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:22:51,291 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:22:51,308 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:22:51,310 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:22:51,311 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:22:51,318 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:22:51,330 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:22:51,333 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:22:51,333 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:22:51,337 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:22:51,338 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:22:51,339 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:22:51,340 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:22:51,340 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:22:51,345 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:22:51,345 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:22:51,363 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:22:51,742 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:22:51,747 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:22:51,748 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:22:51,748 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:22:51,821 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:22:51,821 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1012 ms
2021-12-09 05:22:51,909 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:22:51,931 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:22:52,010 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:22:52,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:22:52,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:22:52,028 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:22:52,028 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f5fcfe9
2021-12-09 05:22:52,030 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@548e43b1
2021-12-09 05:22:52,030 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@616a06e3
2021-12-09 05:22:52,031 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:22:52,031 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:22:52,031 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:22:52,032 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:22:52,032 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:22:52,032 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:22:52,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:22:52,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:22:52,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:22:52,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:22:52,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:22:52,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:22:52,035 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:22:52,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:22:52,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:22:52,037 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:22:52,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:22:52,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:22:52,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:22:52,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:22:52,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:22:52,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31efacad
2021-12-09 05:22:52,039 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31efacad
2021-12-09 05:22:52,040 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d124d29
2021-12-09 05:22:52,040 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d124d29
2021-12-09 05:22:52,041 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@7926352f
2021-12-09 05:22:52,041 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@7926352f
2021-12-09 05:22:52,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@670342a2
2021-12-09 05:22:52,043 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@14fc9bd
2021-12-09 05:22:52,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@6aa5974e
2021-12-09 05:22:52,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6aa5974e
2021-12-09 05:22:52,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7a388990
2021-12-09 05:22:52,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7a388990
2021-12-09 05:22:52,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@6db328f8
2021-12-09 05:22:52,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6db328f8
2021-12-09 05:22:52,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@790d8fdd
2021-12-09 05:22:52,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@790d8fdd
2021-12-09 05:22:52,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5a090f62
2021-12-09 05:22:52,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5a090f62
2021-12-09 05:22:52,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2b877a54
2021-12-09 05:22:52,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2b877a54
2021-12-09 05:22:52,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2df65a56
2021-12-09 05:22:52,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2df65a56
2021-12-09 05:22:52,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2e56b4d
2021-12-09 05:22:52,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2e56b4d
2021-12-09 05:22:52,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@805e72e
2021-12-09 05:22:52,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@805e72e
2021-12-09 05:22:52,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@45d56062
2021-12-09 05:22:52,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@45d56062
2021-12-09 05:22:52,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@77cca767
2021-12-09 05:22:52,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77cca767
2021-12-09 05:22:52,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:22:52,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:22:52,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:22:52,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@29013ef2
2021-12-09 05:22:52,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:22:52,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:22:52,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:22:52,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64021427
2021-12-09 05:22:52,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6d0290d8
2021-12-09 05:22:52,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@209f3887
2021-12-09 05:22:52,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@209f3887
2021-12-09 05:22:52,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@685f5d0d
2021-12-09 05:22:52,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@685f5d0d
2021-12-09 05:22:52,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d9618f2
2021-12-09 05:22:52,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d9618f2
2021-12-09 05:22:52,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@525647f3
2021-12-09 05:22:52,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@525647f3
2021-12-09 05:22:52,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43a4a9e5
2021-12-09 05:22:52,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43a4a9e5
2021-12-09 05:22:52,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11df2829
2021-12-09 05:22:52,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:22:52,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:22:52,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:22:52,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:22:52,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:22:52,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:22:52,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f8a9454
2021-12-09 05:22:52,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@47044f7d
2021-12-09 05:22:52,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:22:52,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:22:52,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:22:52,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:22:52,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:22:52,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:22:52,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@13250132
2021-12-09 05:22:52,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@46a123e4
2021-12-09 05:22:52,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@2faa55bb
2021-12-09 05:22:52,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2faa55bb
2021-12-09 05:22:52,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@764a3e5d
2021-12-09 05:22:52,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@3c7279a5
2021-12-09 05:22:52,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7279a5
2021-12-09 05:22:52,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3709748f
2021-12-09 05:22:52,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3709748f
2021-12-09 05:22:52,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e85c21b
2021-12-09 05:22:52,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4966bab1
2021-12-09 05:22:52,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@1b52699c
2021-12-09 05:22:52,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@44d7e24
2021-12-09 05:22:52,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44d7e24
2021-12-09 05:22:52,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:22:52,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:22:52,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:22:52,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:22:52,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:22:52,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:22:52,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:22:52,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:22:52,106 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:22:52,366 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:22:52,373 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:22:52,406 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6903ed0e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@e154848]
2021-12-09 05:22:52,503 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6903ed0e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c82d925]
2021-12-09 05:22:52,720 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:22:52,725 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@c82d925] for TypeConfiguration
2021-12-09 05:22:52,726 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:22:53,164 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:22:53,322 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:22:53,481 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:22:53,492 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:22:53,503 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 2.975 seconds (JVM running for 3.476)
2021-12-09 05:23:11,478 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:23:11,479 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:23:11,480 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 05:23:11,525 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Optional long parameter 'topicId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.] with root cause
java.lang.IllegalStateException: Optional long parameter 'topicId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:263)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:116)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:170)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:23:40,697 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:23:40,698 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@c82d925] for TypeConfiguration
2021-12-09 05:23:40,698 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@a1c2800] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@c82d925]
2021-12-09 05:23:40,701 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:23:40,704 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:23:45,162 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 33010 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:23:45,164 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:23:45,164 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:23:45,529 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:23:45,529 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:23:45,535 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 3 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:23:45,652 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:23:45,652 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:23:45,668 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:23:45,669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:23:45,670 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:23:45,677 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:23:45,693 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 40 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:23:45,698 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:23:45,698 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:23:45,703 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:23:45,704 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:23:45,704 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:23:45,705 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:23:45,706 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:23:45,711 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:23:45,711 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:23:45,729 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:23:46,133 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:23:46,138 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:23:46,139 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:23:46,139 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:23:46,224 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:23:46,224 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1024 ms
2021-12-09 05:23:46,337 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:23:46,374 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:23:46,493 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:23:46,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:23:46,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:23:46,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:23:46,512 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f5fcfe9
2021-12-09 05:23:46,512 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@548e43b1
2021-12-09 05:23:46,512 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@616a06e3
2021-12-09 05:23:46,513 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:23:46,513 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:23:46,513 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:23:46,514 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:23:46,514 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:23:46,514 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:23:46,515 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:23:46,515 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:23:46,515 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:23:46,516 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:23:46,516 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:23:46,516 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:23:46,516 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:23:46,517 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:23:46,517 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:23:46,517 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:23:46,518 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:23:46,518 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:23:46,519 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:23:46,519 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:23:46,519 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:23:46,519 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31efacad
2021-12-09 05:23:46,519 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31efacad
2021-12-09 05:23:46,520 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d124d29
2021-12-09 05:23:46,520 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d124d29
2021-12-09 05:23:46,521 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@7926352f
2021-12-09 05:23:46,521 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@7926352f
2021-12-09 05:23:46,521 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@670342a2
2021-12-09 05:23:46,521 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@14fc9bd
2021-12-09 05:23:46,522 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@6aa5974e
2021-12-09 05:23:46,522 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6aa5974e
2021-12-09 05:23:46,522 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7a388990
2021-12-09 05:23:46,522 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7a388990
2021-12-09 05:23:46,523 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@6db328f8
2021-12-09 05:23:46,523 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6db328f8
2021-12-09 05:23:46,524 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@790d8fdd
2021-12-09 05:23:46,524 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@790d8fdd
2021-12-09 05:23:46,524 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5a090f62
2021-12-09 05:23:46,525 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5a090f62
2021-12-09 05:23:46,525 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2b877a54
2021-12-09 05:23:46,525 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2b877a54
2021-12-09 05:23:46,526 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2df65a56
2021-12-09 05:23:46,526 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2df65a56
2021-12-09 05:23:46,526 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2e56b4d
2021-12-09 05:23:46,526 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2e56b4d
2021-12-09 05:23:46,527 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@805e72e
2021-12-09 05:23:46,527 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@805e72e
2021-12-09 05:23:46,528 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@45d56062
2021-12-09 05:23:46,528 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@45d56062
2021-12-09 05:23:46,529 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@77cca767
2021-12-09 05:23:46,529 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77cca767
2021-12-09 05:23:46,530 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:23:46,530 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:23:46,530 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:23:46,531 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@29013ef2
2021-12-09 05:23:46,531 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:23:46,532 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:23:46,532 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:23:46,532 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64021427
2021-12-09 05:23:46,532 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6d0290d8
2021-12-09 05:23:46,533 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@209f3887
2021-12-09 05:23:46,533 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@209f3887
2021-12-09 05:23:46,533 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@685f5d0d
2021-12-09 05:23:46,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@685f5d0d
2021-12-09 05:23:46,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d9618f2
2021-12-09 05:23:46,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d9618f2
2021-12-09 05:23:46,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@525647f3
2021-12-09 05:23:46,535 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@525647f3
2021-12-09 05:23:46,535 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43a4a9e5
2021-12-09 05:23:46,535 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43a4a9e5
2021-12-09 05:23:46,535 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11df2829
2021-12-09 05:23:46,536 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:23:46,536 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:23:46,536 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:23:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:23:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:23:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:23:46,537 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f8a9454
2021-12-09 05:23:46,538 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@47044f7d
2021-12-09 05:23:46,538 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:23:46,538 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:23:46,538 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:23:46,539 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:23:46,539 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:23:46,539 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:23:46,539 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@13250132
2021-12-09 05:23:46,539 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@46a123e4
2021-12-09 05:23:46,540 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@2faa55bb
2021-12-09 05:23:46,540 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2faa55bb
2021-12-09 05:23:46,541 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@764a3e5d
2021-12-09 05:23:46,541 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@3c7279a5
2021-12-09 05:23:46,542 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7279a5
2021-12-09 05:23:46,542 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3709748f
2021-12-09 05:23:46,542 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3709748f
2021-12-09 05:23:46,543 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e85c21b
2021-12-09 05:23:46,543 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4966bab1
2021-12-09 05:23:46,543 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@1b52699c
2021-12-09 05:23:46,545 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@44d7e24
2021-12-09 05:23:46,545 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44d7e24
2021-12-09 05:23:46,545 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:23:46,545 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:23:46,545 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:23:46,546 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:23:46,546 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:23:46,546 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:23:46,546 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:23:46,546 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:23:46,571 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:23:46,818 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:23:46,829 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:23:46,871 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6903ed0e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@e154848]
2021-12-09 05:23:46,992 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6903ed0e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c82d925]
2021-12-09 05:23:47,242 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:23:47,247 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@c82d925] for TypeConfiguration
2021-12-09 05:23:47,248 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:23:47,805 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:23:47,979 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:23:48,192 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:23:48,200 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:23:48,213 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.255 seconds (JVM running for 3.809)
2021-12-09 05:23:52,621 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:23:52,621 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:23:52,623 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 2 ms
2021-12-09 05:23:52,666 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Long.longValue()" because "topicId" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Long.longValue()" because "topicId" is null
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:30:36,086 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:30:36,089 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@c82d925] for TypeConfiguration
2021-12-09 05:30:36,089 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4c050a13] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@c82d925]
2021-12-09 05:30:36,094 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:30:36,100 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:30:40,704 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 33455 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:30:40,705 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:30:40,705 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:30:41,270 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:30:41,271 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:30:41,278 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:30:41,398 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:30:41,398 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:30:41,416 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:30:41,417 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:30:41,418 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:30:41,428 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:30:41,443 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 44 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:30:41,446 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:30:41,447 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:30:41,451 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:30:41,452 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:30:41,452 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:30:41,453 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:30:41,453 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:30:41,459 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:30:41,459 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:30:41,477 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:30:41,893 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:30:41,902 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:30:41,903 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:30:41,903 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:30:42,025 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:30:42,025 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1289 ms
2021-12-09 05:30:42,153 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:30:42,203 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:30:42,315 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:30:42,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:30:42,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:30:42,335 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:30:42,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f5fcfe9
2021-12-09 05:30:42,336 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@548e43b1
2021-12-09 05:30:42,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@616a06e3
2021-12-09 05:30:42,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:30:42,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:30:42,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:30:42,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:30:42,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:30:42,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:30:42,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:30:42,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:30:42,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:30:42,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:30:42,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:30:42,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:30:42,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:30:42,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:30:42,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:30:42,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:30:42,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:30:42,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:30:42,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:30:42,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:30:42,343 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:30:42,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31efacad
2021-12-09 05:30:42,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31efacad
2021-12-09 05:30:42,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d124d29
2021-12-09 05:30:42,344 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d124d29
2021-12-09 05:30:42,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@7926352f
2021-12-09 05:30:42,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@7926352f
2021-12-09 05:30:42,345 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@670342a2
2021-12-09 05:30:42,346 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@14fc9bd
2021-12-09 05:30:42,346 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@6aa5974e
2021-12-09 05:30:42,346 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6aa5974e
2021-12-09 05:30:42,347 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7a388990
2021-12-09 05:30:42,347 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7a388990
2021-12-09 05:30:42,347 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@6db328f8
2021-12-09 05:30:42,348 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6db328f8
2021-12-09 05:30:42,349 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@790d8fdd
2021-12-09 05:30:42,349 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@790d8fdd
2021-12-09 05:30:42,349 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5a090f62
2021-12-09 05:30:42,349 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5a090f62
2021-12-09 05:30:42,350 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2b877a54
2021-12-09 05:30:42,350 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2b877a54
2021-12-09 05:30:42,350 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2df65a56
2021-12-09 05:30:42,351 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2df65a56
2021-12-09 05:30:42,351 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2e56b4d
2021-12-09 05:30:42,351 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2e56b4d
2021-12-09 05:30:42,352 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@805e72e
2021-12-09 05:30:42,352 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@805e72e
2021-12-09 05:30:42,353 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@45d56062
2021-12-09 05:30:42,353 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@45d56062
2021-12-09 05:30:42,354 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@77cca767
2021-12-09 05:30:42,354 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77cca767
2021-12-09 05:30:42,355 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:30:42,355 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:30:42,355 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:30:42,356 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@29013ef2
2021-12-09 05:30:42,356 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:30:42,356 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:30:42,356 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:30:42,357 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64021427
2021-12-09 05:30:42,357 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6d0290d8
2021-12-09 05:30:42,358 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@209f3887
2021-12-09 05:30:42,358 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@209f3887
2021-12-09 05:30:42,358 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@685f5d0d
2021-12-09 05:30:42,358 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@685f5d0d
2021-12-09 05:30:42,359 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d9618f2
2021-12-09 05:30:42,359 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d9618f2
2021-12-09 05:30:42,359 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@525647f3
2021-12-09 05:30:42,359 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@525647f3
2021-12-09 05:30:42,360 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43a4a9e5
2021-12-09 05:30:42,360 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43a4a9e5
2021-12-09 05:30:42,360 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11df2829
2021-12-09 05:30:42,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:30:42,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:30:42,361 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:30:42,362 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:30:42,362 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:30:42,363 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:30:42,363 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f8a9454
2021-12-09 05:30:42,364 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@47044f7d
2021-12-09 05:30:42,364 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:30:42,364 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:30:42,364 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:30:42,365 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:30:42,365 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:30:42,366 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:30:42,366 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@13250132
2021-12-09 05:30:42,367 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@46a123e4
2021-12-09 05:30:42,367 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@2faa55bb
2021-12-09 05:30:42,368 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2faa55bb
2021-12-09 05:30:42,368 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@764a3e5d
2021-12-09 05:30:42,369 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@3c7279a5
2021-12-09 05:30:42,369 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7279a5
2021-12-09 05:30:42,370 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3709748f
2021-12-09 05:30:42,370 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3709748f
2021-12-09 05:30:42,370 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e85c21b
2021-12-09 05:30:42,371 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4966bab1
2021-12-09 05:30:42,372 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@1b52699c
2021-12-09 05:30:42,373 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@44d7e24
2021-12-09 05:30:42,374 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44d7e24
2021-12-09 05:30:42,374 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:30:42,374 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:30:42,374 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:30:42,374 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:30:42,374 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:30:42,375 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:30:42,375 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:30:42,375 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:30:42,405 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:30:42,693 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:30:42,704 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:30:42,744 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6903ed0e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@e154848]
2021-12-09 05:30:42,860 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6903ed0e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c82d925]
2021-12-09 05:30:43,127 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:30:43,131 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@c82d925] for TypeConfiguration
2021-12-09 05:30:43,132 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:30:43,720 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:30:43,898 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:30:44,241 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:30:44,248 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:30:44,265 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.786 seconds (JVM running for 4.502)
2021-12-09 05:30:47,390 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:30:47,391 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:30:47,392 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 05:30:47,432 [http-nio-5050-exec-1] DEBUG org.hibernate.SQL                                  - select topic0_.id_topic as id_topic1_2_0_, topic0_.posted_at as posted_a2_2_0_, topic0_.content as content3_2_0_, topic0_.description as descript4_2_0_, topic0_.id_user as id_user6_2_0_, topic0_.vote as vote5_2_0_, user1_.id_user as id_user1_3_1_, user1_.collected_points as collecte2_3_1_, user1_.created_at as created_3_3_1_, user1_.email as email4_3_1_, user1_.mobile as mobile5_3_1_, user1_.password as password6_3_1_, user1_.username as username7_3_1_ from topic topic0_ inner join user user1_ on topic0_.id_user=user1_.id_user where topic0_.id_topic=?
2021-12-09 05:30:47,441 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
2021-12-09 05:30:47,447 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user1_3_1_] : [BIGINT]) - [5]
2021-12-09 05:30:47,452 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([posted_a2_2_0_] : [TIMESTAMP]) - [2021-12-07 04:05:03.0]
2021-12-09 05:30:47,452 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([content3_2_0_] : [VARCHAR]) - [danke]
2021-12-09 05:30:47,452 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([descript4_2_0_] : [VARCHAR]) - [werrewwr]
2021-12-09 05:30:47,452 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([id_user6_2_0_] : [BIGINT]) - [5]
2021-12-09 05:30:47,453 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([vote5_2_0_] : [INTEGER]) - [4]
2021-12-09 05:30:47,454 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([collecte2_3_1_] : [INTEGER]) - [0]
2021-12-09 05:30:47,454 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([created_3_3_1_] : [TIMESTAMP]) - [2021-12-09 04:36:37.997]
2021-12-09 05:30:47,455 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([email4_3_1_] : [VARCHAR]) - [Lustav@gmfail.chom]
2021-12-09 05:30:47,455 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([mobile5_3_1_] : [INTEGER]) - [1]
2021-12-09 05:30:47,455 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([password6_3_1_] : [VARCHAR]) - [testd6ffdferjteffds]
2021-12-09 05:30:47,455 [http-nio-5050-exec-1] TRACE o.h.type.descriptor.sql.BasicExtractor             - extracted value ([username7_3_1_] : [VARCHAR]) - [test5dffefdrthjeffds]
2021-12-09 05:30:51,637 [http-nio-5050-exec-3] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Long.longValue()" because "topicId" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Long.longValue()" because "topicId" is null
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:31:43,544 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:31:43,544 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@c82d925] for TypeConfiguration
2021-12-09 05:31:43,544 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5edf1de7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@c82d925]
2021-12-09 05:31:43,547 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:31:43,550 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:31:47,490 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 33552 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:31:47,491 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:31:47,492 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:31:47,861 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:31:47,862 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:31:47,869 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:31:47,995 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:31:47,995 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:31:48,012 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:31:48,013 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:31:48,014 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:31:48,022 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:31:48,033 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:31:48,037 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:31:48,037 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:31:48,041 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:31:48,041 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:31:48,042 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:31:48,043 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:31:48,043 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:31:48,048 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:31:48,049 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:31:48,067 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:31:48,484 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:31:48,490 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:31:48,490 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:31:48,490 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:31:48,568 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:31:48,568 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1047 ms
2021-12-09 05:31:48,683 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:31:48,723 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:31:48,835 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:31:48,855 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@4fecf308
2021-12-09 05:31:48,855 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@4fecf308
2021-12-09 05:31:48,855 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4fecf308
2021-12-09 05:31:48,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f9dda71
2021-12-09 05:31:48,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31f77791
2021-12-09 05:31:48,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6d293993
2021-12-09 05:31:48,857 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@17222c11
2021-12-09 05:31:48,857 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@17222c11
2021-12-09 05:31:48,858 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17222c11
2021-12-09 05:31:48,858 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@11b5f4e2
2021-12-09 05:31:48,858 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@11b5f4e2
2021-12-09 05:31:48,858 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11b5f4e2
2021-12-09 05:31:48,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@739831a4
2021-12-09 05:31:48,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@739831a4
2021-12-09 05:31:48,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@739831a4
2021-12-09 05:31:48,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@7fe8c7db
2021-12-09 05:31:48,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@7fe8c7db
2021-12-09 05:31:48,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7fe8c7db
2021-12-09 05:31:48,861 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@19ae2ee5
2021-12-09 05:31:48,861 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@19ae2ee5
2021-12-09 05:31:48,861 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@19ae2ee5
2021-12-09 05:31:48,862 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@118acf70
2021-12-09 05:31:48,862 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@118acf70
2021-12-09 05:31:48,862 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@118acf70
2021-12-09 05:31:48,863 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@e91af20
2021-12-09 05:31:48,863 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@e91af20
2021-12-09 05:31:48,863 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e91af20
2021-12-09 05:31:48,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@60dc1a4e
2021-12-09 05:31:48,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@60dc1a4e
2021-12-09 05:31:48,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6e24ce51
2021-12-09 05:31:48,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6e24ce51
2021-12-09 05:31:48,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@73893ec1
2021-12-09 05:31:48,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@73893ec1
2021-12-09 05:31:48,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@61037caf
2021-12-09 05:31:48,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7742a45c
2021-12-09 05:31:48,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@619c93ca
2021-12-09 05:31:48,867 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@619c93ca
2021-12-09 05:31:48,867 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@1129829c
2021-12-09 05:31:48,867 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1129829c
2021-12-09 05:31:48,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@6839203b
2021-12-09 05:31:48,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6839203b
2021-12-09 05:31:48,869 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@43935e9c
2021-12-09 05:31:48,869 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@43935e9c
2021-12-09 05:31:48,869 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@26d5a317
2021-12-09 05:31:48,869 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@26d5a317
2021-12-09 05:31:48,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@89caf47
2021-12-09 05:31:48,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@89caf47
2021-12-09 05:31:48,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5df6163a
2021-12-09 05:31:48,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5df6163a
2021-12-09 05:31:48,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2a0ea492
2021-12-09 05:31:48,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2a0ea492
2021-12-09 05:31:48,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36ad229b
2021-12-09 05:31:48,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@36ad229b
2021-12-09 05:31:48,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@35bd8bc9
2021-12-09 05:31:48,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@35bd8bc9
2021-12-09 05:31:48,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@39ab5ef7
2021-12-09 05:31:48,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@39ab5ef7
2021-12-09 05:31:48,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@16a3cc88
2021-12-09 05:31:48,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@16a3cc88
2021-12-09 05:31:48,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@16a3cc88
2021-12-09 05:31:48,876 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@474749b8
2021-12-09 05:31:48,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@cc9ef8d
2021-12-09 05:31:48,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cc9ef8d
2021-12-09 05:31:48,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cc9ef8d
2021-12-09 05:31:48,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@329dc214
2021-12-09 05:31:48,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@357c9bd9
2021-12-09 05:31:48,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@2dd63e3
2021-12-09 05:31:48,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2dd63e3
2021-12-09 05:31:48,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@6a2d867d
2021-12-09 05:31:48,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6a2d867d
2021-12-09 05:31:48,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a0aaaf0
2021-12-09 05:31:48,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a0aaaf0
2021-12-09 05:31:48,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3a3b10f4
2021-12-09 05:31:48,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a3b10f4
2021-12-09 05:31:48,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@691541bc
2021-12-09 05:31:48,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@691541bc
2021-12-09 05:31:48,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35145874
2021-12-09 05:31:48,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@4b03cbad
2021-12-09 05:31:48,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@4b03cbad
2021-12-09 05:31:48,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@4b03cbad
2021-12-09 05:31:48,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@626b639e
2021-12-09 05:31:48,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@626b639e
2021-12-09 05:31:48,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@626b639e
2021-12-09 05:31:48,883 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@3757e8e2
2021-12-09 05:31:48,883 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@679d0be8
2021-12-09 05:31:48,883 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@361cd35c
2021-12-09 05:31:48,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@361cd35c
2021-12-09 05:31:48,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@361cd35c
2021-12-09 05:31:48,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@69ed5ea2
2021-12-09 05:31:48,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@69ed5ea2
2021-12-09 05:31:48,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@69ed5ea2
2021-12-09 05:31:48,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@551be9f6
2021-12-09 05:31:48,885 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@4a864d4d
2021-12-09 05:31:48,885 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@26457986
2021-12-09 05:31:48,886 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@26457986
2021-12-09 05:31:48,886 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d1d9d73
2021-12-09 05:31:48,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@26e0d39c
2021-12-09 05:31:48,887 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26e0d39c
2021-12-09 05:31:48,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@72ecbcb3
2021-12-09 05:31:48,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@72ecbcb3
2021-12-09 05:31:48,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6ef2f7ad
2021-12-09 05:31:48,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@38e83838
2021-12-09 05:31:48,889 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@7abeabe9
2021-12-09 05:31:48,890 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@40df6090
2021-12-09 05:31:48,890 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40df6090
2021-12-09 05:31:48,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d289d3f
2021-12-09 05:31:48,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@10f405ff
2021-12-09 05:31:48,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:31:48,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:31:48,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:31:48,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:31:48,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:31:48,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:31:48,912 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:31:49,153 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:31:49,163 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:31:49,205 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67afe909] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79f1e22e]
2021-12-09 05:31:49,314 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67afe909] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@704c3bdf]
2021-12-09 05:31:49,571 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:31:49,575 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@704c3bdf] for TypeConfiguration
2021-12-09 05:31:49,576 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:31:50,117 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:31:50,294 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:31:50,501 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:31:50,507 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:31:50,516 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.239 seconds (JVM running for 3.732)
2021-12-09 05:32:11,884 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:32:11,885 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:32:11,886 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 05:32:11,923 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException: Cannot invoke "java.lang.Long.longValue()" because "topicId" is null] with root cause
java.lang.NullPointerException: Cannot invoke "java.lang.Long.longValue()" because "topicId" is null
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:32:27,544 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:32:27,544 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@704c3bdf] for TypeConfiguration
2021-12-09 05:32:27,544 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2edd7c3e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@704c3bdf]
2021-12-09 05:32:27,546 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:32:27,549 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:32:31,693 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 33625 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:32:31,694 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:32:31,695 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:32:32,047 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:32:32,047 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:32:32,054 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:32:32,167 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:32:32,167 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:32:32,182 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:32:32,183 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:32:32,184 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:32:32,191 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:32:32,203 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 35 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:32:32,206 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:32:32,206 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:32:32,210 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:32:32,211 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:32:32,211 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:32:32,212 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:32:32,213 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:32:32,217 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:32:32,218 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:32:32,233 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2021-12-09 05:32:32,583 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:32:32,588 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:32:32,588 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:32:32,588 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:32:32,674 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:32:32,674 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 954 ms
2021-12-09 05:32:32,766 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:32:32,796 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:32:32,886 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:32:32,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@4962b41e
2021-12-09 05:32:32,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@4962b41e
2021-12-09 05:32:32,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4962b41e
2021-12-09 05:32:32,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c11d32
2021-12-09 05:32:32,906 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@707865bd
2021-12-09 05:32:32,907 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@67688110
2021-12-09 05:32:32,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@57fdb8a4
2021-12-09 05:32:32,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@57fdb8a4
2021-12-09 05:32:32,909 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57fdb8a4
2021-12-09 05:32:32,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@21a46ff1
2021-12-09 05:32:32,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@21a46ff1
2021-12-09 05:32:32,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21a46ff1
2021-12-09 05:32:32,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@5efe47fd
2021-12-09 05:32:32,912 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@5efe47fd
2021-12-09 05:32:32,912 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5efe47fd
2021-12-09 05:32:32,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@27a6fef2
2021-12-09 05:32:32,913 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@27a6fef2
2021-12-09 05:32:32,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27a6fef2
2021-12-09 05:32:32,914 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@31b0f02
2021-12-09 05:32:32,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@31b0f02
2021-12-09 05:32:32,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31b0f02
2021-12-09 05:32:32,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@149274cb
2021-12-09 05:32:32,915 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@149274cb
2021-12-09 05:32:32,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@149274cb
2021-12-09 05:32:32,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@101bdd1c
2021-12-09 05:32:32,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@101bdd1c
2021-12-09 05:32:32,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@101bdd1c
2021-12-09 05:32:32,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3dc68586
2021-12-09 05:32:32,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3dc68586
2021-12-09 05:32:32,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31da0434
2021-12-09 05:32:32,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31da0434
2021-12-09 05:32:32,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@fb5aeed
2021-12-09 05:32:32,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@fb5aeed
2021-12-09 05:32:32,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bc63e20
2021-12-09 05:32:32,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d5e575c
2021-12-09 05:32:32,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@3b41e1bf
2021-12-09 05:32:32,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b41e1bf
2021-12-09 05:32:32,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@21390938
2021-12-09 05:32:32,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@21390938
2021-12-09 05:32:32,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@72fbf94d
2021-12-09 05:32:32,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72fbf94d
2021-12-09 05:32:32,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f2c57fe
2021-12-09 05:32:32,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7f2c57fe
2021-12-09 05:32:32,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f8a02cf
2021-12-09 05:32:32,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f8a02cf
2021-12-09 05:32:32,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a90e2c1
2021-12-09 05:32:32,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a90e2c1
2021-12-09 05:32:32,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b24ea2a
2021-12-09 05:32:32,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1b24ea2a
2021-12-09 05:32:32,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@47df5041
2021-12-09 05:32:32,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@47df5041
2021-12-09 05:32:32,930 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@224c7de4
2021-12-09 05:32:32,930 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@224c7de4
2021-12-09 05:32:32,931 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@1472208d
2021-12-09 05:32:32,931 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1472208d
2021-12-09 05:32:32,932 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@57bd6a8f
2021-12-09 05:32:32,933 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@57bd6a8f
2021-12-09 05:32:32,934 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@2e0fdbe9
2021-12-09 05:32:32,934 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e0fdbe9
2021-12-09 05:32:32,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e0fdbe9
2021-12-09 05:32:32,936 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f081b5d
2021-12-09 05:32:32,936 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@19827608
2021-12-09 05:32:32,936 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@19827608
2021-12-09 05:32:32,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@19827608
2021-12-09 05:32:32,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d2c9361
2021-12-09 05:32:32,938 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@296edc75
2021-12-09 05:32:32,938 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@339f3a55
2021-12-09 05:32:32,938 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@339f3a55
2021-12-09 05:32:32,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@4702e7a5
2021-12-09 05:32:32,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4702e7a5
2021-12-09 05:32:32,940 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@784d9bc
2021-12-09 05:32:32,940 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@784d9bc
2021-12-09 05:32:32,940 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@3554bdc0
2021-12-09 05:32:32,940 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3554bdc0
2021-12-09 05:32:32,941 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@491f8831
2021-12-09 05:32:32,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@491f8831
2021-12-09 05:32:32,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@764fffa0
2021-12-09 05:32:32,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@4ed18798
2021-12-09 05:32:32,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@4ed18798
2021-12-09 05:32:32,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@4ed18798
2021-12-09 05:32:32,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@8840c98
2021-12-09 05:32:32,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@8840c98
2021-12-09 05:32:32,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@8840c98
2021-12-09 05:32:32,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@580902cd
2021-12-09 05:32:32,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@6f85ee02
2021-12-09 05:32:32,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3b435211
2021-12-09 05:32:32,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b435211
2021-12-09 05:32:32,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3b435211
2021-12-09 05:32:32,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33d7765a
2021-12-09 05:32:32,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33d7765a
2021-12-09 05:32:32,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33d7765a
2021-12-09 05:32:32,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@5600a5da
2021-12-09 05:32:32,949 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@40d848f9
2021-12-09 05:32:32,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@57151b3a
2021-12-09 05:32:32,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@57151b3a
2021-12-09 05:32:32,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@501957bf
2021-12-09 05:32:32,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@102c18e
2021-12-09 05:32:32,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@102c18e
2021-12-09 05:32:32,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@f882465
2021-12-09 05:32:32,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@f882465
2021-12-09 05:32:32,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@79ecc507
2021-12-09 05:32:32,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41def031
2021-12-09 05:32:32,955 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@17c0274c
2021-12-09 05:32:32,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@69796bd0
2021-12-09 05:32:32,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@69796bd0
2021-12-09 05:32:32,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 05:32:32,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1d289d3f
2021-12-09 05:32:32,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10f405ff
2021-12-09 05:32:32,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:32:32,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:32:32,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:32:32,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:32:32,959 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:32:32,987 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:32:33,278 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:32:33,285 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:32:33,331 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67c21bf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@67afe909]
2021-12-09 05:32:33,449 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67c21bf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26f5e45d]
2021-12-09 05:32:33,700 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:32:33,704 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@26f5e45d] for TypeConfiguration
2021-12-09 05:32:33,705 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:32:34,282 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:32:34,452 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:32:34,642 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:32:34,653 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.195 seconds (JVM running for 3.701)
2021-12-09 05:32:34,670 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:32:34,671 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@26f5e45d] for TypeConfiguration
2021-12-09 05:32:34,671 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@119ecd46] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@26f5e45d]
2021-12-09 05:32:34,672 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:32:34,675 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:37:04,220 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34001 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:37:04,223 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:37:04,223 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:37:04,721 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:37:04,722 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:37:04,729 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:37:04,882 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:37:04,882 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:37:04,900 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:37:04,901 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:37:04,902 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:37:04,910 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:37:04,922 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 40 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:37:04,926 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:37:04,926 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:37:04,932 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:37:04,932 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:37:04,933 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:37:04,934 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:37:04,934 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:37:04,943 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:37:04,943 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:37:04,967 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
2021-12-09 05:37:05,499 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:37:05,508 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:37:05,509 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:37:05,509 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:37:05,628 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:37:05,628 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1371 ms
2021-12-09 05:37:05,772 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:37:05,811 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:37:05,903 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:37:05,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@2f9dda71
2021-12-09 05:37:05,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@2f9dda71
2021-12-09 05:37:05,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f9dda71
2021-12-09 05:37:05,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@31f77791
2021-12-09 05:37:05,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d293993
2021-12-09 05:37:05,917 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@66e827a8
2021-12-09 05:37:05,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@195113de
2021-12-09 05:37:05,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@195113de
2021-12-09 05:37:05,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195113de
2021-12-09 05:37:05,918 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@66d25ba9
2021-12-09 05:37:05,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@66d25ba9
2021-12-09 05:37:05,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66d25ba9
2021-12-09 05:37:05,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@266e9dda
2021-12-09 05:37:05,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@266e9dda
2021-12-09 05:37:05,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@266e9dda
2021-12-09 05:37:05,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@7db40fd5
2021-12-09 05:37:05,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@7db40fd5
2021-12-09 05:37:05,920 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7db40fd5
2021-12-09 05:37:05,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@74c9e11
2021-12-09 05:37:05,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@74c9e11
2021-12-09 05:37:05,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74c9e11
2021-12-09 05:37:05,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@4844930a
2021-12-09 05:37:05,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@4844930a
2021-12-09 05:37:05,921 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4844930a
2021-12-09 05:37:05,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2f95653f
2021-12-09 05:37:05,922 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2f95653f
2021-12-09 05:37:05,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f95653f
2021-12-09 05:37:05,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38029686
2021-12-09 05:37:05,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38029686
2021-12-09 05:37:05,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@74960e9d
2021-12-09 05:37:05,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@74960e9d
2021-12-09 05:37:05,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@61037caf
2021-12-09 05:37:05,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@61037caf
2021-12-09 05:37:05,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7742a45c
2021-12-09 05:37:05,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1cd6b1bd
2021-12-09 05:37:05,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5bda157e
2021-12-09 05:37:05,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5bda157e
2021-12-09 05:37:05,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@4e4162bc
2021-12-09 05:37:05,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4e4162bc
2021-12-09 05:37:05,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@61b65d54
2021-12-09 05:37:05,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@61b65d54
2021-12-09 05:37:05,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3dbd7107
2021-12-09 05:37:05,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3dbd7107
2021-12-09 05:37:05,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5edc3e29
2021-12-09 05:37:05,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5edc3e29
2021-12-09 05:37:05,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4b87760e
2021-12-09 05:37:05,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4b87760e
2021-12-09 05:37:05,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c1503a3
2021-12-09 05:37:05,928 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c1503a3
2021-12-09 05:37:05,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6070775e
2021-12-09 05:37:05,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6070775e
2021-12-09 05:37:05,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@168142da
2021-12-09 05:37:05,929 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@168142da
2021-12-09 05:37:05,930 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@191c6e13
2021-12-09 05:37:05,931 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@191c6e13
2021-12-09 05:37:05,931 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@28a6e171
2021-12-09 05:37:05,931 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28a6e171
2021-12-09 05:37:05,932 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@474749b8
2021-12-09 05:37:05,932 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@474749b8
2021-12-09 05:37:05,932 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@474749b8
2021-12-09 05:37:05,933 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b2b8d86
2021-12-09 05:37:05,933 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@450f0235
2021-12-09 05:37:05,933 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@450f0235
2021-12-09 05:37:05,933 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@450f0235
2021-12-09 05:37:05,934 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@217dc48e
2021-12-09 05:37:05,934 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@632383b9
2021-12-09 05:37:05,934 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@3b35798
2021-12-09 05:37:05,934 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3b35798
2021-12-09 05:37:05,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@3e28d779
2021-12-09 05:37:05,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e28d779
2021-12-09 05:37:05,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@13cc0b90
2021-12-09 05:37:05,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13cc0b90
2021-12-09 05:37:05,936 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@20a24edf
2021-12-09 05:37:05,936 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20a24edf
2021-12-09 05:37:05,936 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@35145874
2021-12-09 05:37:05,936 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@35145874
2021-12-09 05:37:05,936 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f245bdd
2021-12-09 05:37:05,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@4b957db0
2021-12-09 05:37:05,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@4b957db0
2021-12-09 05:37:05,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@4b957db0
2021-12-09 05:37:05,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@437c4b25
2021-12-09 05:37:05,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@437c4b25
2021-12-09 05:37:05,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@437c4b25
2021-12-09 05:37:05,938 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@679d0be8
2021-12-09 05:37:05,938 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@8fcc534
2021-12-09 05:37:05,938 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3b4086c1
2021-12-09 05:37:05,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b4086c1
2021-12-09 05:37:05,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3b4086c1
2021-12-09 05:37:05,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@551be9f6
2021-12-09 05:37:05,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@551be9f6
2021-12-09 05:37:05,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@551be9f6
2021-12-09 05:37:05,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@4a864d4d
2021-12-09 05:37:05,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3c28e5b6
2021-12-09 05:37:05,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@5d1d9d73
2021-12-09 05:37:05,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d1d9d73
2021-12-09 05:37:05,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5db3d57c
2021-12-09 05:37:05,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@b379bc6
2021-12-09 05:37:05,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b379bc6
2021-12-09 05:37:05,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@6ef2f7ad
2021-12-09 05:37:05,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6ef2f7ad
2021-12-09 05:37:05,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@38e83838
2021-12-09 05:37:05,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6df4af5
2021-12-09 05:37:05,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@250d440
2021-12-09 05:37:05,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1d289d3f
2021-12-09 05:37:05,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d289d3f
2021-12-09 05:37:05,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:37:05,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:37:05,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:37:05,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:37:05,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:37:05,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:37:05,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@340cb97f
2021-12-09 05:37:05,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a1568d6
2021-12-09 05:37:05,970 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:37:06,245 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:37:06,255 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:37:06,300 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16ea0f22] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@60fc7f43]
2021-12-09 05:37:06,408 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16ea0f22] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@14df5253]
2021-12-09 05:37:06,686 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:37:06,690 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@14df5253] for TypeConfiguration
2021-12-09 05:37:06,691 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:37:07,267 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:37:07,474 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:37:07,708 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:37:07,717 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:37:07,728 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.753 seconds (JVM running for 4.28)
2021-12-09 05:37:12,153 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:37:12,153 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:37:12,155 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 2 ms
2021-12-09 05:37:12,205 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Optional long parameter 'topicId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.] with root cause
java.lang.IllegalStateException: Optional long parameter 'topicId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:263)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:116)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:170)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:37:51,031 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:37:51,032 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@14df5253] for TypeConfiguration
2021-12-09 05:37:51,032 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7172091b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@14df5253]
2021-12-09 05:37:51,033 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:37:51,037 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:37:55,065 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34080 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:37:55,066 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:37:55,066 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:37:55,466 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:37:55,467 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:37:55,474 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:37:55,606 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:37:55,606 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:37:55,623 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:37:55,624 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:37:55,626 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:37:55,633 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:37:55,645 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:37:55,649 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:37:55,649 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:37:55,653 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:37:55,654 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:37:55,654 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:37:55,655 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:37:55,655 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:37:55,662 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:37:55,662 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:37:55,681 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
2021-12-09 05:37:56,121 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:37:56,128 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:37:56,128 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:37:56,128 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:37:56,219 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:37:56,219 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1123 ms
2021-12-09 05:37:56,375 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:37:56,420 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:37:56,530 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:37:56,548 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@58278366
2021-12-09 05:37:56,549 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@58278366
2021-12-09 05:37:56,549 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@58278366
2021-12-09 05:37:56,549 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@552fee7a
2021-12-09 05:37:56,550 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@475f5672
2021-12-09 05:37:56,550 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@5bb911c1
2021-12-09 05:37:56,551 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@3ebc955b
2021-12-09 05:37:56,551 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@3ebc955b
2021-12-09 05:37:56,551 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3ebc955b
2021-12-09 05:37:56,552 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@3830f918
2021-12-09 05:37:56,552 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@3830f918
2021-12-09 05:37:56,552 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3830f918
2021-12-09 05:37:56,552 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38883a31
2021-12-09 05:37:56,553 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38883a31
2021-12-09 05:37:56,553 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38883a31
2021-12-09 05:37:56,553 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@5e1a5f
2021-12-09 05:37:56,553 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@5e1a5f
2021-12-09 05:37:56,553 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5e1a5f
2021-12-09 05:37:56,554 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@9fe720a
2021-12-09 05:37:56,554 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@9fe720a
2021-12-09 05:37:56,555 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@9fe720a
2021-12-09 05:37:56,555 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@11f23203
2021-12-09 05:37:56,555 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@11f23203
2021-12-09 05:37:56,555 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@11f23203
2021-12-09 05:37:56,556 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@4052b19f
2021-12-09 05:37:56,556 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@4052b19f
2021-12-09 05:37:56,556 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4052b19f
2021-12-09 05:37:56,557 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d9c45ee
2021-12-09 05:37:56,557 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d9c45ee
2021-12-09 05:37:56,557 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4001d8c1
2021-12-09 05:37:56,558 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4001d8c1
2021-12-09 05:37:56,558 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@2fc49538
2021-12-09 05:37:56,558 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@2fc49538
2021-12-09 05:37:56,558 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ca492d9
2021-12-09 05:37:56,559 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@443cdaa4
2021-12-09 05:37:56,559 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@67e0fd6d
2021-12-09 05:37:56,559 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@67e0fd6d
2021-12-09 05:37:56,560 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@4c319d52
2021-12-09 05:37:56,560 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4c319d52
2021-12-09 05:37:56,560 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@b2c4a8b
2021-12-09 05:37:56,561 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@b2c4a8b
2021-12-09 05:37:56,561 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a6c0f38
2021-12-09 05:37:56,561 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a6c0f38
2021-12-09 05:37:56,562 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18709cb2
2021-12-09 05:37:56,562 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18709cb2
2021-12-09 05:37:56,562 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@be164d8
2021-12-09 05:37:56,563 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@be164d8
2021-12-09 05:37:56,563 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@586495f1
2021-12-09 05:37:56,563 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@586495f1
2021-12-09 05:37:56,564 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@b5ac0c1
2021-12-09 05:37:56,564 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@b5ac0c1
2021-12-09 05:37:56,564 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60bf494c
2021-12-09 05:37:56,564 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60bf494c
2021-12-09 05:37:56,566 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@7436364d
2021-12-09 05:37:56,566 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7436364d
2021-12-09 05:37:56,567 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@23444a36
2021-12-09 05:37:56,567 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@23444a36
2021-12-09 05:37:56,567 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@740a0d5e
2021-12-09 05:37:56,568 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@740a0d5e
2021-12-09 05:37:56,568 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@740a0d5e
2021-12-09 05:37:56,568 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7fef0b40
2021-12-09 05:37:56,569 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@78c262ba
2021-12-09 05:37:56,569 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@78c262ba
2021-12-09 05:37:56,569 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@78c262ba
2021-12-09 05:37:56,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5db948c9
2021-12-09 05:37:56,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4ae2e781
2021-12-09 05:37:56,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@1e00bfe2
2021-12-09 05:37:56,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1e00bfe2
2021-12-09 05:37:56,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@15214920
2021-12-09 05:37:56,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15214920
2021-12-09 05:37:56,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@58687fb7
2021-12-09 05:37:56,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@58687fb7
2021-12-09 05:37:56,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@29962b2f
2021-12-09 05:37:56,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@29962b2f
2021-12-09 05:37:56,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@77524ca7
2021-12-09 05:37:56,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@77524ca7
2021-12-09 05:37:56,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6af609ea
2021-12-09 05:37:56,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5d71b500
2021-12-09 05:37:56,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5d71b500
2021-12-09 05:37:56,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5d71b500
2021-12-09 05:37:56,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ec6fede
2021-12-09 05:37:56,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ec6fede
2021-12-09 05:37:56,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ec6fede
2021-12-09 05:37:56,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@6c075e9d
2021-12-09 05:37:56,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@5e599100
2021-12-09 05:37:56,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@58aa1d72
2021-12-09 05:37:56,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@58aa1d72
2021-12-09 05:37:56,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@58aa1d72
2021-12-09 05:37:56,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@269222ae
2021-12-09 05:37:56,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@269222ae
2021-12-09 05:37:56,576 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@269222ae
2021-12-09 05:37:56,577 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@7d3691e1
2021-12-09 05:37:56,577 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@7558c24b
2021-12-09 05:37:56,578 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@b30a50d
2021-12-09 05:37:56,578 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b30a50d
2021-12-09 05:37:56,579 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@53a50b0a
2021-12-09 05:37:56,579 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@374c40ba
2021-12-09 05:37:56,579 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@374c40ba
2021-12-09 05:37:56,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@22d477c2
2021-12-09 05:37:56,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@22d477c2
2021-12-09 05:37:56,580 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@39832280
2021-12-09 05:37:56,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26e8ff8c
2021-12-09 05:37:56,581 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@76c86567
2021-12-09 05:37:56,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@10f405ff
2021-12-09 05:37:56,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@10f405ff
2021-12-09 05:37:56,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:37:56,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:37:56,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:37:56,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:37:56,583 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:37:56,584 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@340cb97f
2021-12-09 05:37:56,584 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a1568d6
2021-12-09 05:37:56,584 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11c88cca
2021-12-09 05:37:56,613 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:37:56,923 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:37:56,934 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:37:56,981 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60fc7f43] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16e195cf]
2021-12-09 05:37:57,109 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60fc7f43] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@605eb072]
2021-12-09 05:37:57,387 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:37:57,391 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@605eb072] for TypeConfiguration
2021-12-09 05:37:57,392 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:37:57,665 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void tech.goodquestion.website.repository.TopicRepository.updateTopic(java.lang.String,long)! Reason: Mixing of ? parameters and other forms like ?1 is not supported!; nested exception is java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
2021-12-09 05:37:57,666 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:37:57,666 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@605eb072] for TypeConfiguration
2021-12-09 05:37:57,666 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@349996a6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@605eb072]
2021-12-09 05:37:57,668 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:37:57,671 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:37:57,672 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 05:37:57,685 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 05:37:57,704 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void tech.goodquestion.website.repository.TopicRepository.updateTopic(java.lang.String,long)! Reason: Mixing of ? parameters and other forms like ?1 is not supported!; nested exception is java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void tech.goodquestion.website.repository.TopicRepository.updateTopic(java.lang.String,long)! Reason: Mixing of ? parameters and other forms like ?1 is not supported!; nested exception is java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void tech.goodquestion.website.repository.TopicRepository.updateTopic(java.lang.String,long)! Reason: Mixing of ? parameters and other forms like ?1 is not supported!; nested exception is java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void tech.goodquestion.website.repository.TopicRepository.updateTopic(java.lang.String,long)! Reason: Mixing of ? parameters and other forms like ?1 is not supported!; nested exception is java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
	at org.springframework.data.jpa.repository.query.StringQuery$ParameterBindingParser.parseParameterBindingsOfQueryIntoBindingsAndReturnCleanedQuery(StringQuery.java:281)
	at org.springframework.data.jpa.repository.query.StringQuery$ParameterBindingParser.access$000(StringQuery.java:182)
	at org.springframework.data.jpa.repository.query.StringQuery.<init>(StringQuery.java:73)
	at org.springframework.data.jpa.repository.query.DeclaredQuery.of(DeclaredQuery.java:38)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:158)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
2021-12-09 05:38:10,650 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34108 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:38:10,651 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:38:10,651 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:38:10,992 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:38:10,994 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:38:11,008 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 8 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:38:11,118 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:38:11,118 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:38:11,133 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:38:11,134 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:38:11,136 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:38:11,142 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:38:11,153 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 34 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:38:11,157 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:38:11,157 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:38:11,161 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:38:11,162 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:38:11,162 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:38:11,163 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:38:11,163 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:38:11,168 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:38:11,168 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:38:11,183 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2021-12-09 05:38:11,533 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:38:11,539 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:38:11,539 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:38:11,539 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:38:11,618 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:38:11,618 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 941 ms
2021-12-09 05:38:11,706 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:38:11,732 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:38:11,817 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:38:11,835 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:38:11,836 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:38:11,836 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:38:11,836 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f5fcfe9
2021-12-09 05:38:11,837 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@548e43b1
2021-12-09 05:38:11,837 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@616a06e3
2021-12-09 05:38:11,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:38:11,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:38:11,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:38:11,840 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:38:11,840 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:38:11,840 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:38:11,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:38:11,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:38:11,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:38:11,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:38:11,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:38:11,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:38:11,843 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:38:11,843 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:38:11,843 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:38:11,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:38:11,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:38:11,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:38:11,845 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:38:11,845 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:38:11,846 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:38:11,847 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31efacad
2021-12-09 05:38:11,847 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31efacad
2021-12-09 05:38:11,848 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d124d29
2021-12-09 05:38:11,848 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d124d29
2021-12-09 05:38:11,848 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@7926352f
2021-12-09 05:38:11,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@7926352f
2021-12-09 05:38:11,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@670342a2
2021-12-09 05:38:11,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@14fc9bd
2021-12-09 05:38:11,850 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@6aa5974e
2021-12-09 05:38:11,850 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6aa5974e
2021-12-09 05:38:11,851 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7a388990
2021-12-09 05:38:11,852 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7a388990
2021-12-09 05:38:11,853 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@6db328f8
2021-12-09 05:38:11,853 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6db328f8
2021-12-09 05:38:11,854 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@790d8fdd
2021-12-09 05:38:11,854 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@790d8fdd
2021-12-09 05:38:11,854 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5a090f62
2021-12-09 05:38:11,854 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5a090f62
2021-12-09 05:38:11,855 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2b877a54
2021-12-09 05:38:11,855 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2b877a54
2021-12-09 05:38:11,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2df65a56
2021-12-09 05:38:11,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2df65a56
2021-12-09 05:38:11,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2e56b4d
2021-12-09 05:38:11,857 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2e56b4d
2021-12-09 05:38:11,857 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@805e72e
2021-12-09 05:38:11,858 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@805e72e
2021-12-09 05:38:11,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@45d56062
2021-12-09 05:38:11,859 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@45d56062
2021-12-09 05:38:11,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@77cca767
2021-12-09 05:38:11,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77cca767
2021-12-09 05:38:11,861 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:38:11,861 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:38:11,862 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:38:11,863 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@29013ef2
2021-12-09 05:38:11,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:38:11,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:38:11,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:38:11,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64021427
2021-12-09 05:38:11,865 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6d0290d8
2021-12-09 05:38:11,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@209f3887
2021-12-09 05:38:11,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@209f3887
2021-12-09 05:38:11,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@685f5d0d
2021-12-09 05:38:11,867 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@685f5d0d
2021-12-09 05:38:11,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d9618f2
2021-12-09 05:38:11,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d9618f2
2021-12-09 05:38:11,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@525647f3
2021-12-09 05:38:11,869 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@525647f3
2021-12-09 05:38:11,869 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43a4a9e5
2021-12-09 05:38:11,869 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43a4a9e5
2021-12-09 05:38:11,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11df2829
2021-12-09 05:38:11,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:38:11,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:38:11,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:38:11,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:38:11,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:38:11,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:38:11,872 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f8a9454
2021-12-09 05:38:11,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@47044f7d
2021-12-09 05:38:11,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:38:11,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:38:11,874 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:38:11,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:38:11,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:38:11,876 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:38:11,876 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@13250132
2021-12-09 05:38:11,876 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@46a123e4
2021-12-09 05:38:11,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@2faa55bb
2021-12-09 05:38:11,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2faa55bb
2021-12-09 05:38:11,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@764a3e5d
2021-12-09 05:38:11,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@3c7279a5
2021-12-09 05:38:11,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7279a5
2021-12-09 05:38:11,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3709748f
2021-12-09 05:38:11,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3709748f
2021-12-09 05:38:11,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e85c21b
2021-12-09 05:38:11,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4966bab1
2021-12-09 05:38:11,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@1b52699c
2021-12-09 05:38:11,883 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@44d7e24
2021-12-09 05:38:11,883 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44d7e24
2021-12-09 05:38:11,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:38:11,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:38:11,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:38:11,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:38:11,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:38:11,884 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:38:11,885 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:38:11,885 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:38:11,908 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:38:12,176 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:38:12,183 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:38:12,216 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6903ed0e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@e154848]
2021-12-09 05:38:12,321 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6903ed0e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c82d925]
2021-12-09 05:38:12,560 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:38:12,564 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@c82d925] for TypeConfiguration
2021-12-09 05:38:12,565 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:38:12,827 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void tech.goodquestion.website.repository.TopicRepository.updateTopic(java.lang.String,long)! Reason: Mixing of ? parameters and other forms like ?1 is not supported!; nested exception is java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
2021-12-09 05:38:12,828 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:38:12,828 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@c82d925] for TypeConfiguration
2021-12-09 05:38:12,828 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@34cfdd84] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@c82d925]
2021-12-09 05:38:12,829 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:38:12,833 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:38:12,835 [main] INFO  org.apache.catalina.core.StandardService           - Stopping service [Tomcat]
2021-12-09 05:38:12,846 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-09 05:38:12,860 [main] ERROR o.springframework.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicController' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/controller/TopicController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void tech.goodquestion.website.repository.TopicRepository.updateTopic(java.lang.String,long)! Reason: Mixing of ? parameters and other forms like ?1 is not supported!; nested exception is java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at tech.goodquestion.GoodquestionApplication.main(GoodquestionApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'topicServiceImpl' defined in file [/Users/lem/Documents/Projekte/goodquestion/target/classes/tech/goodquestion/website/service/TopicServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void tech.goodquestion.website.repository.TopicRepository.updateTopic(java.lang.String,long)! Reason: Mixing of ? parameters and other forms like ?1 is not supported!; nested exception is java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'topicRepository' defined in tech.goodquestion.website.repository.TopicRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void tech.goodquestion.website.repository.TopicRepository.updateTopic(java.lang.String,long)! Reason: Mixing of ? parameters and other forms like ?1 is not supported!; nested exception is java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract void tech.goodquestion.website.repository.TopicRepository.updateTopic(java.lang.String,long)! Reason: Mixing of ? parameters and other forms like ?1 is not supported!; nested exception is java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.base/java.util.Optional.map(Optional.java:258)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Mixing of ? parameters and other forms like ?1 is not supported!
	at org.springframework.data.jpa.repository.query.StringQuery$ParameterBindingParser.parseParameterBindingsOfQueryIntoBindingsAndReturnCleanedQuery(StringQuery.java:281)
	at org.springframework.data.jpa.repository.query.StringQuery$ParameterBindingParser.access$000(StringQuery.java:182)
	at org.springframework.data.jpa.repository.query.StringQuery.<init>(StringQuery.java:73)
	at org.springframework.data.jpa.repository.query.DeclaredQuery.of(DeclaredQuery.java:38)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.assertParameterNamesInAnnotatedQuery(JpaQueryMethod.java:158)
	at org.springframework.data.jpa.repository.query.JpaQueryMethod.<init>(JpaQueryMethod.java:139)
	at org.springframework.data.jpa.repository.query.DefaultJpaQueryMethodFactory.build(DefaultJpaQueryMethodFactory.java:44)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
2021-12-09 05:38:32,721 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34145 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:38:32,722 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:38:32,722 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:38:33,090 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:38:33,091 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:38:33,099 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:38:33,209 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:38:33,209 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:38:33,223 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:38:33,225 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:38:33,226 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:38:33,232 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:38:33,243 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 34 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:38:33,247 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:38:33,247 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:38:33,251 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:38:33,251 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:38:33,252 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:38:33,253 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:38:33,253 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:38:33,258 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:38:33,258 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:38:33,273 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
2021-12-09 05:38:33,650 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:38:33,655 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:38:33,655 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:38:33,655 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:38:33,725 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:38:33,726 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 977 ms
2021-12-09 05:38:33,813 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:38:33,840 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:38:33,912 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:38:33,932 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7f5fcfe9
2021-12-09 05:38:33,932 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7f5fcfe9
2021-12-09 05:38:33,933 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f5fcfe9
2021-12-09 05:38:33,933 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@548e43b1
2021-12-09 05:38:33,933 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@616a06e3
2021-12-09 05:38:33,934 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6a55594b
2021-12-09 05:38:33,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@21a46ff1
2021-12-09 05:38:33,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@21a46ff1
2021-12-09 05:38:33,935 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21a46ff1
2021-12-09 05:38:33,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@5efe47fd
2021-12-09 05:38:33,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@5efe47fd
2021-12-09 05:38:33,937 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5efe47fd
2021-12-09 05:38:33,938 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@27a6fef2
2021-12-09 05:38:33,938 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@27a6fef2
2021-12-09 05:38:33,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@27a6fef2
2021-12-09 05:38:33,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@31b0f02
2021-12-09 05:38:33,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@31b0f02
2021-12-09 05:38:33,939 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@31b0f02
2021-12-09 05:38:33,940 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@149274cb
2021-12-09 05:38:33,940 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@149274cb
2021-12-09 05:38:33,941 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@149274cb
2021-12-09 05:38:33,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@101bdd1c
2021-12-09 05:38:33,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@101bdd1c
2021-12-09 05:38:33,942 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@101bdd1c
2021-12-09 05:38:33,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@3dc68586
2021-12-09 05:38:33,943 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@3dc68586
2021-12-09 05:38:33,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc68586
2021-12-09 05:38:33,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31da0434
2021-12-09 05:38:33,944 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31da0434
2021-12-09 05:38:33,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fb5aeed
2021-12-09 05:38:33,945 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fb5aeed
2021-12-09 05:38:33,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@670342a2
2021-12-09 05:38:33,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@670342a2
2021-12-09 05:38:33,946 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14fc9bd
2021-12-09 05:38:33,947 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b41e1bf
2021-12-09 05:38:33,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@21390938
2021-12-09 05:38:33,948 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21390938
2021-12-09 05:38:33,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@72fbf94d
2021-12-09 05:38:33,950 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@72fbf94d
2021-12-09 05:38:33,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@7f2c57fe
2021-12-09 05:38:33,951 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7f2c57fe
2021-12-09 05:38:33,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f8a02cf
2021-12-09 05:38:33,952 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f8a02cf
2021-12-09 05:38:33,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@a90e2c1
2021-12-09 05:38:33,953 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@a90e2c1
2021-12-09 05:38:33,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b24ea2a
2021-12-09 05:38:33,954 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b24ea2a
2021-12-09 05:38:33,955 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47df5041
2021-12-09 05:38:33,955 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47df5041
2021-12-09 05:38:33,956 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@224c7de4
2021-12-09 05:38:33,956 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@224c7de4
2021-12-09 05:38:33,957 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47a4eee2
2021-12-09 05:38:33,958 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47a4eee2
2021-12-09 05:38:33,959 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@1a8e9ed9
2021-12-09 05:38:33,960 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1a8e9ed9
2021-12-09 05:38:33,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@31a136a6
2021-12-09 05:38:33,961 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@31a136a6
2021-12-09 05:38:33,963 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@29013ef2
2021-12-09 05:38:33,963 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29013ef2
2021-12-09 05:38:33,964 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29013ef2
2021-12-09 05:38:33,964 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f395ce1
2021-12-09 05:38:33,965 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@7d2c9361
2021-12-09 05:38:33,965 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7d2c9361
2021-12-09 05:38:33,965 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7d2c9361
2021-12-09 05:38:33,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@296edc75
2021-12-09 05:38:33,966 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@339f3a55
2021-12-09 05:38:33,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@4702e7a5
2021-12-09 05:38:33,967 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4702e7a5
2021-12-09 05:38:33,968 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@784d9bc
2021-12-09 05:38:33,969 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@784d9bc
2021-12-09 05:38:33,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3554bdc0
2021-12-09 05:38:33,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3554bdc0
2021-12-09 05:38:33,970 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@491f8831
2021-12-09 05:38:33,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@491f8831
2021-12-09 05:38:33,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@11df2829
2021-12-09 05:38:33,971 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@11df2829
2021-12-09 05:38:33,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@280fafd
2021-12-09 05:38:33,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@8840c98
2021-12-09 05:38:33,972 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@8840c98
2021-12-09 05:38:33,973 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@8840c98
2021-12-09 05:38:33,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@580902cd
2021-12-09 05:38:33,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@580902cd
2021-12-09 05:38:33,974 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@580902cd
2021-12-09 05:38:33,975 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@47044f7d
2021-12-09 05:38:33,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@3b435211
2021-12-09 05:38:33,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@33d7765a
2021-12-09 05:38:33,976 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@33d7765a
2021-12-09 05:38:33,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@33d7765a
2021-12-09 05:38:33,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13250132
2021-12-09 05:38:33,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13250132
2021-12-09 05:38:33,977 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13250132
2021-12-09 05:38:33,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@46a123e4
2021-12-09 05:38:33,978 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3a296107
2021-12-09 05:38:33,980 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@764a3e5d
2021-12-09 05:38:33,980 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@764a3e5d
2021-12-09 05:38:33,980 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74ba6ff5
2021-12-09 05:38:33,981 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@18dcb8a7
2021-12-09 05:38:33,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18dcb8a7
2021-12-09 05:38:33,982 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@5e85c21b
2021-12-09 05:38:33,983 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5e85c21b
2021-12-09 05:38:33,983 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4966bab1
2021-12-09 05:38:33,983 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5aa76ad2
2021-12-09 05:38:33,985 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@7e5efcab
2021-12-09 05:38:33,987 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@7f27f59b
2021-12-09 05:38:33,987 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f27f59b
2021-12-09 05:38:33,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:38:33,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:38:33,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:38:33,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:38:33,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@340cb97f
2021-12-09 05:38:33,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6a1568d6
2021-12-09 05:38:33,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@11c88cca
2021-12-09 05:38:33,988 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b37fbec
2021-12-09 05:38:34,019 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:38:34,283 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:38:34,291 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:38:34,331 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16e195cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3212d853]
2021-12-09 05:38:34,437 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16e195cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7a0f06ad]
2021-12-09 05:38:34,659 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:38:34,663 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7a0f06ad] for TypeConfiguration
2021-12-09 05:38:34,664 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:38:35,209 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:38:35,403 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:38:35,629 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:38:35,643 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:38:35,656 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.17 seconds (JVM running for 3.671)
2021-12-09 05:38:38,948 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:38:38,948 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:38:38,950 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 2 ms
2021-12-09 05:38:39,000 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Optional long parameter 'topicId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.] with root cause
java.lang.IllegalStateException: Optional long parameter 'topicId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:263)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:116)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:170)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:38:57,447 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:38:57,447 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7a0f06ad] for TypeConfiguration
2021-12-09 05:38:57,447 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@fa3395] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7a0f06ad]
2021-12-09 05:38:57,451 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:38:57,454 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:39:01,224 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34193 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:39:01,225 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:39:01,225 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:39:01,603 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:39:01,604 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:39:01,610 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:39:01,733 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:39:01,733 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:39:01,750 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:39:01,752 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:39:01,753 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:39:01,760 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:39:01,772 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:39:01,775 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:39:01,776 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:39:01,780 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:39:01,780 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:39:01,781 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:39:01,782 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:39:01,782 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:39:01,787 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:39:01,788 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:39:01,805 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:39:02,218 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:39:02,224 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:39:02,224 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:39:02,224 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:39:02,301 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:39:02,301 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1046 ms
2021-12-09 05:39:02,409 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:39:02,459 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:39:02,568 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:39:02,587 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7c11d32
2021-12-09 05:39:02,587 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7c11d32
2021-12-09 05:39:02,588 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c11d32
2021-12-09 05:39:02,588 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@707865bd
2021-12-09 05:39:02,588 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@67688110
2021-12-09 05:39:02,589 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@42297bdf
2021-12-09 05:39:02,589 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@1f15e689
2021-12-09 05:39:02,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@1f15e689
2021-12-09 05:39:02,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1f15e689
2021-12-09 05:39:02,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@58feb6b0
2021-12-09 05:39:02,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@58feb6b0
2021-12-09 05:39:02,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@58feb6b0
2021-12-09 05:39:02,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@14c99bf6
2021-12-09 05:39:02,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@14c99bf6
2021-12-09 05:39:02,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14c99bf6
2021-12-09 05:39:02,592 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@445bce9a
2021-12-09 05:39:02,592 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@445bce9a
2021-12-09 05:39:02,592 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@445bce9a
2021-12-09 05:39:02,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6ffd4c0d
2021-12-09 05:39:02,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6ffd4c0d
2021-12-09 05:39:02,593 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ffd4c0d
2021-12-09 05:39:02,594 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@f723cdb
2021-12-09 05:39:02,594 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@f723cdb
2021-12-09 05:39:02,594 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f723cdb
2021-12-09 05:39:02,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2cfe272f
2021-12-09 05:39:02,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2cfe272f
2021-12-09 05:39:02,595 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2cfe272f
2021-12-09 05:39:02,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@380ce5a3
2021-12-09 05:39:02,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@380ce5a3
2021-12-09 05:39:02,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c88191b
2021-12-09 05:39:02,596 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c88191b
2021-12-09 05:39:02,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@5bc63e20
2021-12-09 05:39:02,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@5bc63e20
2021-12-09 05:39:02,597 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@d5e575c
2021-12-09 05:39:02,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7ed49a7f
2021-12-09 05:39:02,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5e5ddfbc
2021-12-09 05:39:02,598 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e5ddfbc
2021-12-09 05:39:02,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@13213f26
2021-12-09 05:39:02,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13213f26
2021-12-09 05:39:02,599 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@402f8592
2021-12-09 05:39:02,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@402f8592
2021-12-09 05:39:02,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6403a4a5
2021-12-09 05:39:02,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6403a4a5
2021-12-09 05:39:02,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@559af296
2021-12-09 05:39:02,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@559af296
2021-12-09 05:39:02,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@268c030f
2021-12-09 05:39:02,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@268c030f
2021-12-09 05:39:02,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@113f9078
2021-12-09 05:39:02,602 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@113f9078
2021-12-09 05:39:02,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3f857e08
2021-12-09 05:39:02,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3f857e08
2021-12-09 05:39:02,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49671897
2021-12-09 05:39:02,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49671897
2021-12-09 05:39:02,605 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@4026461d
2021-12-09 05:39:02,605 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4026461d
2021-12-09 05:39:02,605 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@4b195203
2021-12-09 05:39:02,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b195203
2021-12-09 05:39:02,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f081b5d
2021-12-09 05:39:02,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f081b5d
2021-12-09 05:39:02,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f081b5d
2021-12-09 05:39:02,607 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@265c1a7c
2021-12-09 05:39:02,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@6f930e0
2021-12-09 05:39:02,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f930e0
2021-12-09 05:39:02,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f930e0
2021-12-09 05:39:02,608 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d2c345d
2021-12-09 05:39:02,609 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@32507479
2021-12-09 05:39:02,609 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@6a98f353
2021-12-09 05:39:02,609 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a98f353
2021-12-09 05:39:02,610 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@3830b06c
2021-12-09 05:39:02,610 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3830b06c
2021-12-09 05:39:02,610 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c7e73c5
2021-12-09 05:39:02,610 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c7e73c5
2021-12-09 05:39:02,611 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@42fc4ac4
2021-12-09 05:39:02,611 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@42fc4ac4
2021-12-09 05:39:02,611 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@764fffa0
2021-12-09 05:39:02,611 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@764fffa0
2021-12-09 05:39:02,611 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18e4674d
2021-12-09 05:39:02,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@1e1e837d
2021-12-09 05:39:02,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e1e837d
2021-12-09 05:39:02,612 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@1e1e837d
2021-12-09 05:39:02,613 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7ab2a07e
2021-12-09 05:39:02,613 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7ab2a07e
2021-12-09 05:39:02,613 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7ab2a07e
2021-12-09 05:39:02,613 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@6f85ee02
2021-12-09 05:39:02,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@7b14c61
2021-12-09 05:39:02,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6b162ecc
2021-12-09 05:39:02,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b162ecc
2021-12-09 05:39:02,614 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6b162ecc
2021-12-09 05:39:02,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5600a5da
2021-12-09 05:39:02,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5600a5da
2021-12-09 05:39:02,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5600a5da
2021-12-09 05:39:02,615 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@40d848f9
2021-12-09 05:39:02,616 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@44bc2449
2021-12-09 05:39:02,616 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@501957bf
2021-12-09 05:39:02,616 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@501957bf
2021-12-09 05:39:02,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c742b84
2021-12-09 05:39:02,618 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2bebd114
2021-12-09 05:39:02,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2bebd114
2021-12-09 05:39:02,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@79ecc507
2021-12-09 05:39:02,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79ecc507
2021-12-09 05:39:02,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41def031
2021-12-09 05:39:02,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7f0f84d4
2021-12-09 05:39:02,620 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@dbed7fd
2021-12-09 05:39:02,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@26c8b296
2021-12-09 05:39:02,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@26c8b296
2021-12-09 05:39:02,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:39:02,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:39:02,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:39:02,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:39:02,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:39:02,622 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:39:02,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:39:02,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@340cb97f
2021-12-09 05:39:02,643 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:39:02,902 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:39:02,911 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:39:02,956 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e154848] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16ea0f22]
2021-12-09 05:39:03,116 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e154848] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@55c03e4]
2021-12-09 05:39:03,377 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:39:03,382 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@55c03e4] for TypeConfiguration
2021-12-09 05:39:03,383 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:39:03,892 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:39:04,081 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:39:04,265 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:39:04,270 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:39:04,284 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.299 seconds (JVM running for 3.798)
2021-12-09 05:39:06,887 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:39:06,887 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:39:06,888 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 05:39:06,949 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Optional long parameter 'topicId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.] with root cause
java.lang.IllegalStateException: Optional long parameter 'topicId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:263)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:116)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:170)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:39:59,163 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:39:59,163 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@55c03e4] for TypeConfiguration
2021-12-09 05:39:59,164 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@a1c2800] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@55c03e4]
2021-12-09 05:39:59,166 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:39:59,170 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:40:03,146 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34289 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:40:03,149 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:40:03,149 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:40:03,525 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:40:03,526 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:40:03,533 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:40:03,654 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:40:03,654 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:40:03,673 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:40:03,674 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:40:03,675 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:40:03,683 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:40:03,696 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 41 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:40:03,699 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:40:03,700 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:40:03,704 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:40:03,705 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:40:03,705 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:40:03,706 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:40:03,707 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:40:03,712 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:40:03,712 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:40:03,729 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:40:04,124 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:40:04,130 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:40:04,130 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:40:04,130 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:40:04,221 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:40:04,221 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1037 ms
2021-12-09 05:40:04,309 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:40:04,330 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:40:04,431 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:40:04,454 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7c11d32
2021-12-09 05:40:04,455 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7c11d32
2021-12-09 05:40:04,455 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c11d32
2021-12-09 05:40:04,456 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@707865bd
2021-12-09 05:40:04,458 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@67688110
2021-12-09 05:40:04,459 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@42297bdf
2021-12-09 05:40:04,461 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@1f15e689
2021-12-09 05:40:04,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@1f15e689
2021-12-09 05:40:04,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1f15e689
2021-12-09 05:40:04,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@58feb6b0
2021-12-09 05:40:04,463 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@58feb6b0
2021-12-09 05:40:04,463 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@58feb6b0
2021-12-09 05:40:04,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@14c99bf6
2021-12-09 05:40:04,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@14c99bf6
2021-12-09 05:40:04,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14c99bf6
2021-12-09 05:40:04,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@445bce9a
2021-12-09 05:40:04,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@445bce9a
2021-12-09 05:40:04,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@445bce9a
2021-12-09 05:40:04,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6ffd4c0d
2021-12-09 05:40:04,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6ffd4c0d
2021-12-09 05:40:04,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ffd4c0d
2021-12-09 05:40:04,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@f723cdb
2021-12-09 05:40:04,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@f723cdb
2021-12-09 05:40:04,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f723cdb
2021-12-09 05:40:04,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2cfe272f
2021-12-09 05:40:04,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2cfe272f
2021-12-09 05:40:04,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2cfe272f
2021-12-09 05:40:04,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@380ce5a3
2021-12-09 05:40:04,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@380ce5a3
2021-12-09 05:40:04,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c88191b
2021-12-09 05:40:04,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c88191b
2021-12-09 05:40:04,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@5bc63e20
2021-12-09 05:40:04,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@5bc63e20
2021-12-09 05:40:04,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@d5e575c
2021-12-09 05:40:04,482 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7ed49a7f
2021-12-09 05:40:04,482 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5e5ddfbc
2021-12-09 05:40:04,483 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e5ddfbc
2021-12-09 05:40:04,483 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@13213f26
2021-12-09 05:40:04,483 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13213f26
2021-12-09 05:40:04,484 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@402f8592
2021-12-09 05:40:04,484 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@402f8592
2021-12-09 05:40:04,485 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6403a4a5
2021-12-09 05:40:04,485 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6403a4a5
2021-12-09 05:40:04,485 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@559af296
2021-12-09 05:40:04,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@559af296
2021-12-09 05:40:04,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@268c030f
2021-12-09 05:40:04,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@268c030f
2021-12-09 05:40:04,487 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@113f9078
2021-12-09 05:40:04,487 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@113f9078
2021-12-09 05:40:04,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3f857e08
2021-12-09 05:40:04,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3f857e08
2021-12-09 05:40:04,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49671897
2021-12-09 05:40:04,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49671897
2021-12-09 05:40:04,490 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@4026461d
2021-12-09 05:40:04,490 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4026461d
2021-12-09 05:40:04,491 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@4b195203
2021-12-09 05:40:04,491 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b195203
2021-12-09 05:40:04,492 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f081b5d
2021-12-09 05:40:04,492 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f081b5d
2021-12-09 05:40:04,492 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f081b5d
2021-12-09 05:40:04,493 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@265c1a7c
2021-12-09 05:40:04,494 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@6f930e0
2021-12-09 05:40:04,494 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f930e0
2021-12-09 05:40:04,494 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f930e0
2021-12-09 05:40:04,494 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d2c345d
2021-12-09 05:40:04,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@32507479
2021-12-09 05:40:04,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@6a98f353
2021-12-09 05:40:04,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a98f353
2021-12-09 05:40:04,496 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@3830b06c
2021-12-09 05:40:04,496 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3830b06c
2021-12-09 05:40:04,496 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c7e73c5
2021-12-09 05:40:04,497 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c7e73c5
2021-12-09 05:40:04,497 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@42fc4ac4
2021-12-09 05:40:04,497 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@42fc4ac4
2021-12-09 05:40:04,498 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@764fffa0
2021-12-09 05:40:04,498 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@764fffa0
2021-12-09 05:40:04,498 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18e4674d
2021-12-09 05:40:04,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@1e1e837d
2021-12-09 05:40:04,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e1e837d
2021-12-09 05:40:04,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@1e1e837d
2021-12-09 05:40:04,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7ab2a07e
2021-12-09 05:40:04,500 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7ab2a07e
2021-12-09 05:40:04,500 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7ab2a07e
2021-12-09 05:40:04,500 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@6f85ee02
2021-12-09 05:40:04,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@7b14c61
2021-12-09 05:40:04,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6b162ecc
2021-12-09 05:40:04,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b162ecc
2021-12-09 05:40:04,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6b162ecc
2021-12-09 05:40:04,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5600a5da
2021-12-09 05:40:04,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5600a5da
2021-12-09 05:40:04,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5600a5da
2021-12-09 05:40:04,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@40d848f9
2021-12-09 05:40:04,503 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@44bc2449
2021-12-09 05:40:04,504 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@501957bf
2021-12-09 05:40:04,504 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@501957bf
2021-12-09 05:40:04,504 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c742b84
2021-12-09 05:40:04,505 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2bebd114
2021-12-09 05:40:04,505 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2bebd114
2021-12-09 05:40:04,506 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@79ecc507
2021-12-09 05:40:04,506 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79ecc507
2021-12-09 05:40:04,506 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41def031
2021-12-09 05:40:04,506 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7f0f84d4
2021-12-09 05:40:04,507 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@dbed7fd
2021-12-09 05:40:04,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@26c8b296
2021-12-09 05:40:04,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@26c8b296
2021-12-09 05:40:04,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:40:04,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:40:04,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:40:04,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:40:04,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:40:04,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:40:04,509 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:40:04,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@340cb97f
2021-12-09 05:40:04,527 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:40:04,786 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:40:04,792 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:40:04,825 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e154848] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16ea0f22]
2021-12-09 05:40:04,929 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e154848] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@55c03e4]
2021-12-09 05:40:05,174 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:40:05,178 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@55c03e4] for TypeConfiguration
2021-12-09 05:40:05,179 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:40:05,728 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:40:05,908 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:40:06,120 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:40:06,125 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:40:06,136 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.217 seconds (JVM running for 3.705)
2021-12-09 05:40:10,298 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:40:10,298 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:40:10,299 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 05:40:10,339 [http-nio-5050-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; nested exception is java.lang.NumberFormatException: For input string: "merci"]
2021-12-09 05:40:40,914 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:40:40,915 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@55c03e4] for TypeConfiguration
2021-12-09 05:40:40,915 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7d05f0f7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@55c03e4]
2021-12-09 05:40:40,917 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:40:40,921 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:40:44,893 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34354 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:40:44,894 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:40:44,895 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:40:45,250 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:40:45,250 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:40:45,257 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:40:45,381 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:40:45,382 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:40:45,399 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:40:45,400 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:40:45,401 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:40:45,409 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:40:45,421 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 39 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:40:45,425 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:40:45,425 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:40:45,430 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:40:45,430 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:40:45,431 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:40:45,432 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:40:45,432 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:40:45,438 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:40:45,438 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:40:45,456 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:40:45,868 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:40:45,874 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:40:45,875 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:40:45,875 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:40:45,951 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:40:45,951 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1027 ms
2021-12-09 05:40:46,068 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:40:46,105 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:40:46,209 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:40:46,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@2f9dda71
2021-12-09 05:40:46,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@2f9dda71
2021-12-09 05:40:46,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f9dda71
2021-12-09 05:40:46,228 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@31f77791
2021-12-09 05:40:46,228 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d293993
2021-12-09 05:40:46,228 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@66e827a8
2021-12-09 05:40:46,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@195113de
2021-12-09 05:40:46,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@195113de
2021-12-09 05:40:46,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195113de
2021-12-09 05:40:46,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@66d25ba9
2021-12-09 05:40:46,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@66d25ba9
2021-12-09 05:40:46,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66d25ba9
2021-12-09 05:40:46,231 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@266e9dda
2021-12-09 05:40:46,231 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@266e9dda
2021-12-09 05:40:46,231 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@266e9dda
2021-12-09 05:40:46,231 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@7db40fd5
2021-12-09 05:40:46,232 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@7db40fd5
2021-12-09 05:40:46,232 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7db40fd5
2021-12-09 05:40:46,232 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@74c9e11
2021-12-09 05:40:46,233 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@74c9e11
2021-12-09 05:40:46,233 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74c9e11
2021-12-09 05:40:46,233 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@4844930a
2021-12-09 05:40:46,233 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@4844930a
2021-12-09 05:40:46,233 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4844930a
2021-12-09 05:40:46,234 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2f95653f
2021-12-09 05:40:46,234 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2f95653f
2021-12-09 05:40:46,234 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f95653f
2021-12-09 05:40:46,235 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38029686
2021-12-09 05:40:46,235 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38029686
2021-12-09 05:40:46,236 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@74960e9d
2021-12-09 05:40:46,236 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@74960e9d
2021-12-09 05:40:46,236 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@61037caf
2021-12-09 05:40:46,236 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@61037caf
2021-12-09 05:40:46,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7742a45c
2021-12-09 05:40:46,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1cd6b1bd
2021-12-09 05:40:46,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5bda157e
2021-12-09 05:40:46,238 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5bda157e
2021-12-09 05:40:46,238 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@4e4162bc
2021-12-09 05:40:46,238 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4e4162bc
2021-12-09 05:40:46,239 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@61b65d54
2021-12-09 05:40:46,239 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@61b65d54
2021-12-09 05:40:46,239 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3dbd7107
2021-12-09 05:40:46,239 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3dbd7107
2021-12-09 05:40:46,240 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5edc3e29
2021-12-09 05:40:46,240 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5edc3e29
2021-12-09 05:40:46,241 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4b87760e
2021-12-09 05:40:46,241 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4b87760e
2021-12-09 05:40:46,241 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c1503a3
2021-12-09 05:40:46,241 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c1503a3
2021-12-09 05:40:46,242 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6070775e
2021-12-09 05:40:46,242 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6070775e
2021-12-09 05:40:46,242 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@168142da
2021-12-09 05:40:46,243 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@168142da
2021-12-09 05:40:46,244 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@191c6e13
2021-12-09 05:40:46,244 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@191c6e13
2021-12-09 05:40:46,244 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@28a6e171
2021-12-09 05:40:46,245 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28a6e171
2021-12-09 05:40:46,245 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@474749b8
2021-12-09 05:40:46,245 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@474749b8
2021-12-09 05:40:46,246 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@474749b8
2021-12-09 05:40:46,246 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b2b8d86
2021-12-09 05:40:46,247 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@450f0235
2021-12-09 05:40:46,247 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@450f0235
2021-12-09 05:40:46,247 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@450f0235
2021-12-09 05:40:46,247 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@217dc48e
2021-12-09 05:40:46,248 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@632383b9
2021-12-09 05:40:46,248 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@3b35798
2021-12-09 05:40:46,248 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3b35798
2021-12-09 05:40:46,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@3e28d779
2021-12-09 05:40:46,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e28d779
2021-12-09 05:40:46,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@13cc0b90
2021-12-09 05:40:46,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13cc0b90
2021-12-09 05:40:46,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@20a24edf
2021-12-09 05:40:46,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20a24edf
2021-12-09 05:40:46,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@35145874
2021-12-09 05:40:46,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@35145874
2021-12-09 05:40:46,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f245bdd
2021-12-09 05:40:46,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@4b957db0
2021-12-09 05:40:46,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@4b957db0
2021-12-09 05:40:46,251 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@4b957db0
2021-12-09 05:40:46,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@437c4b25
2021-12-09 05:40:46,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@437c4b25
2021-12-09 05:40:46,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@437c4b25
2021-12-09 05:40:46,253 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@679d0be8
2021-12-09 05:40:46,253 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@8fcc534
2021-12-09 05:40:46,253 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3b4086c1
2021-12-09 05:40:46,253 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b4086c1
2021-12-09 05:40:46,253 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3b4086c1
2021-12-09 05:40:46,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@551be9f6
2021-12-09 05:40:46,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@551be9f6
2021-12-09 05:40:46,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@551be9f6
2021-12-09 05:40:46,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@4a864d4d
2021-12-09 05:40:46,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3c28e5b6
2021-12-09 05:40:46,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@5d1d9d73
2021-12-09 05:40:46,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d1d9d73
2021-12-09 05:40:46,256 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5db3d57c
2021-12-09 05:40:46,257 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@b379bc6
2021-12-09 05:40:46,257 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b379bc6
2021-12-09 05:40:46,257 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@6ef2f7ad
2021-12-09 05:40:46,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6ef2f7ad
2021-12-09 05:40:46,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@38e83838
2021-12-09 05:40:46,258 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6df4af5
2021-12-09 05:40:46,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@250d440
2021-12-09 05:40:46,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1d289d3f
2021-12-09 05:40:46,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d289d3f
2021-12-09 05:40:46,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:40:46,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:40:46,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:40:46,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:40:46,261 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:40:46,261 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:40:46,261 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@340cb97f
2021-12-09 05:40:46,261 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a1568d6
2021-12-09 05:40:46,297 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:40:46,560 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:40:46,571 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:40:46,610 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16ea0f22] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@60fc7f43]
2021-12-09 05:40:46,720 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16ea0f22] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@14df5253]
2021-12-09 05:40:46,989 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:40:46,993 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@14df5253] for TypeConfiguration
2021-12-09 05:40:46,994 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:40:47,709 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:40:47,891 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:40:48,099 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:40:48,105 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:40:48,115 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.459 seconds (JVM running for 3.971)
2021-12-09 05:40:50,641 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:40:50,641 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:40:50,644 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 3 ms
2021-12-09 05:40:50,728 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]; nested exception is java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]] with root cause
java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]
	at org.hibernate.query.internal.ParameterMetadataImpl.getNamedParameterDescriptor(ParameterMetadataImpl.java:229)
	at org.hibernate.query.internal.ParameterMetadataImpl.getQueryParameter(ParameterMetadataImpl.java:198)
	at org.hibernate.query.internal.QueryParameterBindingsImpl.getBinding(QueryParameterBindingsImpl.java:189)
	at org.hibernate.query.internal.AbstractProducedQuery.setParameter(AbstractProducedQuery.java:494)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:646)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:65)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$BindableQuery.setParameter(QueryParameterSetter.java:327)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.lambda$setParameter$4(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$ErrorHandling$1.execute(QueryParameterSetter.java:141)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.setParameter(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:82)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:74)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bindAndPrepare(ParameterBinder.java:95)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:227)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:239)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy107.updateTopic(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.updateTopic(TopicServiceImpl.java:33)
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:41:20,660 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:41:20,661 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@14df5253] for TypeConfiguration
2021-12-09 05:41:20,661 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2a61d0c9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@14df5253]
2021-12-09 05:41:20,664 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:41:20,667 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:41:24,445 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34425 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:41:24,446 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:41:24,447 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:41:24,818 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:41:24,818 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:41:24,825 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:41:24,951 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:41:24,951 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:41:24,968 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:41:24,970 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:41:24,971 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:41:24,978 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:41:24,990 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 38 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:41:24,993 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:41:24,994 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:41:24,998 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:41:24,998 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:41:24,998 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:41:24,999 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:41:25,000 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:41:25,005 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:41:25,006 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:41:25,023 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
2021-12-09 05:41:25,425 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:41:25,431 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:41:25,431 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:41:25,431 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:41:25,504 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:41:25,504 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1028 ms
2021-12-09 05:41:25,593 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:41:25,614 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:41:25,713 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:41:25,735 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@2f9dda71
2021-12-09 05:41:25,736 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@2f9dda71
2021-12-09 05:41:25,736 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f9dda71
2021-12-09 05:41:25,737 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@31f77791
2021-12-09 05:41:25,737 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d293993
2021-12-09 05:41:25,738 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@66e827a8
2021-12-09 05:41:25,740 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@195113de
2021-12-09 05:41:25,741 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@195113de
2021-12-09 05:41:25,741 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@195113de
2021-12-09 05:41:25,742 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@66d25ba9
2021-12-09 05:41:25,742 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@66d25ba9
2021-12-09 05:41:25,742 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66d25ba9
2021-12-09 05:41:25,743 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@266e9dda
2021-12-09 05:41:25,743 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@266e9dda
2021-12-09 05:41:25,743 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@266e9dda
2021-12-09 05:41:25,744 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@7db40fd5
2021-12-09 05:41:25,745 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@7db40fd5
2021-12-09 05:41:25,746 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7db40fd5
2021-12-09 05:41:25,747 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@74c9e11
2021-12-09 05:41:25,747 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@74c9e11
2021-12-09 05:41:25,748 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74c9e11
2021-12-09 05:41:25,749 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@4844930a
2021-12-09 05:41:25,749 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@4844930a
2021-12-09 05:41:25,750 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4844930a
2021-12-09 05:41:25,751 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2f95653f
2021-12-09 05:41:25,751 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2f95653f
2021-12-09 05:41:25,751 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f95653f
2021-12-09 05:41:25,752 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@38029686
2021-12-09 05:41:25,752 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@38029686
2021-12-09 05:41:25,753 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@74960e9d
2021-12-09 05:41:25,753 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@74960e9d
2021-12-09 05:41:25,754 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@61037caf
2021-12-09 05:41:25,754 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@61037caf
2021-12-09 05:41:25,755 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7742a45c
2021-12-09 05:41:25,755 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1cd6b1bd
2021-12-09 05:41:25,756 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5bda157e
2021-12-09 05:41:25,756 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5bda157e
2021-12-09 05:41:25,757 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@4e4162bc
2021-12-09 05:41:25,757 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4e4162bc
2021-12-09 05:41:25,758 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@61b65d54
2021-12-09 05:41:25,758 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@61b65d54
2021-12-09 05:41:25,758 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3dbd7107
2021-12-09 05:41:25,759 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3dbd7107
2021-12-09 05:41:25,759 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5edc3e29
2021-12-09 05:41:25,759 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5edc3e29
2021-12-09 05:41:25,760 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4b87760e
2021-12-09 05:41:25,760 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4b87760e
2021-12-09 05:41:25,761 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c1503a3
2021-12-09 05:41:25,761 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7c1503a3
2021-12-09 05:41:25,761 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6070775e
2021-12-09 05:41:25,761 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6070775e
2021-12-09 05:41:25,762 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@168142da
2021-12-09 05:41:25,762 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@168142da
2021-12-09 05:41:25,764 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@191c6e13
2021-12-09 05:41:25,764 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@191c6e13
2021-12-09 05:41:25,764 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@28a6e171
2021-12-09 05:41:25,765 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28a6e171
2021-12-09 05:41:25,765 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@474749b8
2021-12-09 05:41:25,766 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@474749b8
2021-12-09 05:41:25,766 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@474749b8
2021-12-09 05:41:25,766 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5b2b8d86
2021-12-09 05:41:25,767 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@450f0235
2021-12-09 05:41:25,767 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@450f0235
2021-12-09 05:41:25,767 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@450f0235
2021-12-09 05:41:25,768 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@217dc48e
2021-12-09 05:41:25,768 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@632383b9
2021-12-09 05:41:25,769 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@3b35798
2021-12-09 05:41:25,769 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3b35798
2021-12-09 05:41:25,770 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@3e28d779
2021-12-09 05:41:25,770 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e28d779
2021-12-09 05:41:25,770 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@13cc0b90
2021-12-09 05:41:25,770 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13cc0b90
2021-12-09 05:41:25,771 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@20a24edf
2021-12-09 05:41:25,771 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20a24edf
2021-12-09 05:41:25,771 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@35145874
2021-12-09 05:41:25,772 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@35145874
2021-12-09 05:41:25,772 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f245bdd
2021-12-09 05:41:25,773 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@4b957db0
2021-12-09 05:41:25,773 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@4b957db0
2021-12-09 05:41:25,773 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@4b957db0
2021-12-09 05:41:25,773 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@437c4b25
2021-12-09 05:41:25,773 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@437c4b25
2021-12-09 05:41:25,774 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@437c4b25
2021-12-09 05:41:25,774 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@679d0be8
2021-12-09 05:41:25,774 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@8fcc534
2021-12-09 05:41:25,775 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@3b4086c1
2021-12-09 05:41:25,775 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@3b4086c1
2021-12-09 05:41:25,775 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@3b4086c1
2021-12-09 05:41:25,776 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@551be9f6
2021-12-09 05:41:25,776 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@551be9f6
2021-12-09 05:41:25,776 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@551be9f6
2021-12-09 05:41:25,776 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@4a864d4d
2021-12-09 05:41:25,776 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3c28e5b6
2021-12-09 05:41:25,777 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@5d1d9d73
2021-12-09 05:41:25,777 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d1d9d73
2021-12-09 05:41:25,778 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5db3d57c
2021-12-09 05:41:25,779 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@b379bc6
2021-12-09 05:41:25,779 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b379bc6
2021-12-09 05:41:25,779 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@6ef2f7ad
2021-12-09 05:41:25,780 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6ef2f7ad
2021-12-09 05:41:25,780 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@38e83838
2021-12-09 05:41:25,780 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6df4af5
2021-12-09 05:41:25,781 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@250d440
2021-12-09 05:41:25,782 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1d289d3f
2021-12-09 05:41:25,782 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d289d3f
2021-12-09 05:41:25,783 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:41:25,783 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:41:25,783 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:41:25,783 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:41:25,783 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:41:25,783 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:41:25,783 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@340cb97f
2021-12-09 05:41:25,783 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a1568d6
2021-12-09 05:41:25,801 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:41:26,043 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:41:26,050 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:41:26,089 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16ea0f22] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@60fc7f43]
2021-12-09 05:41:26,197 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16ea0f22] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@14df5253]
2021-12-09 05:41:26,439 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:41:26,444 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@14df5253] for TypeConfiguration
2021-12-09 05:41:26,445 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:41:26,920 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:41:27,070 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:41:27,253 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:41:27,259 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:41:27,269 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.061 seconds (JVM running for 3.579)
2021-12-09 05:41:30,692 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:41:30,693 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:41:30,696 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 3 ms
2021-12-09 05:41:30,789 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]; nested exception is java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]] with root cause
java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]
	at org.hibernate.query.internal.ParameterMetadataImpl.getNamedParameterDescriptor(ParameterMetadataImpl.java:229)
	at org.hibernate.query.internal.ParameterMetadataImpl.getQueryParameter(ParameterMetadataImpl.java:198)
	at org.hibernate.query.internal.QueryParameterBindingsImpl.getBinding(QueryParameterBindingsImpl.java:189)
	at org.hibernate.query.internal.AbstractProducedQuery.setParameter(AbstractProducedQuery.java:494)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:646)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:65)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$BindableQuery.setParameter(QueryParameterSetter.java:327)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.lambda$setParameter$4(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$ErrorHandling$1.execute(QueryParameterSetter.java:141)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.setParameter(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:82)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:74)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bindAndPrepare(ParameterBinder.java:95)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:227)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:239)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy107.updateTopic(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.updateTopic(TopicServiceImpl.java:33)
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:42:35,334 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:42:35,334 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@14df5253] for TypeConfiguration
2021-12-09 05:42:35,334 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@74c76b1a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@14df5253]
2021-12-09 05:42:35,336 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:42:35,340 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:42:37,552 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34537 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:42:37,555 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:42:37,556 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:42:38,040 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:42:38,041 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:42:38,047 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 4 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:42:38,170 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:42:38,170 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:42:38,188 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:42:38,189 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:42:38,190 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:42:38,199 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:42:38,211 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 40 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:42:38,214 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:42:38,214 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:42:38,218 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:42:38,219 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:42:38,219 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:42:38,220 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:42:38,221 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 6 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:42:38,226 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:42:38,226 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:42:38,251 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
2021-12-09 05:42:38,648 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:42:38,656 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:42:38,657 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:42:38,657 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:42:38,735 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:42:38,736 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1130 ms
2021-12-09 05:42:38,886 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:42:38,938 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:42:39,048 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:42:39,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:42:39,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:42:39,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b5f9003
2021-12-09 05:42:39,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f5fcfe9
2021-12-09 05:42:39,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@548e43b1
2021-12-09 05:42:39,071 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@616a06e3
2021-12-09 05:42:39,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:42:39,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:42:39,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@25974207
2021-12-09 05:42:39,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:42:39,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:42:39,073 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5aa781f2
2021-12-09 05:42:39,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:42:39,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:42:39,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@38a4e2b0
2021-12-09 05:42:39,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:42:39,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:42:39,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@541afb85
2021-12-09 05:42:39,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:42:39,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:42:39,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34c53688
2021-12-09 05:42:39,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:42:39,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:42:39,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8c12524
2021-12-09 05:42:39,077 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:42:39,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:42:39,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62c3f556
2021-12-09 05:42:39,078 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31efacad
2021-12-09 05:42:39,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31efacad
2021-12-09 05:42:39,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d124d29
2021-12-09 05:42:39,079 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d124d29
2021-12-09 05:42:39,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@7926352f
2021-12-09 05:42:39,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@7926352f
2021-12-09 05:42:39,080 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@670342a2
2021-12-09 05:42:39,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@14fc9bd
2021-12-09 05:42:39,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@6aa5974e
2021-12-09 05:42:39,081 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6aa5974e
2021-12-09 05:42:39,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7a388990
2021-12-09 05:42:39,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7a388990
2021-12-09 05:42:39,082 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@6db328f8
2021-12-09 05:42:39,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6db328f8
2021-12-09 05:42:39,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@790d8fdd
2021-12-09 05:42:39,083 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@790d8fdd
2021-12-09 05:42:39,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5a090f62
2021-12-09 05:42:39,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5a090f62
2021-12-09 05:42:39,084 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2b877a54
2021-12-09 05:42:39,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2b877a54
2021-12-09 05:42:39,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2df65a56
2021-12-09 05:42:39,085 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2df65a56
2021-12-09 05:42:39,086 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2e56b4d
2021-12-09 05:42:39,086 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2e56b4d
2021-12-09 05:42:39,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@805e72e
2021-12-09 05:42:39,087 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@805e72e
2021-12-09 05:42:39,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@45d56062
2021-12-09 05:42:39,088 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@45d56062
2021-12-09 05:42:39,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@77cca767
2021-12-09 05:42:39,089 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77cca767
2021-12-09 05:42:39,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:42:39,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:42:39,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f884bd6
2021-12-09 05:42:39,090 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@29013ef2
2021-12-09 05:42:39,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:42:39,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:42:39,091 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c412556
2021-12-09 05:42:39,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64021427
2021-12-09 05:42:39,092 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6d0290d8
2021-12-09 05:42:39,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@209f3887
2021-12-09 05:42:39,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@209f3887
2021-12-09 05:42:39,093 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@685f5d0d
2021-12-09 05:42:39,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@685f5d0d
2021-12-09 05:42:39,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d9618f2
2021-12-09 05:42:39,094 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d9618f2
2021-12-09 05:42:39,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@525647f3
2021-12-09 05:42:39,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@525647f3
2021-12-09 05:42:39,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43a4a9e5
2021-12-09 05:42:39,095 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43a4a9e5
2021-12-09 05:42:39,096 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11df2829
2021-12-09 05:42:39,096 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:42:39,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:42:39,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@5c313224
2021-12-09 05:42:39,097 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:42:39,098 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:42:39,098 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@527a8665
2021-12-09 05:42:39,099 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f8a9454
2021-12-09 05:42:39,099 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@47044f7d
2021-12-09 05:42:39,099 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:42:39,099 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:42:39,100 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@4a642e4b
2021-12-09 05:42:39,100 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:42:39,100 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:42:39,100 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5eed6dfb
2021-12-09 05:42:39,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@13250132
2021-12-09 05:42:39,101 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@46a123e4
2021-12-09 05:42:39,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@2faa55bb
2021-12-09 05:42:39,102 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2faa55bb
2021-12-09 05:42:39,103 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@764a3e5d
2021-12-09 05:42:39,104 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@3c7279a5
2021-12-09 05:42:39,104 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c7279a5
2021-12-09 05:42:39,105 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@3709748f
2021-12-09 05:42:39,106 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3709748f
2021-12-09 05:42:39,106 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e85c21b
2021-12-09 05:42:39,106 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4966bab1
2021-12-09 05:42:39,107 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@1b52699c
2021-12-09 05:42:39,109 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@44d7e24
2021-12-09 05:42:39,109 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44d7e24
2021-12-09 05:42:39,110 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:42:39,110 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:42:39,110 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:42:39,110 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:42:39,110 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:42:39,110 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:42:39,111 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:42:39,111 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:42:39,141 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:42:39,427 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:42:39,438 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:42:39,480 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6903ed0e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@e154848]
2021-12-09 05:42:39,597 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6903ed0e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@c82d925]
2021-12-09 05:42:39,849 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:42:39,853 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@c82d925] for TypeConfiguration
2021-12-09 05:42:39,855 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:42:40,414 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:42:40,598 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:42:40,808 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:42:40,814 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:42:40,823 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.812 seconds (JVM running for 4.763)
2021-12-09 05:42:49,081 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:42:49,082 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:42:49,084 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 2 ms
2021-12-09 05:42:49,175 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]; nested exception is java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]] with root cause
java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]
	at org.hibernate.query.internal.ParameterMetadataImpl.getNamedParameterDescriptor(ParameterMetadataImpl.java:229)
	at org.hibernate.query.internal.ParameterMetadataImpl.getQueryParameter(ParameterMetadataImpl.java:198)
	at org.hibernate.query.internal.QueryParameterBindingsImpl.getBinding(QueryParameterBindingsImpl.java:189)
	at org.hibernate.query.internal.AbstractProducedQuery.setParameter(AbstractProducedQuery.java:494)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:646)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:65)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$BindableQuery.setParameter(QueryParameterSetter.java:327)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.lambda$setParameter$4(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$ErrorHandling$1.execute(QueryParameterSetter.java:141)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.setParameter(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:82)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:74)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bindAndPrepare(ParameterBinder.java:95)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:227)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:239)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy107.updateTopic(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.updateTopic(TopicServiceImpl.java:33)
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:42:51,758 [http-nio-5050-exec-4] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]; nested exception is java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]] with root cause
java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]
	at org.hibernate.query.internal.ParameterMetadataImpl.getNamedParameterDescriptor(ParameterMetadataImpl.java:229)
	at org.hibernate.query.internal.ParameterMetadataImpl.getQueryParameter(ParameterMetadataImpl.java:198)
	at org.hibernate.query.internal.QueryParameterBindingsImpl.getBinding(QueryParameterBindingsImpl.java:189)
	at org.hibernate.query.internal.AbstractProducedQuery.setParameter(AbstractProducedQuery.java:494)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:646)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:65)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$BindableQuery.setParameter(QueryParameterSetter.java:327)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.lambda$setParameter$4(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$ErrorHandling$1.execute(QueryParameterSetter.java:141)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.setParameter(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:82)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:74)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bindAndPrepare(ParameterBinder.java:95)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:227)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:239)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy107.updateTopic(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.updateTopic(TopicServiceImpl.java:33)
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:44:37,474 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:44:37,475 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@c82d925] for TypeConfiguration
2021-12-09 05:44:37,476 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4a5812c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@c82d925]
2021-12-09 05:44:37,482 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:44:37,490 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:44:45,399 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34670 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:44:45,402 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:44:45,403 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:44:46,192 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:44:46,194 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:44:46,208 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 8 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:44:46,467 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:44:46,468 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:44:46,503 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:44:46,506 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:44:46,509 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:44:46,527 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:44:46,554 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 86 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:44:46,563 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:44:46,564 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:44:46,574 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:44:46,576 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:44:46,577 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:44:46,580 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:44:46,581 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 16 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:44:46,594 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:44:46,595 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:44:46,650 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.
2021-12-09 05:44:47,409 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:44:47,420 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:44:47,421 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:44:47,421 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:44:47,588 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:44:47,588 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 2123 ms
2021-12-09 05:44:47,830 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:44:47,892 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:44:48,069 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:44:48,106 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@781aff8b
2021-12-09 05:44:48,106 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@781aff8b
2021-12-09 05:44:48,106 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@781aff8b
2021-12-09 05:44:48,107 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4962b41e
2021-12-09 05:44:48,108 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c11d32
2021-12-09 05:44:48,109 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@707865bd
2021-12-09 05:44:48,111 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@5bb911c1
2021-12-09 05:44:48,111 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@5bb911c1
2021-12-09 05:44:48,111 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5bb911c1
2021-12-09 05:44:48,113 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@25974207
2021-12-09 05:44:48,113 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@25974207
2021-12-09 05:44:48,113 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@25974207
2021-12-09 05:44:48,114 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@5aa781f2
2021-12-09 05:44:48,115 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@5aa781f2
2021-12-09 05:44:48,116 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5aa781f2
2021-12-09 05:44:48,117 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@38a4e2b0
2021-12-09 05:44:48,117 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@38a4e2b0
2021-12-09 05:44:48,118 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@38a4e2b0
2021-12-09 05:44:48,119 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@541afb85
2021-12-09 05:44:48,120 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@541afb85
2021-12-09 05:44:48,120 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@541afb85
2021-12-09 05:44:48,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@34c53688
2021-12-09 05:44:48,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@34c53688
2021-12-09 05:44:48,121 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@34c53688
2021-12-09 05:44:48,123 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@8c12524
2021-12-09 05:44:48,123 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@8c12524
2021-12-09 05:44:48,124 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@8c12524
2021-12-09 05:44:48,125 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62c3f556
2021-12-09 05:44:48,125 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62c3f556
2021-12-09 05:44:48,126 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31efacad
2021-12-09 05:44:48,126 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31efacad
2021-12-09 05:44:48,128 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@5d124d29
2021-12-09 05:44:48,129 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@5d124d29
2021-12-09 05:44:48,131 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@fb5aeed
2021-12-09 05:44:48,133 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bc63e20
2021-12-09 05:44:48,134 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@14fc9bd
2021-12-09 05:44:48,135 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@14fc9bd
2021-12-09 05:44:48,136 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@6aa5974e
2021-12-09 05:44:48,137 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6aa5974e
2021-12-09 05:44:48,138 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@7a388990
2021-12-09 05:44:48,139 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7a388990
2021-12-09 05:44:48,140 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6db328f8
2021-12-09 05:44:48,140 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6db328f8
2021-12-09 05:44:48,141 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@790d8fdd
2021-12-09 05:44:48,142 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@790d8fdd
2021-12-09 05:44:48,143 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5a090f62
2021-12-09 05:44:48,143 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5a090f62
2021-12-09 05:44:48,144 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b877a54
2021-12-09 05:44:48,145 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2b877a54
2021-12-09 05:44:48,146 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2df65a56
2021-12-09 05:44:48,146 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2df65a56
2021-12-09 05:44:48,147 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2e56b4d
2021-12-09 05:44:48,148 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2e56b4d
2021-12-09 05:44:48,150 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@2afdf6b7
2021-12-09 05:44:48,151 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2afdf6b7
2021-12-09 05:44:48,152 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@7436364d
2021-12-09 05:44:48,152 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7436364d
2021-12-09 05:44:48,154 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@23444a36
2021-12-09 05:44:48,154 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@23444a36
2021-12-09 05:44:48,155 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@23444a36
2021-12-09 05:44:48,156 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2e0fdbe9
2021-12-09 05:44:48,157 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@7fef0b40
2021-12-09 05:44:48,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7fef0b40
2021-12-09 05:44:48,158 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7fef0b40
2021-12-09 05:44:48,159 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c412556
2021-12-09 05:44:48,160 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@64021427
2021-12-09 05:44:48,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@6d0290d8
2021-12-09 05:44:48,161 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d0290d8
2021-12-09 05:44:48,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@209f3887
2021-12-09 05:44:48,162 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@209f3887
2021-12-09 05:44:48,163 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@685f5d0d
2021-12-09 05:44:48,164 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@685f5d0d
2021-12-09 05:44:48,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@5d9618f2
2021-12-09 05:44:48,165 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d9618f2
2021-12-09 05:44:48,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@525647f3
2021-12-09 05:44:48,166 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@525647f3
2021-12-09 05:44:48,167 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@491f8831
2021-12-09 05:44:48,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@6af609ea
2021-12-09 05:44:48,168 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@6af609ea
2021-12-09 05:44:48,169 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@6af609ea
2021-12-09 05:44:48,170 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c313224
2021-12-09 05:44:48,170 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c313224
2021-12-09 05:44:48,170 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c313224
2021-12-09 05:44:48,172 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@527a8665
2021-12-09 05:44:48,172 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@580902cd
2021-12-09 05:44:48,173 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@47044f7d
2021-12-09 05:44:48,174 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@47044f7d
2021-12-09 05:44:48,174 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@47044f7d
2021-12-09 05:44:48,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4a642e4b
2021-12-09 05:44:48,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4a642e4b
2021-12-09 05:44:48,175 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4a642e4b
2021-12-09 05:44:48,176 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@33d7765a
2021-12-09 05:44:48,176 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@5600a5da
2021-12-09 05:44:48,178 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@7558c24b
2021-12-09 05:44:48,179 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7558c24b
2021-12-09 05:44:48,180 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@57151b3a
2021-12-09 05:44:48,182 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@53a50b0a
2021-12-09 05:44:48,183 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@53a50b0a
2021-12-09 05:44:48,184 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@374c40ba
2021-12-09 05:44:48,185 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@374c40ba
2021-12-09 05:44:48,185 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f882465
2021-12-09 05:44:48,186 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79ecc507
2021-12-09 05:44:48,187 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@590d6c76
2021-12-09 05:44:48,190 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@1edccfd4
2021-12-09 05:44:48,190 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1edccfd4
2021-12-09 05:44:48,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@69796bd0
2021-12-09 05:44:48,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40df6090
2021-12-09 05:44:48,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@8c0a23f
2021-12-09 05:44:48,191 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@44d7e24
2021-12-09 05:44:48,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@26c8b296
2021-12-09 05:44:48,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d289d3f
2021-12-09 05:44:48,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@10f405ff
2021-12-09 05:44:48,192 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f27f59b
2021-12-09 05:44:48,234 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:44:48,735 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:44:48,755 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:44:48,867 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@752973de] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@52a67293]
2021-12-09 05:44:49,124 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@752973de] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4571cebe]
2021-12-09 05:44:49,668 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:44:49,676 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4571cebe] for TypeConfiguration
2021-12-09 05:44:49,679 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:44:50,769 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:44:51,178 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:44:51,717 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:44:51,729 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:44:51,753 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 6.873 seconds (JVM running for 8.16)
2021-12-09 05:44:55,688 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:44:55,688 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:44:55,690 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 2 ms
2021-12-09 05:44:55,765 [http-nio-5050-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver        - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'long'; nested exception is java.lang.NumberFormatException: For input string: "merci"]
2021-12-09 05:45:11,955 [http-nio-5050-exec-4] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]; nested exception is java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]] with root cause
java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]
	at org.hibernate.query.internal.ParameterMetadataImpl.getNamedParameterDescriptor(ParameterMetadataImpl.java:229)
	at org.hibernate.query.internal.ParameterMetadataImpl.getQueryParameter(ParameterMetadataImpl.java:198)
	at org.hibernate.query.internal.QueryParameterBindingsImpl.getBinding(QueryParameterBindingsImpl.java:189)
	at org.hibernate.query.internal.AbstractProducedQuery.setParameter(AbstractProducedQuery.java:494)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:646)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:65)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$BindableQuery.setParameter(QueryParameterSetter.java:327)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.lambda$setParameter$4(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$ErrorHandling$1.execute(QueryParameterSetter.java:141)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.setParameter(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:82)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:74)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bindAndPrepare(ParameterBinder.java:95)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:227)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:239)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy107.updateTopic(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.updateTopic(TopicServiceImpl.java:33)
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:47:17,112 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:47:17,127 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4571cebe] for TypeConfiguration
2021-12-09 05:47:17,129 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@31fac5e1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4571cebe]
2021-12-09 05:47:17,151 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:47:17,178 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:47:49,223 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 34949 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:47:49,243 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:47:49,244 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:47:52,941 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:47:52,943 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:47:52,996 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 34 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:47:54,090 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:47:54,092 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:47:54,291 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:47:54,308 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:47:54,325 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:47:54,431 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:47:54,525 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 422 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:47:54,547 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:47:54,559 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:47:54,597 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:47:54,600 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:47:54,612 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:47:54,617 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:47:54,618 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 58 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:47:54,708 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:47:54,709 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:47:54,889 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 159 ms. Found 5 JPA repository interfaces.
2021-12-09 05:47:57,729 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:47:57,767 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:47:57,768 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:47:57,768 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:47:58,459 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:47:58,474 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 8865 ms
2021-12-09 05:47:59,370 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:47:59,619 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:48:00,258 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:48:00,384 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 05:48:00,385 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 05:48:00,385 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 05:48:00,386 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@650aa077
2021-12-09 05:48:00,388 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@372461a9
2021-12-09 05:48:00,389 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@3086f480
2021-12-09 05:48:00,402 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 05:48:00,403 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 05:48:00,403 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 05:48:00,405 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 05:48:00,406 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 05:48:00,406 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 05:48:00,408 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 05:48:00,409 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 05:48:00,409 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 05:48:00,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 05:48:00,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 05:48:00,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 05:48:00,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6bcae9
2021-12-09 05:48:00,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6bcae9
2021-12-09 05:48:00,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6bcae9
2021-12-09 05:48:00,438 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 05:48:00,439 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 05:48:00,439 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 05:48:00,442 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 05:48:00,443 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 05:48:00,443 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 05:48:00,445 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44b940a2
2021-12-09 05:48:00,457 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44b940a2
2021-12-09 05:48:00,459 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@72557746
2021-12-09 05:48:00,460 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@72557746
2021-12-09 05:48:00,462 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@6221b13b
2021-12-09 05:48:00,463 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@6221b13b
2021-12-09 05:48:00,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4052b19f
2021-12-09 05:48:00,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31efacad
2021-12-09 05:48:00,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5d124d29
2021-12-09 05:48:00,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d124d29
2021-12-09 05:48:00,494 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7926352f
2021-12-09 05:48:00,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7926352f
2021-12-09 05:48:00,500 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@7ca492d9
2021-12-09 05:48:00,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7ca492d9
2021-12-09 05:48:00,517 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@486e9d1d
2021-12-09 05:48:00,517 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@486e9d1d
2021-12-09 05:48:00,533 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a531422
2021-12-09 05:48:00,534 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a531422
2021-12-09 05:48:00,547 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d28fb02
2021-12-09 05:48:00,548 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d28fb02
2021-12-09 05:48:00,551 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@101cf747
2021-12-09 05:48:00,552 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@101cf747
2021-12-09 05:48:00,555 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@70b6db83
2021-12-09 05:48:00,566 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@70b6db83
2021-12-09 05:48:00,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@370ef50b
2021-12-09 05:48:00,571 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@370ef50b
2021-12-09 05:48:00,588 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@2a0ea492
2021-12-09 05:48:00,589 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a0ea492
2021-12-09 05:48:00,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@49671897
2021-12-09 05:48:00,603 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@49671897
2021-12-09 05:48:00,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 05:48:00,606 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 05:48:00,607 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 05:48:00,609 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@191c6e13
2021-12-09 05:48:00,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 05:48:00,623 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 05:48:00,624 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 05:48:00,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@696b52bc
2021-12-09 05:48:00,628 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5b2b8d86
2021-12-09 05:48:00,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@14b528b6
2021-12-09 05:48:00,640 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@14b528b6
2021-12-09 05:48:00,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@fbe70d8
2021-12-09 05:48:00,642 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fbe70d8
2021-12-09 05:48:00,644 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aea704c
2021-12-09 05:48:00,645 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aea704c
2021-12-09 05:48:00,646 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@7d1c164a
2021-12-09 05:48:00,657 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d1c164a
2021-12-09 05:48:00,658 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bb1337
2021-12-09 05:48:00,659 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bb1337
2021-12-09 05:48:00,660 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15214920
2021-12-09 05:48:00,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 05:48:00,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 05:48:00,663 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 05:48:00,675 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 05:48:00,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 05:48:00,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 05:48:00,678 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@f245bdd
2021-12-09 05:48:00,680 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@14b275bd
2021-12-09 05:48:00,681 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 05:48:00,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 05:48:00,682 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 05:48:00,694 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 05:48:00,695 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 05:48:00,696 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 05:48:00,698 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@7f8a9454
2021-12-09 05:48:00,713 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@47044f7d
2021-12-09 05:48:00,718 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@58aa1d72
2021-12-09 05:48:00,729 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58aa1d72
2021-12-09 05:48:00,750 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5eed6dfb
2021-12-09 05:48:00,784 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@3c28e5b6
2021-12-09 05:48:00,785 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c28e5b6
2021-12-09 05:48:00,788 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@5d1d9d73
2021-12-09 05:48:00,789 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d1d9d73
2021-12-09 05:48:00,790 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5db3d57c
2021-12-09 05:48:00,791 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7a84788f
2021-12-09 05:48:00,805 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@72ecbcb3
2021-12-09 05:48:00,810 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@25791d40
2021-12-09 05:48:00,821 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@25791d40
2021-12-09 05:48:00,822 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7abeabe9
2021-12-09 05:48:00,822 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a05dd30
2021-12-09 05:48:00,823 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b52699c
2021-12-09 05:48:00,823 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@dbed7fd
2021-12-09 05:48:00,823 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@250d440
2021-12-09 05:48:00,824 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76c86567
2021-12-09 05:48:00,824 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e5efcab
2021-12-09 05:48:00,824 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 05:48:01,079 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:48:02,774 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:48:02,884 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:48:03,373 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16e195cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3212d853]
2021-12-09 05:48:04,337 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16e195cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7a0f06ad]
2021-12-09 05:48:06,612 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:48:06,650 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7a0f06ad] for TypeConfiguration
2021-12-09 05:48:06,665 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:48:13,317 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:48:16,956 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:48:18,668 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:48:18,740 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:48:18,885 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 31.812 seconds (JVM running for 38.181)
2021-12-09 05:48:24,348 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:48:24,348 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:48:24,350 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 2 ms
2021-12-09 05:48:24,877 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]; nested exception is java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]] with root cause
java.lang.IllegalArgumentException: Could not locate named parameter [topicId], expecting one of [topicId;, newContent]
	at org.hibernate.query.internal.ParameterMetadataImpl.getNamedParameterDescriptor(ParameterMetadataImpl.java:229)
	at org.hibernate.query.internal.ParameterMetadataImpl.getQueryParameter(ParameterMetadataImpl.java:198)
	at org.hibernate.query.internal.QueryParameterBindingsImpl.getBinding(QueryParameterBindingsImpl.java:189)
	at org.hibernate.query.internal.AbstractProducedQuery.setParameter(AbstractProducedQuery.java:494)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:646)
	at org.hibernate.query.internal.NativeQueryImpl.setParameter(NativeQueryImpl.java:65)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$BindableQuery.setParameter(QueryParameterSetter.java:327)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.lambda$setParameter$4(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$ErrorHandling$1.execute(QueryParameterSetter.java:141)
	at org.springframework.data.jpa.repository.query.QueryParameterSetter$NamedOrIndexedQueryParameterSetter.setParameter(QueryParameterSetter.java:118)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:82)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bind(ParameterBinder.java:74)
	at org.springframework.data.jpa.repository.query.ParameterBinder.bindAndPrepare(ParameterBinder.java:95)
	at org.springframework.data.jpa.repository.query.AbstractStringBasedJpaQuery.doCreateQuery(AbstractStringBasedJpaQuery.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.createQuery(AbstractJpaQuery.java:227)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:239)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy107.updateTopic(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.updateTopic(TopicServiceImpl.java:33)
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:48:36,986 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:48:37,001 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7a0f06ad] for TypeConfiguration
2021-12-09 05:48:37,002 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@108f2a90] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7a0f06ad]
2021-12-09 05:48:37,052 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:48:37,090 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:49:13,758 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 35076 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:49:13,762 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:49:13,763 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:49:16,941 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:49:16,944 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:49:17,018 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 50 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:49:17,942 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:49:17,943 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:49:18,043 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:49:18,059 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:49:18,067 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:49:18,117 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:49:18,211 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 267 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:49:18,239 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:49:18,241 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:49:18,270 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:49:18,284 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:49:18,285 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:49:18,290 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:49:18,291 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 48 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:49:18,336 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:49:18,338 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:49:18,446 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 85 ms. Found 5 JPA repository interfaces.
2021-12-09 05:49:21,567 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:49:21,668 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:49:21,670 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:49:21,671 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:49:22,841 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:49:22,844 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 8806 ms
2021-12-09 05:49:23,743 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:49:23,896 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:49:24,315 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:49:24,396 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 05:49:24,397 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 05:49:24,397 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 05:49:24,398 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@650aa077
2021-12-09 05:49:24,399 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@372461a9
2021-12-09 05:49:24,401 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@3086f480
2021-12-09 05:49:24,403 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 05:49:24,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 05:49:24,404 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 05:49:24,416 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 05:49:24,417 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 05:49:24,418 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 05:49:24,419 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 05:49:24,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 05:49:24,420 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 05:49:24,422 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 05:49:24,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 05:49:24,423 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 05:49:24,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6bcae9
2021-12-09 05:49:24,425 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6bcae9
2021-12-09 05:49:24,426 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6bcae9
2021-12-09 05:49:24,427 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 05:49:24,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 05:49:24,428 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 05:49:24,441 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 05:49:24,442 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 05:49:24,442 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 05:49:24,443 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44b940a2
2021-12-09 05:49:24,444 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44b940a2
2021-12-09 05:49:24,446 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@72557746
2021-12-09 05:49:24,447 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@72557746
2021-12-09 05:49:24,448 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@6221b13b
2021-12-09 05:49:24,449 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@6221b13b
2021-12-09 05:49:24,451 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4052b19f
2021-12-09 05:49:24,453 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31efacad
2021-12-09 05:49:24,465 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5d124d29
2021-12-09 05:49:24,466 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d124d29
2021-12-09 05:49:24,468 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7926352f
2021-12-09 05:49:24,468 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7926352f
2021-12-09 05:49:24,470 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@7ca492d9
2021-12-09 05:49:24,471 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7ca492d9
2021-12-09 05:49:24,472 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@486e9d1d
2021-12-09 05:49:24,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@486e9d1d
2021-12-09 05:49:24,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a531422
2021-12-09 05:49:24,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a531422
2021-12-09 05:49:24,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d28fb02
2021-12-09 05:49:24,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d28fb02
2021-12-09 05:49:24,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@101cf747
2021-12-09 05:49:24,490 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@101cf747
2021-12-09 05:49:24,492 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@70b6db83
2021-12-09 05:49:24,492 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@70b6db83
2021-12-09 05:49:24,494 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@370ef50b
2021-12-09 05:49:24,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@370ef50b
2021-12-09 05:49:24,498 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@2a0ea492
2021-12-09 05:49:24,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a0ea492
2021-12-09 05:49:24,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@49671897
2021-12-09 05:49:24,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@49671897
2021-12-09 05:49:24,504 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 05:49:24,515 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 05:49:24,516 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 05:49:24,518 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@191c6e13
2021-12-09 05:49:24,520 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 05:49:24,521 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 05:49:24,521 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 05:49:24,522 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@696b52bc
2021-12-09 05:49:24,524 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5b2b8d86
2021-12-09 05:49:24,526 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@14b528b6
2021-12-09 05:49:24,526 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@14b528b6
2021-12-09 05:49:24,528 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@fbe70d8
2021-12-09 05:49:24,528 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fbe70d8
2021-12-09 05:49:24,541 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aea704c
2021-12-09 05:49:24,541 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aea704c
2021-12-09 05:49:24,543 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@7d1c164a
2021-12-09 05:49:24,543 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d1c164a
2021-12-09 05:49:24,545 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bb1337
2021-12-09 05:49:24,545 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bb1337
2021-12-09 05:49:24,546 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15214920
2021-12-09 05:49:24,549 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 05:49:24,549 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 05:49:24,550 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 05:49:24,552 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 05:49:24,553 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 05:49:24,553 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 05:49:24,566 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@f245bdd
2021-12-09 05:49:24,568 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@14b275bd
2021-12-09 05:49:24,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 05:49:24,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 05:49:24,570 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 05:49:24,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 05:49:24,572 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 05:49:24,573 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 05:49:24,574 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@7f8a9454
2021-12-09 05:49:24,575 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@47044f7d
2021-12-09 05:49:24,590 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@58aa1d72
2021-12-09 05:49:24,591 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58aa1d72
2021-12-09 05:49:24,594 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5eed6dfb
2021-12-09 05:49:24,600 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@3c28e5b6
2021-12-09 05:49:24,601 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c28e5b6
2021-12-09 05:49:24,617 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@5d1d9d73
2021-12-09 05:49:24,619 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d1d9d73
2021-12-09 05:49:24,625 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5db3d57c
2021-12-09 05:49:24,653 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7a84788f
2021-12-09 05:49:24,676 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@72ecbcb3
2021-12-09 05:49:24,699 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@25791d40
2021-12-09 05:49:24,701 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@25791d40
2021-12-09 05:49:24,703 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7abeabe9
2021-12-09 05:49:24,703 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a05dd30
2021-12-09 05:49:24,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b52699c
2021-12-09 05:49:24,704 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@dbed7fd
2021-12-09 05:49:24,715 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@250d440
2021-12-09 05:49:24,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76c86567
2021-12-09 05:49:24,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e5efcab
2021-12-09 05:49:24,716 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 05:49:24,841 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:49:26,981 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:49:27,027 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:49:27,295 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16e195cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3212d853]
2021-12-09 05:49:28,401 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16e195cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7a0f06ad]
2021-12-09 05:49:30,532 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:49:30,578 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7a0f06ad] for TypeConfiguration
2021-12-09 05:49:30,584 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:49:34,905 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:49:36,138 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:49:37,294 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:49:37,331 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:49:37,384 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 26.349 seconds (JVM running for 30.477)
2021-12-09 05:49:49,710 [http-nio-5050-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:49:49,710 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:49:49,712 [http-nio-5050-exec-1] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 2 ms
2021-12-09 05:49:50,054 [http-nio-5050-exec-1] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query] with root cause
javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:422)
	at org.hibernate.query.internal.AbstractProducedQuery.executeUpdate(AbstractProducedQuery.java:1679)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:239)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy107.updateTopic(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.updateTopic(TopicServiceImpl.java:33)
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 05:50:16,615 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:50:16,621 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7a0f06ad] for TypeConfiguration
2021-12-09 05:50:16,621 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@dbbb38e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7a0f06ad]
2021-12-09 05:50:16,625 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:50:16,637 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:50:29,318 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 35203 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:50:29,327 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:50:29,327 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:50:30,772 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:50:30,774 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:50:30,800 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 17 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:50:31,236 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:50:31,236 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:50:31,296 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:50:31,300 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:50:31,308 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:50:31,335 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:50:31,380 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 142 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:50:31,395 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:50:31,397 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:50:31,411 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:50:31,412 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:50:31,414 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:50:31,418 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:50:31,419 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:50:31,443 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:50:31,444 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:50:31,522 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 66 ms. Found 5 JPA repository interfaces.
2021-12-09 05:50:32,730 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:50:32,754 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:50:32,756 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:50:32,756 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:50:33,060 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:50:33,061 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 3583 ms
2021-12-09 05:50:33,419 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:50:33,509 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:50:33,740 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:50:33,786 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 05:50:33,787 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 05:50:33,788 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1142d377
2021-12-09 05:50:33,789 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@650aa077
2021-12-09 05:50:33,790 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@372461a9
2021-12-09 05:50:33,791 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@3086f480
2021-12-09 05:50:33,798 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 05:50:33,798 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 05:50:33,799 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b5f9003
2021-12-09 05:50:33,801 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 05:50:33,801 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 05:50:33,802 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@552fee7a
2021-12-09 05:50:33,803 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 05:50:33,804 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 05:50:33,804 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@66e827a8
2021-12-09 05:50:33,806 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 05:50:33,807 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 05:50:33,807 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2db15f70
2021-12-09 05:50:33,809 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6bcae9
2021-12-09 05:50:33,810 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6bcae9
2021-12-09 05:50:33,810 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6bcae9
2021-12-09 05:50:33,812 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 05:50:33,812 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 05:50:33,813 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e3236d
2021-12-09 05:50:33,814 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 05:50:33,815 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 05:50:33,815 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dba05b1
2021-12-09 05:50:33,817 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44b940a2
2021-12-09 05:50:33,817 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44b940a2
2021-12-09 05:50:33,819 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@72557746
2021-12-09 05:50:33,819 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@72557746
2021-12-09 05:50:33,821 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@6221b13b
2021-12-09 05:50:33,822 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@6221b13b
2021-12-09 05:50:33,827 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4052b19f
2021-12-09 05:50:33,828 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31efacad
2021-12-09 05:50:33,830 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5d124d29
2021-12-09 05:50:33,831 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d124d29
2021-12-09 05:50:33,832 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@7926352f
2021-12-09 05:50:33,833 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7926352f
2021-12-09 05:50:33,835 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@7ca492d9
2021-12-09 05:50:33,835 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7ca492d9
2021-12-09 05:50:33,837 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@486e9d1d
2021-12-09 05:50:33,838 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@486e9d1d
2021-12-09 05:50:33,839 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a531422
2021-12-09 05:50:33,840 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a531422
2021-12-09 05:50:33,841 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d28fb02
2021-12-09 05:50:33,842 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d28fb02
2021-12-09 05:50:33,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@101cf747
2021-12-09 05:50:33,844 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@101cf747
2021-12-09 05:50:33,846 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@70b6db83
2021-12-09 05:50:33,846 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@70b6db83
2021-12-09 05:50:33,848 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@370ef50b
2021-12-09 05:50:33,849 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@370ef50b
2021-12-09 05:50:33,856 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@2a0ea492
2021-12-09 05:50:33,857 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a0ea492
2021-12-09 05:50:33,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@49671897
2021-12-09 05:50:33,860 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@49671897
2021-12-09 05:50:33,863 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 05:50:33,863 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 05:50:33,864 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35bd8bc9
2021-12-09 05:50:33,866 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@191c6e13
2021-12-09 05:50:33,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 05:50:33,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 05:50:33,868 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28a6e171
2021-12-09 05:50:33,870 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@696b52bc
2021-12-09 05:50:33,871 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5b2b8d86
2021-12-09 05:50:33,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@14b528b6
2021-12-09 05:50:33,873 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@14b528b6
2021-12-09 05:50:33,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@fbe70d8
2021-12-09 05:50:33,875 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fbe70d8
2021-12-09 05:50:33,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7aea704c
2021-12-09 05:50:33,877 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7aea704c
2021-12-09 05:50:33,878 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@7d1c164a
2021-12-09 05:50:33,879 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d1c164a
2021-12-09 05:50:33,880 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@73bb1337
2021-12-09 05:50:33,881 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@73bb1337
2021-12-09 05:50:33,882 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15214920
2021-12-09 05:50:33,888 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 05:50:33,889 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 05:50:33,889 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@49580ca8
2021-12-09 05:50:33,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 05:50:33,891 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 05:50:33,892 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b733ef7
2021-12-09 05:50:33,893 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@f245bdd
2021-12-09 05:50:33,894 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@14b275bd
2021-12-09 05:50:33,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 05:50:33,896 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 05:50:33,897 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@5d71b500
2021-12-09 05:50:33,898 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 05:50:33,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 05:50:33,899 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ec6fede
2021-12-09 05:50:33,900 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@7f8a9454
2021-12-09 05:50:33,901 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@47044f7d
2021-12-09 05:50:33,903 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@58aa1d72
2021-12-09 05:50:33,904 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@58aa1d72
2021-12-09 05:50:33,905 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5eed6dfb
2021-12-09 05:50:33,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@3c28e5b6
2021-12-09 05:50:33,908 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3c28e5b6
2021-12-09 05:50:33,910 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@5d1d9d73
2021-12-09 05:50:33,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5d1d9d73
2021-12-09 05:50:33,911 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5db3d57c
2021-12-09 05:50:33,916 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7a84788f
2021-12-09 05:50:33,919 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@72ecbcb3
2021-12-09 05:50:33,923 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@25791d40
2021-12-09 05:50:33,924 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@25791d40
2021-12-09 05:50:33,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7abeabe9
2021-12-09 05:50:33,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a05dd30
2021-12-09 05:50:33,925 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b52699c
2021-12-09 05:50:33,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@dbed7fd
2021-12-09 05:50:33,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@250d440
2021-12-09 05:50:33,926 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76c86567
2021-12-09 05:50:33,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e5efcab
2021-12-09 05:50:33,927 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5a4dda2
2021-12-09 05:50:34,000 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:50:34,765 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:50:34,792 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:50:34,921 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44864536] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@455f4483]
2021-12-09 05:50:35,345 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@44864536] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@26865b57]
2021-12-09 05:50:36,152 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:50:36,164 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@26865b57] for TypeConfiguration
2021-12-09 05:50:36,172 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:50:38,005 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:50:38,550 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:50:39,148 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:50:39,165 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:50:39,199 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 10.785 seconds (JVM running for 12.684)
2021-12-09 05:50:47,088 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:50:47,089 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:50:47,091 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 2 ms
2021-12-09 05:50:47,275 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - UPDATE topic SET content = ? WHERE id_topic = ?
2021-12-09 05:50:47,305 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [VARCHAR] - [merci]
2021-12-09 05:50:47,307 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [2] as [BIGINT] - [2]
2021-12-09 05:51:25,068 [http-nio-5050-exec-3] DEBUG org.hibernate.SQL                                  - UPDATE topic SET content = ? WHERE id_topic = ?
2021-12-09 05:51:25,069 [http-nio-5050-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [VARCHAR] - [merci]
2021-12-09 05:51:25,069 [http-nio-5050-exec-3] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [2] as [BIGINT] - [3]
2021-12-09 05:51:39,935 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:51:39,935 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@26865b57] for TypeConfiguration
2021-12-09 05:51:39,935 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@62f40dc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@26865b57]
2021-12-09 05:51:39,938 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:51:39,945 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:53:30,059 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 35476 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:53:30,060 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:53:30,060 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:53:30,483 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:53:30,484 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:53:30,492 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 5 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:53:30,626 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:53:30,626 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:53:30,644 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:53:30,646 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:53:30,647 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:53:30,655 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:53:30,669 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 42 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:53:30,673 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:53:30,673 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:53:30,678 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:53:30,679 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:53:30,679 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:53:30,681 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:53:30,681 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 7 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:53:30,687 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:53:30,687 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:53:30,711 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 21 ms. Found 5 JPA repository interfaces.
2021-12-09 05:53:31,108 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:53:31,113 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:53:31,114 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:53:31,114 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:53:31,201 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:53:31,201 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1099 ms
2021-12-09 05:53:31,336 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:53:31,388 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:53:31,457 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:53:31,471 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@67688110
2021-12-09 05:53:31,472 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@67688110
2021-12-09 05:53:31,472 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@67688110
2021-12-09 05:53:31,472 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@42297bdf
2021-12-09 05:53:31,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@632b305d
2021-12-09 05:53:31,473 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@2db15f70
2021-12-09 05:53:31,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@66d25ba9
2021-12-09 05:53:31,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@66d25ba9
2021-12-09 05:53:31,474 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66d25ba9
2021-12-09 05:53:31,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@266e9dda
2021-12-09 05:53:31,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@266e9dda
2021-12-09 05:53:31,475 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@266e9dda
2021-12-09 05:53:31,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@7db40fd5
2021-12-09 05:53:31,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@7db40fd5
2021-12-09 05:53:31,476 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7db40fd5
2021-12-09 05:53:31,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@74c9e11
2021-12-09 05:53:31,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@74c9e11
2021-12-09 05:53:31,477 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74c9e11
2021-12-09 05:53:31,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@4844930a
2021-12-09 05:53:31,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@4844930a
2021-12-09 05:53:31,478 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4844930a
2021-12-09 05:53:31,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2f95653f
2021-12-09 05:53:31,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@2f95653f
2021-12-09 05:53:31,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f95653f
2021-12-09 05:53:31,479 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@38029686
2021-12-09 05:53:31,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@38029686
2021-12-09 05:53:31,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38029686
2021-12-09 05:53:31,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@74960e9d
2021-12-09 05:53:31,480 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@74960e9d
2021-12-09 05:53:31,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@61037caf
2021-12-09 05:53:31,481 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@61037caf
2021-12-09 05:53:31,482 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@7ed49a7f
2021-12-09 05:53:31,482 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@7ed49a7f
2021-12-09 05:53:31,482 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@619c93ca
2021-12-09 05:53:31,483 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bda157e
2021-12-09 05:53:31,483 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@4e4162bc
2021-12-09 05:53:31,483 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e4162bc
2021-12-09 05:53:31,484 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@61b65d54
2021-12-09 05:53:31,484 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@61b65d54
2021-12-09 05:53:31,485 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@3dbd7107
2021-12-09 05:53:31,485 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dbd7107
2021-12-09 05:53:31,485 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5edc3e29
2021-12-09 05:53:31,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5edc3e29
2021-12-09 05:53:31,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4b87760e
2021-12-09 05:53:31,486 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4b87760e
2021-12-09 05:53:31,487 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7c1503a3
2021-12-09 05:53:31,487 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7c1503a3
2021-12-09 05:53:31,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6070775e
2021-12-09 05:53:31,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6070775e
2021-12-09 05:53:31,488 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@168142da
2021-12-09 05:53:31,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@168142da
2021-12-09 05:53:31,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51ff3c4b
2021-12-09 05:53:31,489 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@51ff3c4b
2021-12-09 05:53:31,491 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@517704
2021-12-09 05:53:31,491 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@517704
2021-12-09 05:53:31,492 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@696b52bc
2021-12-09 05:53:31,492 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@696b52bc
2021-12-09 05:53:31,493 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@19f02280
2021-12-09 05:53:31,493 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19f02280
2021-12-09 05:53:31,493 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19f02280
2021-12-09 05:53:31,494 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14b528b6
2021-12-09 05:53:31,494 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@217dc48e
2021-12-09 05:53:31,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@217dc48e
2021-12-09 05:53:31,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@217dc48e
2021-12-09 05:53:31,495 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@632383b9
2021-12-09 05:53:31,496 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3b35798
2021-12-09 05:53:31,496 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@3e28d779
2021-12-09 05:53:31,496 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3e28d779
2021-12-09 05:53:31,497 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@13cc0b90
2021-12-09 05:53:31,497 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13cc0b90
2021-12-09 05:53:31,498 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@20a24edf
2021-12-09 05:53:31,498 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20a24edf
2021-12-09 05:53:31,498 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@35145874
2021-12-09 05:53:31,498 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@35145874
2021-12-09 05:53:31,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39e53bef
2021-12-09 05:53:31,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39e53bef
2021-12-09 05:53:31,499 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b29ab61
2021-12-09 05:53:31,500 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@437c4b25
2021-12-09 05:53:31,500 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@437c4b25
2021-12-09 05:53:31,500 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@437c4b25
2021-12-09 05:53:31,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@679d0be8
2021-12-09 05:53:31,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@679d0be8
2021-12-09 05:53:31,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@679d0be8
2021-12-09 05:53:31,501 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@361cd35c
2021-12-09 05:53:31,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@3b4086c1
2021-12-09 05:53:31,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@551be9f6
2021-12-09 05:53:31,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@551be9f6
2021-12-09 05:53:31,502 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@551be9f6
2021-12-09 05:53:31,503 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@44bc2449
2021-12-09 05:53:31,503 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@44bc2449
2021-12-09 05:53:31,503 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@44bc2449
2021-12-09 05:53:31,504 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@1f129467
2021-12-09 05:53:31,504 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@2dff7085
2021-12-09 05:53:31,505 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@395f52ed
2021-12-09 05:53:31,505 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@395f52ed
2021-12-09 05:53:31,505 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@65eb3597
2021-12-09 05:53:31,506 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@4a50c746
2021-12-09 05:53:31,506 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a50c746
2021-12-09 05:53:31,507 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@7f0f84d4
2021-12-09 05:53:31,507 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7f0f84d4
2021-12-09 05:53:31,507 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@590d6c76
2021-12-09 05:53:31,508 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@17c0274c
2021-12-09 05:53:31,508 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@1edccfd4
2021-12-09 05:53:31,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@6cc64028
2021-12-09 05:53:31,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6cc64028
2021-12-09 05:53:31,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a1568d6
2021-12-09 05:53:31,510 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@11c88cca
2021-12-09 05:53:31,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b37fbec
2021-12-09 05:53:31,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a216eb4
2021-12-09 05:53:31,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@bb3ecfe
2021-12-09 05:53:31,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5ec88f9e
2021-12-09 05:53:31,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7a04f730
2021-12-09 05:53:31,511 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b11620a
2021-12-09 05:53:31,531 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:53:31,804 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:53:31,812 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:53:31,856 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49631cfb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@77b71c9]
2021-12-09 05:53:31,979 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49631cfb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@324e8baa]
2021-12-09 05:53:32,258 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:53:32,263 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@324e8baa] for TypeConfiguration
2021-12-09 05:53:32,264 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:53:32,976 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:53:33,163 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:53:33,369 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:53:33,383 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:53:33,395 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 3.611 seconds (JVM running for 4.191)
2021-12-09 05:53:42,300 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:53:42,300 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:53:42,301 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 0 ms
2021-12-09 05:53:42,380 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - UPDATE topic SET content = ? WHERE id_topic = ?
2021-12-09 05:53:42,392 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [VARCHAR] - [merciii]
2021-12-09 05:53:42,393 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [2] as [BIGINT] - [3]
2021-12-09 05:59:05,260 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:59:05,261 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@324e8baa] for TypeConfiguration
2021-12-09 05:59:05,261 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6b283a8c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@324e8baa]
2021-12-09 05:59:05,269 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 05:59:05,274 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 05:59:12,847 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 35922 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 05:59:12,850 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 05:59:12,850 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 05:59:13,584 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:59:13,585 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:59:13,599 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 8 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 05:59:13,833 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:59:13,834 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:59:13,866 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:59:13,868 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:59:13,871 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:59:13,885 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 05:59:13,912 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 77 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 05:59:13,919 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:59:13,919 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 05:59:13,928 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:59:13,929 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:59:13,930 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:59:13,932 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 05:59:13,934 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 05:59:13,944 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 05:59:13,944 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 05:59:13,978 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 28 ms. Found 5 JPA repository interfaces.
2021-12-09 05:59:14,662 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 05:59:14,672 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 05:59:14,673 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 05:59:14,673 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 05:59:14,824 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 05:59:14,824 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1906 ms
2021-12-09 05:59:15,030 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 05:59:15,077 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 05:59:15,193 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 05:59:15,220 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7c11d32
2021-12-09 05:59:15,221 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7c11d32
2021-12-09 05:59:15,221 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c11d32
2021-12-09 05:59:15,222 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@707865bd
2021-12-09 05:59:15,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@67688110
2021-12-09 05:59:15,223 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@42297bdf
2021-12-09 05:59:15,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@1f15e689
2021-12-09 05:59:15,225 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@1f15e689
2021-12-09 05:59:15,226 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1f15e689
2021-12-09 05:59:15,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@58feb6b0
2021-12-09 05:59:15,227 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@58feb6b0
2021-12-09 05:59:15,228 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@58feb6b0
2021-12-09 05:59:15,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@14c99bf6
2021-12-09 05:59:15,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@14c99bf6
2021-12-09 05:59:15,229 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14c99bf6
2021-12-09 05:59:15,230 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@445bce9a
2021-12-09 05:59:15,231 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@445bce9a
2021-12-09 05:59:15,231 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@445bce9a
2021-12-09 05:59:15,232 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6ffd4c0d
2021-12-09 05:59:15,233 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@6ffd4c0d
2021-12-09 05:59:15,233 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6ffd4c0d
2021-12-09 05:59:15,234 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@f723cdb
2021-12-09 05:59:15,235 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@f723cdb
2021-12-09 05:59:15,235 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f723cdb
2021-12-09 05:59:15,236 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2cfe272f
2021-12-09 05:59:15,236 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@2cfe272f
2021-12-09 05:59:15,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2cfe272f
2021-12-09 05:59:15,237 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@380ce5a3
2021-12-09 05:59:15,238 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@380ce5a3
2021-12-09 05:59:15,239 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3c88191b
2021-12-09 05:59:15,240 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3c88191b
2021-12-09 05:59:15,241 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@5bc63e20
2021-12-09 05:59:15,241 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@5bc63e20
2021-12-09 05:59:15,242 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@d5e575c
2021-12-09 05:59:15,243 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7ed49a7f
2021-12-09 05:59:15,244 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@5e5ddfbc
2021-12-09 05:59:15,245 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e5ddfbc
2021-12-09 05:59:15,247 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@13213f26
2021-12-09 05:59:15,247 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13213f26
2021-12-09 05:59:15,249 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@402f8592
2021-12-09 05:59:15,250 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@402f8592
2021-12-09 05:59:15,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6403a4a5
2021-12-09 05:59:15,252 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6403a4a5
2021-12-09 05:59:15,253 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@559af296
2021-12-09 05:59:15,254 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@559af296
2021-12-09 05:59:15,255 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@268c030f
2021-12-09 05:59:15,256 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@268c030f
2021-12-09 05:59:15,257 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@113f9078
2021-12-09 05:59:15,257 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@113f9078
2021-12-09 05:59:15,259 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3f857e08
2021-12-09 05:59:15,260 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3f857e08
2021-12-09 05:59:15,262 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49671897
2021-12-09 05:59:15,264 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49671897
2021-12-09 05:59:15,269 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@4026461d
2021-12-09 05:59:15,270 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4026461d
2021-12-09 05:59:15,273 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@4b195203
2021-12-09 05:59:15,274 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b195203
2021-12-09 05:59:15,277 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f081b5d
2021-12-09 05:59:15,278 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f081b5d
2021-12-09 05:59:15,279 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f081b5d
2021-12-09 05:59:15,281 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@265c1a7c
2021-12-09 05:59:15,283 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@6f930e0
2021-12-09 05:59:15,284 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f930e0
2021-12-09 05:59:15,285 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f930e0
2021-12-09 05:59:15,287 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d2c345d
2021-12-09 05:59:15,288 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@32507479
2021-12-09 05:59:15,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@6a98f353
2021-12-09 05:59:15,290 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a98f353
2021-12-09 05:59:15,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@3830b06c
2021-12-09 05:59:15,292 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3830b06c
2021-12-09 05:59:15,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c7e73c5
2021-12-09 05:59:15,294 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c7e73c5
2021-12-09 05:59:15,296 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@42fc4ac4
2021-12-09 05:59:15,296 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@42fc4ac4
2021-12-09 05:59:15,297 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@764fffa0
2021-12-09 05:59:15,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@764fffa0
2021-12-09 05:59:15,298 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18e4674d
2021-12-09 05:59:15,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@1e1e837d
2021-12-09 05:59:15,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@1e1e837d
2021-12-09 05:59:15,300 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@1e1e837d
2021-12-09 05:59:15,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7ab2a07e
2021-12-09 05:59:15,303 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7ab2a07e
2021-12-09 05:59:15,304 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7ab2a07e
2021-12-09 05:59:15,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@6f85ee02
2021-12-09 05:59:15,306 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@7b14c61
2021-12-09 05:59:15,307 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@6b162ecc
2021-12-09 05:59:15,308 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b162ecc
2021-12-09 05:59:15,309 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@6b162ecc
2021-12-09 05:59:15,311 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5600a5da
2021-12-09 05:59:15,312 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5600a5da
2021-12-09 05:59:15,312 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5600a5da
2021-12-09 05:59:15,313 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@40d848f9
2021-12-09 05:59:15,315 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@44bc2449
2021-12-09 05:59:15,318 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@501957bf
2021-12-09 05:59:15,320 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@501957bf
2021-12-09 05:59:15,321 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c742b84
2021-12-09 05:59:15,324 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@2bebd114
2021-12-09 05:59:15,325 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2bebd114
2021-12-09 05:59:15,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@79ecc507
2021-12-09 05:59:15,329 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79ecc507
2021-12-09 05:59:15,330 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41def031
2021-12-09 05:59:15,331 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7f0f84d4
2021-12-09 05:59:15,333 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@dbed7fd
2021-12-09 05:59:15,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@26c8b296
2021-12-09 05:59:15,337 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@26c8b296
2021-12-09 05:59:15,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c98b4eb
2021-12-09 05:59:15,338 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45801322
2021-12-09 05:59:15,339 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@756b2d90
2021-12-09 05:59:15,340 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 05:59:15,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 05:59:15,341 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 05:59:15,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 05:59:15,342 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@340cb97f
2021-12-09 05:59:15,384 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 05:59:15,810 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 05:59:15,823 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 05:59:15,897 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e154848] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@16ea0f22]
2021-12-09 05:59:16,119 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e154848] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@55c03e4]
2021-12-09 05:59:16,556 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 05:59:16,564 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@55c03e4] for TypeConfiguration
2021-12-09 05:59:16,566 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 05:59:17,529 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 05:59:17,882 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 05:59:18,268 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 05:59:18,287 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 05:59:18,311 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 6.011 seconds (JVM running for 6.919)
2021-12-09 05:59:45,638 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 05:59:45,639 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 05:59:45,640 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 05:59:45,731 [http-nio-5050-exec-2] ERROR o.a.c.c.C.[.[.[/].[dispatcherServlet]              - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: Executing an update/delete query; nested exception is javax.persistence.TransactionRequiredException: Executing an update/delete query] with root cause
javax.persistence.TransactionRequiredException: Executing an update/delete query
	at org.hibernate.internal.AbstractSharedSessionContract.checkTransactionNeededForUpdateOperation(AbstractSharedSessionContract.java:422)
	at org.hibernate.query.internal.AbstractProducedQuery.executeUpdate(AbstractProducedQuery.java:1679)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$ModifyingExecution.doExecute(JpaQueryExecution.java:239)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy108.giveThumbsUp(Unknown Source)
	at tech.goodquestion.website.service.TopicServiceImpl.giveThumbsUp(TopicServiceImpl.java:47)
	at tech.goodquestion.website.controller.TopicController.updateTopic(TopicController.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:832)
2021-12-09 06:00:06,396 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 06:00:06,397 [SpringApplicationShutdownHook] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@55c03e4] for TypeConfiguration
2021-12-09 06:00:06,397 [SpringApplicationShutdownHook] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4737d1cd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@55c03e4]
2021-12-09 06:00:06,401 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown initiated...
2021-12-09 06:00:06,407 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Shutdown completed.
2021-12-09 06:00:12,641 [main] INFO  t.goodquestion.GoodquestionApplication             - Starting GoodquestionApplication using Java 15.0.1 on Lemines-MBP with PID 36018 (/Users/lem/Documents/Projekte/goodquestion/target/classes started by lem in /Users/lem/Documents/Projekte/goodquestion)
2021-12-09 06:00:12,644 [main] DEBUG t.goodquestion.GoodquestionApplication             - Running with Spring Boot v2.5.4, Spring v5.3.9
2021-12-09 06:00:12,644 [main] INFO  t.goodquestion.GoodquestionApplication             - No active profile set, falling back to default profiles: default
2021-12-09 06:00:13,353 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 06:00:13,354 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 06:00:13,367 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 8 ms. Found 0 Elasticsearch repository interfaces.
2021-12-09 06:00:13,591 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 06:00:13,591 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2021-12-09 06:00:13,624 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 06:00:13,627 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 06:00:13,629 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 06:00:13,643 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ElasticsearchRepository, org.springframework.data.elasticsearch.repository.ElasticsearchRepository.
2021-12-09 06:00:13,668 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 76 ms. Found 1 Elasticsearch repository interfaces.
2021-12-09 06:00:13,674 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 06:00:13,675 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2021-12-09 06:00:13,684 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.ActiveMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 06:00:13,685 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.AmountMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 06:00:13,686 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.discord.repository.NewMemberRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 06:00:13,688 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport  - Spring Data Reactive Elasticsearch - Could not safely identify store assignment for repository candidate interface tech.goodquestion.website.repository.UserRepository. If you want this repository to be a Reactive Elasticsearch repository, consider annotating your entities with one of these annotations: org.springframework.data.elasticsearch.annotations.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.
2021-12-09 06:00:13,689 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 12 ms. Found 0 Reactive Elasticsearch repository interfaces.
2021-12-09 06:00:13,699 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Multiple Spring Data modules found, entering strict repository configuration mode!
2021-12-09 06:00:13,700 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-09 06:00:13,736 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate          - Finished Spring Data repository scanning in 31 ms. Found 5 JPA repository interfaces.
2021-12-09 06:00:14,389 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat initialized with port(s): 5050 (http)
2021-12-09 06:00:14,399 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Initializing ProtocolHandler ["http-nio-5050"]
2021-12-09 06:00:14,399 [main] INFO  org.apache.catalina.core.StandardService           - Starting service [Tomcat]
2021-12-09 06:00:14,400 [main] INFO  org.apache.catalina.core.StandardEngine            - Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-12-09 06:00:14,550 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring embedded WebApplicationContext
2021-12-09 06:00:14,551 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext     - Root WebApplicationContext: initialization completed in 1846 ms
2021-12-09 06:00:14,763 [main] INFO  o.hibernate.jpa.internal.util.LogHelper            - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-09 06:00:14,818 [main] INFO  org.hibernate.Version                              - HHH000412: Hibernate ORM core version 5.4.32.Final
2021-12-09 06:00:14,972 [main] INFO  org.hibernate.annotations.common.Version           - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-12-09 06:00:15,006 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7f5fcfe9
2021-12-09 06:00:15,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration boolean -> org.hibernate.type.BooleanType@7f5fcfe9
2021-12-09 06:00:15,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f5fcfe9
2021-12-09 06:00:15,007 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@548e43b1
2021-12-09 06:00:15,008 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration true_false -> org.hibernate.type.TrueFalseType@616a06e3
2021-12-09 06:00:15,009 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration yes_no -> org.hibernate.type.YesNoType@6a55594b
2021-12-09 06:00:15,010 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@21a46ff1
2021-12-09 06:00:15,011 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte -> org.hibernate.type.ByteType@21a46ff1
2021-12-09 06:00:15,011 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21a46ff1
2021-12-09 06:00:15,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration character -> org.hibernate.type.CharacterType@5efe47fd
2021-12-09 06:00:15,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char -> org.hibernate.type.CharacterType@5efe47fd
2021-12-09 06:00:15,012 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5efe47fd
2021-12-09 06:00:15,013 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@27a6fef2
2021-12-09 06:00:15,014 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration short -> org.hibernate.type.ShortType@27a6fef2
2021-12-09 06:00:15,014 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@27a6fef2
2021-12-09 06:00:15,015 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration integer -> org.hibernate.type.IntegerType@31b0f02
2021-12-09 06:00:15,015 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration int -> org.hibernate.type.IntegerType@31b0f02
2021-12-09 06:00:15,015 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@31b0f02
2021-12-09 06:00:15,017 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@149274cb
2021-12-09 06:00:15,017 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration long -> org.hibernate.type.LongType@149274cb
2021-12-09 06:00:15,017 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Long -> org.hibernate.type.LongType@149274cb
2021-12-09 06:00:15,018 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@101bdd1c
2021-12-09 06:00:15,018 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration float -> org.hibernate.type.FloatType@101bdd1c
2021-12-09 06:00:15,019 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@101bdd1c
2021-12-09 06:00:15,020 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@3dc68586
2021-12-09 06:00:15,020 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration double -> org.hibernate.type.DoubleType@3dc68586
2021-12-09 06:00:15,021 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc68586
2021-12-09 06:00:15,022 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31da0434
2021-12-09 06:00:15,022 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31da0434
2021-12-09 06:00:15,023 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@fb5aeed
2021-12-09 06:00:15,023 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@fb5aeed
2021-12-09 06:00:15,024 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration string -> org.hibernate.type.StringType@670342a2
2021-12-09 06:00:15,025 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.String -> org.hibernate.type.StringType@670342a2
2021-12-09 06:00:15,026 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14fc9bd
2021-12-09 06:00:15,026 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b41e1bf
2021-12-09 06:00:15,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration url -> org.hibernate.type.UrlType@21390938
2021-12-09 06:00:15,027 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.net.URL -> org.hibernate.type.UrlType@21390938
2021-12-09 06:00:15,028 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Duration -> org.hibernate.type.DurationType@72fbf94d
2021-12-09 06:00:15,029 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@72fbf94d
2021-12-09 06:00:15,030 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Instant -> org.hibernate.type.InstantType@7f2c57fe
2021-12-09 06:00:15,030 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7f2c57fe
2021-12-09 06:00:15,031 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f8a02cf
2021-12-09 06:00:15,031 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f8a02cf
2021-12-09 06:00:15,032 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@a90e2c1
2021-12-09 06:00:15,033 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@a90e2c1
2021-12-09 06:00:15,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b24ea2a
2021-12-09 06:00:15,034 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b24ea2a
2021-12-09 06:00:15,035 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47df5041
2021-12-09 06:00:15,035 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@47df5041
2021-12-09 06:00:15,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@224c7de4
2021-12-09 06:00:15,036 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@224c7de4
2021-12-09 06:00:15,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47a4eee2
2021-12-09 06:00:15,038 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47a4eee2
2021-12-09 06:00:15,040 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration date -> org.hibernate.type.DateType@1a8e9ed9
2021-12-09 06:00:15,040 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1a8e9ed9
2021-12-09 06:00:15,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration time -> org.hibernate.type.TimeType@31a136a6
2021-12-09 06:00:15,042 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@31a136a6
2021-12-09 06:00:15,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timestamp -> org.hibernate.type.TimestampType@29013ef2
2021-12-09 06:00:15,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29013ef2
2021-12-09 06:00:15,044 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29013ef2
2021-12-09 06:00:15,045 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f395ce1
2021-12-09 06:00:15,046 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar -> org.hibernate.type.CalendarType@7d2c9361
2021-12-09 06:00:15,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7d2c9361
2021-12-09 06:00:15,047 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7d2c9361
2021-12-09 06:00:15,048 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@296edc75
2021-12-09 06:00:15,049 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@339f3a55
2021-12-09 06:00:15,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration locale -> org.hibernate.type.LocaleType@4702e7a5
2021-12-09 06:00:15,050 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4702e7a5
2021-12-09 06:00:15,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration currency -> org.hibernate.type.CurrencyType@784d9bc
2021-12-09 06:00:15,051 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@784d9bc
2021-12-09 06:00:15,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3554bdc0
2021-12-09 06:00:15,052 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3554bdc0
2021-12-09 06:00:15,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration class -> org.hibernate.type.ClassType@491f8831
2021-12-09 06:00:15,053 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@491f8831
2021-12-09 06:00:15,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@11df2829
2021-12-09 06:00:15,054 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@11df2829
2021-12-09 06:00:15,055 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@280fafd
2021-12-09 06:00:15,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration binary -> org.hibernate.type.BinaryType@8840c98
2021-12-09 06:00:15,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration byte[] -> org.hibernate.type.BinaryType@8840c98
2021-12-09 06:00:15,056 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [B -> org.hibernate.type.BinaryType@8840c98
2021-12-09 06:00:15,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@580902cd
2021-12-09 06:00:15,057 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@580902cd
2021-12-09 06:00:15,058 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@580902cd
2021-12-09 06:00:15,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration row_version -> org.hibernate.type.RowVersionType@47044f7d
2021-12-09 06:00:15,059 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration image -> org.hibernate.type.ImageType@3b435211
2021-12-09 06:00:15,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration characters -> org.hibernate.type.CharArrayType@33d7765a
2021-12-09 06:00:15,060 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration char[] -> org.hibernate.type.CharArrayType@33d7765a
2021-12-09 06:00:15,061 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [C -> org.hibernate.type.CharArrayType@33d7765a
2021-12-09 06:00:15,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13250132
2021-12-09 06:00:15,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13250132
2021-12-09 06:00:15,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13250132
2021-12-09 06:00:15,062 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration text -> org.hibernate.type.TextType@46a123e4
2021-12-09 06:00:15,063 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration ntext -> org.hibernate.type.NTextType@3a296107
2021-12-09 06:00:15,064 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration blob -> org.hibernate.type.BlobType@764a3e5d
2021-12-09 06:00:15,065 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@764a3e5d
2021-12-09 06:00:15,066 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74ba6ff5
2021-12-09 06:00:15,067 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration clob -> org.hibernate.type.ClobType@18dcb8a7
2021-12-09 06:00:15,068 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18dcb8a7
2021-12-09 06:00:15,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration nclob -> org.hibernate.type.NClobType@5e85c21b
2021-12-09 06:00:15,069 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5e85c21b
2021-12-09 06:00:15,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4966bab1
2021-12-09 06:00:15,070 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5aa76ad2
2021-12-09 06:00:15,072 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration serializable -> org.hibernate.type.SerializableType@7e5efcab
2021-12-09 06:00:15,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration object -> org.hibernate.type.ObjectType@7f27f59b
2021-12-09 06:00:15,074 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f27f59b
2021-12-09 06:00:15,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3520958b
2021-12-09 06:00:15,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cc64028
2021-12-09 06:00:15,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@291a4791
2021-12-09 06:00:15,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5b1e88f
2021-12-09 06:00:15,075 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@340cb97f
2021-12-09 06:00:15,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6a1568d6
2021-12-09 06:00:15,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@11c88cca
2021-12-09 06:00:15,076 [main] DEBUG org.hibernate.type.BasicTypeRegistry               - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b37fbec
2021-12-09 06:00:15,112 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Starting...
2021-12-09 06:00:15,546 [main] INFO  com.zaxxer.hikari.HikariDataSource                 - HikariPool-1 - Start completed.
2021-12-09 06:00:15,561 [main] INFO  org.hibernate.dialect.Dialect                      - HHH000400: Using dialect: org.hibernate.dialect.MariaDB103Dialect
2021-12-09 06:00:15,630 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16e195cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3212d853]
2021-12-09 06:00:15,870 [main] DEBUG o.h.type.spi.TypeConfiguration$Scope               - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@16e195cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7a0f06ad]
2021-12-09 06:00:16,336 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator                 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-09 06:00:16,350 [main] TRACE o.h.type.spi.TypeConfiguration$Scope               - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7a0f06ad] for TypeConfiguration
2021-12-09 06:00:16,353 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean     - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-09 06:00:17,340 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-09 06:00:17,771 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)
2021-12-09 06:00:18,129 [main] INFO  o.apache.coyote.http11.Http11NioProtocol           - Starting ProtocolHandler ["http-nio-5050"]
2021-12-09 06:00:18,139 [main] INFO  o.s.b.w.embedded.tomcat.TomcatWebServer            - Tomcat started on port(s): 5050 (http) with context path ''
2021-12-09 06:00:18,159 [main] INFO  t.goodquestion.GoodquestionApplication             - Started GoodquestionApplication in 6.019 seconds (JVM running for 6.944)
2021-12-09 06:00:20,569 [http-nio-5050-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/]                 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-12-09 06:00:20,570 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Initializing Servlet 'dispatcherServlet'
2021-12-09 06:00:20,571 [http-nio-5050-exec-2] INFO  o.s.web.servlet.DispatcherServlet                  - Completed initialization in 1 ms
2021-12-09 06:00:20,687 [http-nio-5050-exec-2] DEBUG org.hibernate.SQL                                  - UPDATE topic SET vote = vote + 1 WHERE id_topic = ?
2021-12-09 06:00:20,703 [http-nio-5050-exec-2] TRACE o.h.type.descriptor.sql.BasicBinder                - binding parameter [1] as [BIGINT] - [3]
